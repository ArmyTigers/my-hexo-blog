<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JunHu Blog</title>
  
  
  <link href="https://armytigers.github.io/my-hexo-blog/atom.xml" rel="self"/>
  
  <link href="https://armytigers.github.io/my-hexo-blog/"/>
  <updated>2022-07-11T02:01:56.527Z</updated>
  <id>https://armytigers.github.io/my-hexo-blog/</id>
  
  <author>
    <name>JunHu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac添加永久路由</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/11/Mac%E6%B7%BB%E5%8A%A0%E6%B0%B8%E4%B9%85%E8%B7%AF%E7%94%B1/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/11/Mac%E6%B7%BB%E5%8A%A0%E6%B0%B8%E4%B9%85%E8%B7%AF%E7%94%B1/</id>
    <published>2022-07-11T01:39:23.000Z</published>
    <updated>2022-07-11T02:01:56.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac添加永久路由"><a href="#Mac添加永久路由" class="headerlink" title="Mac添加永久路由"></a>Mac添加永久路由</h1><span id="more"></span><h2 id="查看网卡名称列表"><a href="#查看网卡名称列表" class="headerlink" title="查看网卡名称列表"></a>查看网卡名称列表</h2><pre><code>networksetup -listallnetworkservices</code></pre><h2 id="指定网卡名称添加路由"><a href="#指定网卡名称添加路由" class="headerlink" title="指定网卡名称添加路由"></a>指定网卡名称添加路由</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">networksetup -setadditionalroutes &quot;Wi-Fi&quot; 10.123.0.0 255.255.0.0 10.0.0.1</span><br><span class="line">networksetup -setadditionalroutes &#x27;USB 10/100 LAN&#x27; 10.123.0.0 255.255.0.0 10.0.0.1</span><br><span class="line">//也可以添加多条路由</span><br><span class="line">networksetup -setadditionalroutes &quot;Wi-Fi&quot; 172.11.0.0 255.255.255.0 172.16.198.1 192.160.0.0 255.255.255.0 172.16.198.1</span><br><span class="line">//注意：上面相当于添加了两条路由</span><br><span class="line">172.11.0.0/24 都从172.16.198.1</span><br><span class="line">192.160.0.0/24 都从172.16.198.1</span><br></pre></td></tr></table></figure><h2 id="查看添加的路由"><a href="#查看添加的路由" class="headerlink" title="查看添加的路由"></a>查看添加的路由</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">networksetup -getadditionalroutes Wi-Fi</span><br></pre></td></tr></table></figure><h2 id="清空路由表"><a href="#清空路由表" class="headerlink" title="清空路由表"></a>清空路由表</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">networksetup -setadditionalroutes Wi-Fi</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Mac添加永久路由&quot;&gt;&lt;a href=&quot;#Mac添加永久路由&quot; class=&quot;headerlink&quot; title=&quot;Mac添加永久路由&quot;&gt;&lt;/a&gt;Mac添加永久路由&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Activiti6表结构说明</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Activiti6%E8%A1%A8%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Activiti6%E8%A1%A8%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E/</id>
    <published>2022-07-06T11:50:00.000Z</published>
    <updated>2022-07-06T11:54:36.574Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表结构说明"><a href="#表结构说明" class="headerlink" title="表结构说明"></a>表结构说明</h1><span id="more"></span><h2 id="表名规则"><a href="#表名规则" class="headerlink" title="表名规则:"></a>表名规则:</h2><h3 id="Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。"><a href="#Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。" class="headerlink" title="Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。"></a>Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。</h3><h2 id="表前缀说明"><a href="#表前缀说明" class="headerlink" title="表前缀说明"></a>表前缀说明</h2><ul><li><p>ACT_GE_  (GE)   表示  general 全局通用数据及设置，各种情况都使用的数据。</p></li><li><p>ACT_HI_  (HI)   表示  history 历史数据表，包含着程执行的历史相关数据，如结束的流程实例，变量，任务，等等</p></li><li><p>ACT_ID_  (ID)   表示  identity 组织机构，用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。</p></li><li><p>ACT_RE_  (RE)   表示  repository 存储，包含的是静态信息，如，流程定义，流程的资源(图片，规则等)。</p></li><li><p>ACT_RU_  (RU)   表示  runtime 运行时，运行时的流程变量，用户任务，变量，职责(job)等运行时的数据。Activiti 只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。</p></li></ul><h2 id="Activiti表总览"><a href="#Activiti表总览" class="headerlink" title="Activiti表总览"></a>Activiti表总览</h2><h3 id="全局数据表-ACT-GE"><a href="#全局数据表-ACT-GE" class="headerlink" title="全局数据表 (ACT_GE_)"></a>全局数据表 (ACT_GE_)</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_GE_BYTEARRAY</td><td>二进制数据表，存储通用的流程定义和流程资源。</td></tr><tr><td>ACT_GE_PROPERTY</td><td>系统相关属性，属性数据表存储整个流程引擎级别的数据，初始化表结构时，会默认插入三条记录。</td></tr></tbody></table><h3 id="流程历史记录表-ACT-HI"><a href="#流程历史记录表-ACT-HI" class="headerlink" title="流程历史记录表 (ACT_HI_)"></a>流程历史记录表 (ACT_HI_)</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_ HI_ACTINST</td><td>历史节点表</td></tr><tr><td>ACT_ HI_ATTACHMENT</td><td>历史附件表</td></tr><tr><td>ACT_ HI_COMMENT</td><td>历史意见表</td></tr><tr><td>ACT_ HI_ DETAIL</td><td>历史详情表，提供历史变量的查询</td></tr><tr><td>ACT_ HI_ IDENTITYLINK</td><td>历史流程人员表</td></tr><tr><td>ACT_ HI_ PROCINST</td><td>历史流程实例表</td></tr><tr><td>ACT_HI_TASKINST</td><td>历史任务实例表</td></tr><tr><td>ACT_HI_VARINST</td><td>历史变量表</td></tr></tbody></table><h3 id="用户用户组表-ACT-ID"><a href="#用户用户组表-ACT-ID" class="headerlink" title="用户用户组表 (ACT_ID_)"></a>用户用户组表 (ACT_ID_)</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_ID_GROUP</td><td>用户组信息表</td></tr><tr><td>ACT_ID_INFO</td><td>用户扩展信息表</td></tr><tr><td>ACT_ID_MEMBERSHIP</td><td>用户与用户组对应信息表</td></tr><tr><td>ACT_ID_USER</td><td>用户信息表</td></tr></tbody></table><h3 id="流程定义表-ACT-RE"><a href="#流程定义表-ACT-RE" class="headerlink" title="流程定义表 (ACT_RE_)"></a>流程定义表 (ACT_RE_)</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_RE_DEPLOYMENT</td><td>部署信息表</td></tr><tr><td>ACT_RE_MODEL</td><td>流程设计模型部署表</td></tr><tr><td>ACT_RE_PROCDEF</td><td>流程定义数据表</td></tr></tbody></table><h3 id="运行实例表-ACT-RU"><a href="#运行实例表-ACT-RU" class="headerlink" title="运行实例表 (ACT_RU_)"></a>运行实例表 (ACT_RU_)</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_RU_EVENT_SUBSCR</td><td>运行时事件 throwEvent、catchEvent 时间监听信息表</td></tr><tr><td>ACT_RU_EXECUTION</td><td>运行时流程执行实例</td></tr><tr><td>ACT_RU_IDENTITYLINK</td><td>运行时流程人员表，主要存储任务节点与参与者的相关信息</td></tr><tr><td>ACT_RU_JOB</td><td>运行时定时任务数据表</td></tr><tr><td>ACT_RU_TASK</td><td>运行时任务节点表</td></tr><tr><td>ACT_RU_VARIABLE</td><td>运行时流程变量数据表</td></tr></tbody></table><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><table><thead><tr><th>表名</th><th>解释</th></tr></thead><tbody><tr><td>ACT_EVT_LOG</td><td>事件日志</td></tr><tr><td>ACT_PROCDEF_INFO</td><td>流程定义的动态变更信息</td></tr></tbody></table><h2 id="Acticiti表详情"><a href="#Acticiti表详情" class="headerlink" title="Acticiti表详情"></a>Acticiti表详情</h2><h3 id="ACT-GE-BYTEARRAY表结构"><a href="#ACT-GE-BYTEARRAY表结构" class="headerlink" title="ACT_GE_BYTEARRAY表结构"></a>ACT_GE_BYTEARRAY表结构</h3><pre><code> 二进制数据表，存储通用的流程定义和流程资源。(act_ge_bytearray)</code></pre><p>​    保存流程定义图片和xml、Serializable(序列化)的变量,即保存所有二进制数据，特别注意类路径部署时候，不要把svn等隐藏文件或者其他与流程无关的文件也一起部署到该表中，会造成一些错误(可能导致流程定义无法删除)</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>Y</td><td></td><td>主键ID</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>Y</td><td>Version(版本)</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>Y</td><td>部署的文件名称，如：leave.bpmn.png,leave.bpmn20.xml</td></tr><tr><td>DEPLOYMENT_ID_</td><td>部署ID</td><td>nvarchar(64)</td><td></td><td>Y</td><td>部署表ID</td></tr><tr><td>BYTES_</td><td>字节</td><td>varbinary(max)</td><td></td><td>Y</td><td>部署文件</td></tr><tr><td>GENERATED_</td><td>是否是引擎生成</td><td>tinyint</td><td></td><td>Y</td><td>0为用户生成，1为activiti生成</td></tr></tbody></table><h3 id="ACT-GE-PROPERTY表结构"><a href="#ACT-GE-PROPERTY表结构" class="headerlink" title="ACT_GE_PROPERTY表结构"></a>ACT_GE_PROPERTY表结构</h3><p>​    属性数据表(act_ge_property)</p><p>​    属性数据表。存储整个流程引擎级别的数据。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>NAME_</td><td>名称</td><td>nvarchar(64)</td><td>√</td><td></td><td>schema.versionschema.historynext.dbid</td></tr><tr><td>VALUE_</td><td>值</td><td>nvarchar(300)</td><td></td><td>√</td><td>5.<strong>create</strong>**(**<strong>5.</strong>)</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>version</td></tr></tbody></table><h3 id="ACT-HI-ACTINST表结构"><a href="#ACT-HI-ACTINST表结构" class="headerlink" title="ACT_HI_ACTINST表结构"></a>ACT_HI_ACTINST表结构</h3><p>​    历史节点表(act_hi_actinst)</p><p>​    历史活动信息。这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td></td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td></td><td></td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td></td><td></td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td></td><td></td></tr><tr><td>ACT_ID_</td><td>节点ID</td><td>nvarchar(225)</td><td></td><td></td><td>节点定义ID</td></tr><tr><td>TASK_ID_</td><td>任务实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>任务实例ID 其他节点类型实例ID在这里为空</td></tr><tr><td>CALL_PROC_INST_ID_</td><td>调用外部的流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>调用外部流程的流程实例ID’</td></tr><tr><td>ACT_NAME_</td><td>节点名称</td><td>nvarchar(225)</td><td></td><td>√</td><td>节点定义名称</td></tr><tr><td>ACT_TYPE_</td><td>节点类型</td><td>nvarchar(225)</td><td></td><td></td><td>如startEvent、userTask</td></tr><tr><td>ASSIGNEE_</td><td>签收人</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点签收人</td></tr><tr><td>START_TIME_</td><td>开始时间</td><td>datetime</td><td></td><td></td><td>2013-09-15 11:30:00</td></tr><tr><td>END_TIME_</td><td>结束时间</td><td>datetime</td><td></td><td>√</td><td>2013-09-15 11:30:00</td></tr><tr><td>DURATION_</td><td>耗时</td><td>numeric(19,0)</td><td></td><td>√</td><td>毫秒值</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="ACT-HI-ATTACHMENT表结构"><a href="#ACT-HI-ATTACHMENT表结构" class="headerlink" title="ACT_HI_ATTACHMENT表结构"></a>ACT_HI_ATTACHMENT表结构</h3><pre><code> 历史附件表( act_hi_attachment )</code></pre><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>REV_</td><td>乐观锁</td><td>integer</td><td></td><td>√</td><td>Version</td></tr><tr><td>USER_ID_</td><td>用户ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>用户ID</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>附件名称</td></tr><tr><td>DESCRIPTION_</td><td>描述</td><td>nvarchar(4000)</td><td></td><td>√</td><td>描述</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>附件类型</td></tr><tr><td>TASK_ID_</td><td>任务实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点实例ID</td></tr><tr><td>PROC_INST_ ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>URL_</td><td>URL_</td><td>nvarchar(4000)</td><td></td><td>√</td><td>附件地址</td></tr><tr><td>CONTENT_ ID_</td><td>字节表的ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>ACT_GE_BYTEARRAY的ID</td></tr></tbody></table><h3 id="ACT-HI-COMMENT表结构"><a href="#ACT-HI-COMMENT表结构" class="headerlink" title="ACT_HI_COMMENT表结构"></a>ACT_HI_COMMENT表结构</h3><p> 历史意见表( act_hi_comment )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>类型：event(事件)comment(意见)</td></tr><tr><td>TIME_</td><td>时间</td><td>datetime</td><td></td><td></td><td>填写时间’</td></tr><tr><td>USER_ID_</td><td>用户ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>填写人</td></tr><tr><td>TASK_ID_</td><td>节点任务ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点实例ID</td></tr><tr><td>PROC_INST_ ID_</td><td>流程实例ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>ACTION_</td><td>行为类型</td><td>nvarchar(64)</td><td></td><td>√</td><td>见备注1</td></tr><tr><td>MESSAGE_</td><td>基本内容</td><td>nvarchar(4000)</td><td></td><td>√</td><td>用于存放流程产生的信息，比如审批意见</td></tr><tr><td>FULL_MSG_</td><td>全部内容</td><td>varbinary(max)</td><td></td><td>√</td><td>附件地址</td></tr></tbody></table><h3 id="ACT-HI-DETAIL表结构"><a href="#ACT-HI-DETAIL表结构" class="headerlink" title="ACT_HI_DETAIL表结构"></a>ACT_HI_DETAIL表结构</h3><pre><code> 历史详情表( act_hi_detail )</code></pre><p>​    流程中产生的变量详细，包括控制流程流转的变量，业务表单中填写的流程需要用到的变量等。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td></td><td>见备注2</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>TASK_ID_</td><td>任务实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>任务实例ID</td></tr><tr><td>ACT_INST_ID_</td><td>节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>ACT_HI_ACTINST表的ID</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td></td><td>名称</td></tr><tr><td>VAR_TYPE_</td><td>参数类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>见备注3</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>Version</td></tr><tr><td>TIME_</td><td>时间戳</td><td>datetime</td><td></td><td></td><td>创建时间</td></tr><tr><td>BYTEARRAY_ID_</td><td>字节表ID</td><td>nvarchar</td><td></td><td>√</td><td>ACT_GE_BYTEARRAY表的ID</td></tr><tr><td>DOUBLE_</td><td>DOUBLE_</td><td>double precision</td><td></td><td>√</td><td>存储变量类型为Double</td></tr><tr><td>LONG_</td><td>LONG_</td><td>numeric</td><td></td><td>√</td><td>存储变量类型为long</td></tr><tr><td>TEXT_</td><td>TEXT_</td><td>nvarchar</td><td></td><td>√</td><td>存储变量值类型为String</td></tr><tr><td>TEXT2_</td><td>TEXT2_</td><td>nvarchar</td><td></td><td>√</td><td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td></tr></tbody></table><h3 id="ACT-HI-IDENTITYLINK表结构"><a href="#ACT-HI-IDENTITYLINK表结构" class="headerlink" title="ACT_HI_IDENTITYLINK表结构"></a>ACT_HI_IDENTITYLINK表结构</h3><p>​    历史流程人员表( act_ru_identitylink )</p><p>​    任务参与者数据表。主要存储历史节点参与者的信息 </p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>GROUP_ID_</td><td>组ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>组ID</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>备注4</td></tr><tr><td>USER_ID_</td><td>用户ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>用户ID</td></tr><tr><td>TASK_ID_</td><td>节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点实例ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr></tbody></table><h3 id="ACT-HI-PROCINST表结构"><a href="#ACT-HI-PROCINST表结构" class="headerlink" title="ACT_HI_PROCINST表结构"></a>ACT_HI_PROCINST表结构</h3><pre><code> 历史流程实例表(act_hi_procinst)</code></pre><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td></td><td>流程实例ID</td></tr><tr><td>BUSINESS_KEY_</td><td>业务主键</td><td>nvarchar(255)</td><td></td><td>√</td><td>业务主键，业务表单的ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td></td><td>流程定义ID</td></tr><tr><td>START_TIME_</td><td>开始时间</td><td>datetime</td><td></td><td></td><td>开始时间</td></tr><tr><td>END_TIME_</td><td>结束时间</td><td>datetime</td><td></td><td>√</td><td>结束时间</td></tr><tr><td>DURATION_</td><td>耗时</td><td>Numeric(19)</td><td></td><td>√</td><td>耗时</td></tr><tr><td>START_USER_ID_</td><td>起草人</td><td>nvarchar(255)</td><td></td><td>√</td><td>起草人</td></tr><tr><td>START_ACT_ID_</td><td>开始节点ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>起草环节ID</td></tr><tr><td>END_ACT_ID_</td><td>结束节点ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>结束环节ID</td></tr><tr><td>SUPER_PROCESS_INSTANCE_ID_</td><td>父流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>父流程实例ID</td></tr><tr><td>DELETE_REASON_</td><td>删除原因</td><td>nvarchar(4000)</td><td></td><td>√</td><td>删除原因</td></tr></tbody></table><h3 id="ACT-HI-TASKINST表结构"><a href="#ACT-HI-TASKINST表结构" class="headerlink" title="ACT_HI_TASKINST表结构"></a>ACT_HI_TASKINST表结构</h3><pre><code> 历史任务实例表( act_hi_taskinst )</code></pre><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程定义ID</td></tr><tr><td>TASK_DEF_KEY_</td><td>节点定义ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>节点定义ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>NAME_</td><td>名称</td><td>varchar(255)</td><td></td><td>√</td><td>名称</td></tr><tr><td>PARENT_TASK_ID_</td><td>父节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>父节点实例ID</td></tr><tr><td>DESCRIPTION_</td><td>描述</td><td>nvarchar(400)</td><td></td><td>√</td><td>描述</td></tr><tr><td>OWNER_</td><td>实际签收人 任务的拥有者</td><td>nvarchar(255)</td><td></td><td>√</td><td>签收人(默认为空，只有在委托时才有值)</td></tr><tr><td>ASSIGNEE_</td><td>签收人或被委托</td><td>nvarchar(255)</td><td></td><td>√</td><td>签收人或被委托</td></tr><tr><td>START_TIME_</td><td>开始时间</td><td>datetime</td><td></td><td></td><td>开始时间</td></tr><tr><td>CLAIM_TIME_</td><td>提醒时间</td><td>datetime</td><td></td><td>√</td><td>提醒时间</td></tr><tr><td>END_TIME_</td><td>结束时间</td><td>datetime</td><td></td><td>√</td><td>结束时间</td></tr><tr><td>DURATION_</td><td>耗时</td><td>numeric(19)</td><td></td><td>√</td><td>耗时</td></tr><tr><td>DELETE_REASON_</td><td>删除原因</td><td>nvarchar(4000)</td><td></td><td>√</td><td>删除原因(completed,deleted)</td></tr><tr><td>PRIORITY_</td><td>优先级别</td><td>int</td><td></td><td>√</td><td>优先级别</td></tr><tr><td>DUE_DATE_</td><td>过期时间</td><td>datetime</td><td></td><td>√</td><td>过期时间，表明任务应在多长时间内完成</td></tr><tr><td>FORM_KEY_</td><td>节点定义的formkey</td><td>nvarchar(255)</td><td></td><td>√</td><td>desinger节点定义的form_key属性</td></tr></tbody></table><h3 id="ACT-HI-VARINST表结构"><a href="#ACT-HI-VARINST表结构" class="headerlink" title="ACT_HI_VARINST表结构"></a>ACT_HI_VARINST表结构</h3><p> 历史变量表( act_hi_varinst )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>TASK_ID_</td><td>任务实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>任务实例ID</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(64)</td><td></td><td></td><td>参数名称(英文)</td></tr><tr><td>VAR_TYPE_</td><td>参数类型</td><td>varchar(255)</td><td></td><td>√</td><td>备注5</td></tr><tr><td>REV_</td><td>乐观锁</td><td>nvarchar(64)</td><td></td><td>√</td><td>乐观锁 Version</td></tr><tr><td>BYTEARRAY_ID_</td><td>字节表ID</td><td>nvarchar(400)</td><td></td><td>√</td><td>ACT_GE_BYTEARRAY表的主键</td></tr><tr><td>DOUBLE_</td><td>DOUBLE_</td><td>nvarchar(255)</td><td></td><td>√</td><td>存储DoubleType类型的数据</td></tr><tr><td>LONG_</td><td>LONG_</td><td>nvarchar(255)</td><td></td><td>√</td><td>存储LongType类型的数据</td></tr><tr><td>TEXT_</td><td>TEXT_</td><td>datetime</td><td></td><td>√</td><td>备注6</td></tr><tr><td>TEXT2_</td><td>TEXT2_</td><td>datetime</td><td></td><td></td><td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td></tr></tbody></table><h3 id="ACT-ID-GROUP表结构"><a href="#ACT-ID-GROUP表结构" class="headerlink" title="ACT_ID_GROUP表结构"></a>ACT_ID_GROUP表结构</h3><p> 用户组信息表( act_id_group )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁Version</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>组名称</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>类型</td></tr></tbody></table><h3 id="ACT-ID-INFO表结构"><a href="#ACT-ID-INFO表结构" class="headerlink" title="ACT_ID_INFO表结构"></a>ACT_ID_INFO表结构</h3><p> 用户扩展信息表( act_id_info )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁Version</td></tr><tr><td>USER_ID_</td><td>用户ID</td><td>nvarchar(64)</td><td></td><td>√</td><td></td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(64)</td><td></td><td>√</td><td></td></tr><tr><td>KEY_</td><td></td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>VALUE_</td><td></td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>PASSWORD_</td><td></td><td>Image</td><td></td><td>√</td><td></td></tr><tr><td>PARENT_ID_</td><td></td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr></tbody></table><h3 id="ACT-ID-MEMBERSHIP表结构"><a href="#ACT-ID-MEMBERSHIP表结构" class="headerlink" title="ACT_ID_MEMBERSHIP表结构"></a>ACT_ID_MEMBERSHIP表结构</h3><p> 用户与分组对应信息表( act_id_membership )</p><p>用来保存用户的分组信息。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>USER_ID</td><td>用户ID</td><td>nvarchar(64)</td><td>√</td><td></td><td></td></tr><tr><td>GROUP_ID</td><td>用户组ID</td><td>nvarchar(64)</td><td>√</td><td></td><td></td></tr></tbody></table><h3 id="ACT-ID-USER表结构"><a href="#ACT-ID-USER表结构" class="headerlink" title="ACT_ID_USER表结构"></a>ACT_ID_USER表结构</h3><p> 用户信息表( act_id_user )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁Version</td></tr><tr><td>FIRST_</td><td>姓</td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>LAST_</td><td>名</td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>EMAIL_</td><td>EMAIL_</td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>PWD_</td><td>密码</td><td>nvarchar(255)</td><td></td><td>√</td><td></td></tr><tr><td>PICTURE_ ID_</td><td>图片ID</td><td>nvarchar(64)</td><td></td><td>√</td><td></td></tr></tbody></table><h3 id="ACT-RE-DEPLOYMENT表结构"><a href="#ACT-RE-DEPLOYMENT表结构" class="headerlink" title="ACT_RE_DEPLOYMENT表结构"></a>ACT_RE_DEPLOYMENT表结构</h3><p>部署信息表( act_re_deployment )</p><p>部署流程定义时需要被持久化保存下来的信息。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键ID</td></tr><tr><td>CATEGORY_</td><td>分类</td><td>nvarchar(255)</td><td></td><td>√</td><td>类别</td></tr><tr><td>DEPLOY_TIME_</td><td>部署时间</td><td>datetime</td><td></td><td>√</td><td>部署时间</td></tr><tr><td>NAME_</td><td>部署名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>部署文件名</td></tr></tbody></table><h3 id="ACT-RE-MODEL表结构"><a href="#ACT-RE-MODEL表结构" class="headerlink" title="ACT_RE_MODEL表结构"></a>ACT_RE_MODEL表结构</h3><p>流程设计模型部署表( act_re_model )</p><p>流程设计器设计流程后，保存数据到该表。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>名称</td></tr><tr><td>KEY_</td><td>KEY_</td><td>nvarchar(255)</td><td></td><td>√</td><td>key</td></tr><tr><td>CATEGORY_</td><td>分类</td><td>nvarchar(255)</td><td></td><td>√</td><td>分类</td></tr><tr><td>CREATE_TIME_</td><td>创建时间</td><td>datetime</td><td></td><td>√</td><td>创建时间</td></tr><tr><td>LAST_UPDATE_TIME_</td><td>最新修改时间</td><td>datetime</td><td></td><td>√</td><td>最新修改时间</td></tr><tr><td>VERSION_</td><td>版本</td><td>int</td><td></td><td>√</td><td>版本</td></tr><tr><td>META_INFO_</td><td>META_INFO_</td><td>nvarchar(255)</td><td></td><td>√</td><td>以json格式保存流程定义的信息</td></tr><tr><td>DEPLOYMENT_ID_</td><td>部署ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>部署ID</td></tr><tr><td>EDITOR_SOURCE_VALUE_ID_</td><td></td><td>datetime</td><td></td><td>√</td><td></td></tr><tr><td>EDITOR_SOURCE_EXTRA_VALUE_ID_</td><td></td><td>datetime</td><td></td><td>√</td><td></td></tr></tbody></table><h3 id="ACT-RE-PROCDEF表结构"><a href="#ACT-RE-PROCDEF表结构" class="headerlink" title="ACT_RE_PROCDEF表结构"></a>ACT_RE_PROCDEF表结构</h3><p>流程定义数据表( act_re_procdef )</p><p>业务流程定义数据表。此表和 ACT_RE_DEPLOYMENT 是多对一的关系，即，一个部署的bar包里可能包含多个流程定义文件，每个流程定义文件都会有一条记录在 ACT_REPROCDEF 表内，每个流程定义的数据，都会对于 ACT_GE_BYTEARRAY 表内的一个资源文件和 PNG 图片文件。和 ACT_GE_BYTEARRAY 的关联是通过程序用ACT_GE_BYTEARRAY.NAME 与 ACT_RE_PROCDEF.NAME 完成的，在数据库表结构中没有体现。 </p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>CATEGORY_</td><td>分类</td><td>nvarchar(255)</td><td></td><td>√</td><td>流程定义的Namespace就是类别</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>名称</td></tr><tr><td>KEY_</td><td>定义的KEY</td><td>nvarchar(255)</td><td></td><td></td><td>流程定义ID</td></tr><tr><td>VERSION_</td><td>版本</td><td>int</td><td></td><td></td><td>版本</td></tr><tr><td>DEPLOYMENT_ID_</td><td>部署表ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>部署表ID</td></tr><tr><td>RESOURCE_NAME_</td><td>bpmn文件名称</td><td>nvarchar(4000)</td><td></td><td>√</td><td>流程bpmn文件名称</td></tr><tr><td>DGRM_RESOURCE_NAME_</td><td>png图片名称</td><td>nvarchar(4000)</td><td></td><td>√</td><td>流程图片名称</td></tr><tr><td>DESCRIPTION_</td><td>描述</td><td>nvarchar(4000)</td><td></td><td>√</td><td>描述</td></tr><tr><td>HAS_START_FORM_KEY_</td><td>是否存在开始节点formKey</td><td>tinyint</td><td></td><td>√</td><td>start节点是否存在formKey 0否 1是</td></tr><tr><td>SUSPENSION_STATE_</td><td>是否挂起</td><td>tinyint</td><td></td><td>√</td><td>1 激活 2挂起</td></tr></tbody></table><h3 id="ACT-RU-EVENT-SUBSCR表结构"><a href="#ACT-RU-EVENT-SUBSCR表结构" class="headerlink" title="ACT_RU_EVENT_SUBSCR表结构"></a>ACT_RU_EVENT_SUBSCR表结构</h3><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>事件ID</td><td>nvarchar(64)</td><td>√</td><td></td><td>事件ID</td></tr><tr><td>REV_</td><td>版本</td><td>int</td><td></td><td>√</td><td>乐观锁Version</td></tr><tr><td>EVENT_TYPE_</td><td>事件类型</td><td>nvarchar(255)</td><td></td><td></td><td>事件类型</td></tr><tr><td>EVENT_NAME_</td><td>事件名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>事件名称</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>ACTIVITY_ID_</td><td>活动实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>活动实例ID</td></tr><tr><td>CONFIGURATION_</td><td>配置</td><td>nvarchar(255)</td><td></td><td>√</td><td>配置</td></tr><tr><td>CREATED_</td><td>是否创建</td><td>datetime</td><td></td><td></td><td>默认值 当前系统时间戳CURRENT_TIMESTAMP</td></tr></tbody></table><h3 id="ACT-RU-EXECUTION表结构"><a href="#ACT-RU-EXECUTION表结构" class="headerlink" title="ACT_RU_EXECUTION表结构"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td></td><td>流程实例ID</td></tr><tr><td>BUSINESS_KEY_</td><td>业务主键ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>业务主键ID</td></tr><tr><td>PARENT_ID_</td><td>父节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>父节点实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程定义ID</td></tr><tr><td>SUPER_EXEC_</td><td>SUPER_EXEC_</td><td>nvarchar(64)</td><td></td><td>√</td><td>SUPER_EXEC_</td></tr><tr><td>ACT_ID_</td><td>节点实例ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>节点实例ID即ACT_HI_ACTINST中ID</td></tr><tr><td>IS_ACTIVE_</td><td>是否存活</td><td>tinyint</td><td></td><td>√</td><td>是否存活</td></tr><tr><td>IS_CONCURRENT_</td><td>是否并行</td><td>tinyint</td><td></td><td>√</td><td>是否为并行(true/false)</td></tr><tr><td>IS_SCOPE_</td><td>IS_SCOPE_</td><td>tinyint</td><td></td><td>√</td><td>IS_SCOPE_</td></tr><tr><td>IS_EVENT_SCOPE_</td><td>IS_EVENT_SCOPE_</td><td>tinyint</td><td></td><td>√</td><td>IS_EVENT_SCOPE_</td></tr><tr><td>SUSPENSION_STATE_</td><td>是否挂起</td><td>tinyint</td><td></td><td>√</td><td>挂起状态 1激活 2挂起</td></tr><tr><td>CACHED_ENT_STATE_</td><td></td><td>int</td><td></td><td>√</td><td></td></tr></tbody></table><h3 id="ACT-RU-IDENTITYLINK表结构"><a href="#ACT-RU-IDENTITYLINK表结构" class="headerlink" title="ACT_RU_IDENTITYLINK表结构"></a>ACT_RU_IDENTITYLINK表结构</h3><p>运行时流程人员表( act_ru_identitylink )</p><p>任务参与者数据表。主要存储当前节点参与者的信息。</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>GROUP_ID_</td><td>组ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>组ID</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>备注7</td></tr><tr><td>USER_ID_</td><td>用户ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>用户ID</td></tr><tr><td>TASK_ID_</td><td>节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点实例ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>流程定义ID</td></tr></tbody></table><h3 id="ACT-RU-JOB表结构"><a href="#ACT-RU-JOB表结构" class="headerlink" title="ACT_RU_JOB表结构"></a>ACT_RU_JOB表结构</h3><p>运行时定时任务数据表( act_ru_job )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>标识</td><td>nvarchar(64)</td><td>√</td><td></td><td>标识</td></tr><tr><td>REV_</td><td>版本</td><td>int</td><td></td><td>√</td><td>版本</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td></td><td>类型</td></tr><tr><td>LOCK_EXP_TIME_</td><td>锁定释放时间</td><td>datetime</td><td></td><td>√</td><td>锁定释放时间</td></tr><tr><td>LOCK_OWNER_</td><td>挂起者</td><td>nvarchar(255)</td><td></td><td>√</td><td>挂起者</td></tr><tr><td>EXCLUSIVE_</td><td></td><td>bit</td><td></td><td>√</td><td></td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>PROCESS_INSTANCE_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程定义ID</td></tr><tr><td>RETRIES_</td><td></td><td>int</td><td></td><td>√</td><td></td></tr><tr><td>EXCEPTION_STACK_ID_</td><td>异常信息ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>异常信息ID</td></tr><tr><td>EXCEPTION_MSG_</td><td>异常信息</td><td>nvarchar(4000)</td><td></td><td>√</td><td>异常信息</td></tr><tr><td>DUEDATE_</td><td>到期时间</td><td>datetime</td><td></td><td>√</td><td>到期时间</td></tr><tr><td>REPEAT_</td><td>重复</td><td>nvarchar(255)</td><td></td><td>√</td><td>重复</td></tr><tr><td>HANDLER_TYPE_</td><td>处理类型</td><td>nvarchar(255)</td><td></td><td>√</td><td>处理类型</td></tr><tr><td>HANDLER_CFG_</td><td></td><td>nvarchar(4000)</td><td></td><td>√</td><td>标识</td></tr></tbody></table><h3 id="ACT-RU-TASK表结构"><a href="#ACT-RU-TASK表结构" class="headerlink" title="ACT_RU_TASK表结构"></a>ACT_RU_TASK表结构</h3><p>运行时任务节点表( act_ru_task )</p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行实例ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程定义ID</td></tr><tr><td>NAME_</td><td>节点定义名称</td><td>nvarchar(255)</td><td></td><td>√</td><td>节点定义名称</td></tr><tr><td>PARENT_TASK_ID_</td><td>父节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>父节点实例ID</td></tr><tr><td>DESCRIPTION_</td><td>节点定义描述</td><td>nvarchar(4000)</td><td></td><td>√</td><td>节点定义描述</td></tr><tr><td>TASK_DEF_KEY_</td><td>节点定义的KEY</td><td>nvarchar(255)</td><td></td><td>√</td><td>任务定义的ID</td></tr><tr><td>OWNER_</td><td>实际签收人</td><td>nvarchar(255)</td><td></td><td>√</td><td>拥有者(一般情况下为空，只有在委托时才有值)</td></tr><tr><td>ASSIGNEE_</td><td>签收人或委托人</td><td>nvarchar(255)</td><td></td><td>√</td><td>签收人或委托人</td></tr><tr><td>DELEGATION_</td><td>委托类型</td><td>nvarchar(64)</td><td></td><td>√</td><td>备注8</td></tr><tr><td>PRIORITY_</td><td>优先级别</td><td>int</td><td></td><td>√</td><td>优先级别，默认为：50</td></tr><tr><td>CREATE_TIME_</td><td>创建时间</td><td>datetime</td><td></td><td>√</td><td>创建时间</td></tr><tr><td>DUE_DATE_</td><td>过期时间</td><td>datetime</td><td></td><td>√</td><td>耗时</td></tr><tr><td>SUSPENSION_STATE_</td><td>是否挂起</td><td>int</td><td></td><td>√</td><td>1代表激活 2代表挂起</td></tr></tbody></table><h3 id="ACT-RU-VARIABLE表结构"><a href="#ACT-RU-VARIABLE表结构" class="headerlink" title="ACT_RU_VARIABLE表结构"></a>ACT_RU_VARIABLE表结构</h3><p>运行时流程变量数据表( act_ru_variable ) </p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>主键标识</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>TYPE_</td><td>类型</td><td>nvarchar(255)</td><td></td><td></td><td>备注9</td></tr><tr><td>NAME_</td><td>名称</td><td>nvarchar(255)</td><td></td><td></td><td>变量名称</td></tr><tr><td>EXECUTION_ID_</td><td>执行实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>执行的ID</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程实例ID</td></tr><tr><td>TASK_ID_</td><td>节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>节点实例ID(Local)</td></tr><tr><td>BYTEARRAY_ID_</td><td>字节表ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>字节表的ID(ACT_GE_BYTEARRAY)</td></tr><tr><td>DOUBLE_</td><td>DOUBLE_</td><td>float</td><td></td><td>√</td><td>存储变量类型为Double</td></tr><tr><td>LONG_</td><td>LONG_</td><td>numeric(19)</td><td></td><td>√</td><td>存储变量类型为long</td></tr><tr><td>TEXT_</td><td>TEXT_</td><td>nvarchar(4000)</td><td></td><td>√</td><td>‘存储变量值类型为String 如此处存储持久化对象时，值jpa对象的class</td></tr><tr><td>TEXT2_</td><td>TEXT2_</td><td>nvarchar(4000)</td><td></td><td>√</td><td>此处存储的是JPA持久化对象时，  才会有值。此值为对象ID</td></tr></tbody></table><h3 id="ACT-RU-EXECUTION表结构-1"><a href="#ACT-RU-EXECUTION表结构-1" class="headerlink" title="ACT_RU_EXECUTION表结构"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )     </p><table><thead><tr><th>字段名称</th><th>字段描述</th><th>数据类型</th><th>主键</th><th>为空</th><th>取值说明</th></tr></thead><tbody><tr><td>ID_</td><td>ID_</td><td>nvarchar(64)</td><td>√</td><td></td><td>ID_</td></tr><tr><td>REV_</td><td>乐观锁</td><td>int</td><td></td><td>√</td><td>乐观锁</td></tr><tr><td>PROC_INST_ID_</td><td>流程实例ID</td><td>nvarchar(64)</td><td></td><td></td><td>流程实例ID</td></tr><tr><td>BUSINESS_KEY_</td><td>业务主键ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>业务主键ID</td></tr><tr><td>PARENT_ID_</td><td>父节点实例ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>父节点实例ID</td></tr><tr><td>PROC_DEF_ID_</td><td>流程定义ID</td><td>nvarchar(64)</td><td></td><td>√</td><td>流程定义ID</td></tr><tr><td>SUPER_EXEC_</td><td>SUPER_EXEC_</td><td>nvarchar(64)</td><td></td><td>√</td><td>SUPER_EXEC_</td></tr><tr><td>ACT_ID_</td><td>节点实例ID</td><td>nvarchar(255)</td><td></td><td>√</td><td>节点实例ID即ACT_HI_ACTINST中ID</td></tr><tr><td>IS_ACTIVE_</td><td>是否存活</td><td>tinyint</td><td></td><td>√</td><td>是否存活</td></tr><tr><td>IS_CONCURRENT_</td><td>是否并行</td><td>tinyint</td><td></td><td>√</td><td>是否为并行(true/false)</td></tr><tr><td>IS_SCOPE_</td><td>IS_SCOPE_</td><td>tinyint</td><td></td><td>√</td><td>IS_SCOPE_</td></tr><tr><td>IS_EVENT_SCOPE_</td><td>IS_EVENT_SCOPE_</td><td>tinyint</td><td></td><td>√</td><td>IS_EVENT_SCOPE_</td></tr><tr><td>SUSPENSION_STATE_</td><td>是否挂起</td><td>tinyint</td><td></td><td>√</td><td>挂起状态 1激活 2挂起</td></tr><tr><td>CACHED_ENT_STATE_</td><td></td><td>int</td><td></td><td>√</td><td></td></tr></tbody></table><h2 id="操作activiti的各个环节涉及到的关键表"><a href="#操作activiti的各个环节涉及到的关键表" class="headerlink" title="操作activiti的各个环节涉及到的关键表"></a>操作activiti的各个环节涉及到的关键表</h2><p># 部署流程定义涉及到的表</p><p># 流程部署表</p><p>SELECT * FROM <code>act_re_deployment</code></p><p># 流程定义表</p><p>SELECT * FROM <code>act_re_procdef</code></p><p># 资源文件表</p><p>SELECT * FROM <code>act_ge_bytearray</code></p><p># 系统配置表</p><p>SELECT * FROM <code>act_ge_property</code></p><p>################################</p><p># 启动流程实例涉及到的表</p><p># 流程实例运行时 执行对象表</p><p>SELECT * FROM <code>act_ru_execution</code></p><p># 流程实例运行时 身份联系表</p><p>SELECT * FROM <code>act_ru_identitylink</code></p><p># 流程实例运行时 用户任务表</p><p>SELECT * FROM <code>act_ru_task</code></p><p># 活动节点历史表</p><p>SELECT * FROM <code>act_hi_actinst</code></p><p># 身份联系表 历史</p><p>SELECT * FROM <code>act_hi_identitylink</code></p><p># 流程实例表 历史</p><p>SELECT * FROM <code>act_hi_procinst</code></p><p># 历史任务表</p><p>SELECT * FROM <code>act_hi_taskinst</code></p><p># 结束流程实例涉及到的表</p><p># 运行时 表数据全部清空</p><p># 历史表 表数据修改 或者增加了数据</p><ol start="2"><li><strong>流程定****义与图数据库保存结构</strong></li></ol><p>会更新ACT_RE_MODEL和ACT_GE_BYTEARRAY表，</p><p>ACT_GE_BYTEARRAY表保存了PNG图片和xml文件信息(其实是json格式的字符串)，并关联到ACT_RE_MODEL表。</p><p>ACT_GE_BYTEARRAY表中NAME_列值source-extra行中存储的是：PNG图片</p><p>ACT_GE_BYTEARRAY表中NAME_列值source行中存储的是：xml文件信息</p><p>流程设计器设计流程后，保存数据到ACT_RE_MODEL 表。</p><p>EDITOR_SOURCE_VALUE_ID(流程文件放在ACT_GE_BYTEARRAY中的ID)；</p><p>EDITOR_SOURCE_EXTRA_VALUE_ID(流程文件图像放在ACT_GE_BYTEARRAY中的ID)。 </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;表结构说明&quot;&gt;&lt;a href=&quot;#表结构说明&quot; class=&quot;headerlink&quot; title=&quot;表结构说明&quot;&gt;&lt;/a&gt;表结构说明&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Activiti6工作流Api文档</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Activiti6%E5%B7%A5%E4%BD%9C%E6%B5%81Api%E6%96%87%E6%A1%A3/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Activiti6%E5%B7%A5%E4%BD%9C%E6%B5%81Api%E6%96%87%E6%A1%A3/</id>
    <published>2022-07-06T11:48:55.000Z</published>
    <updated>2022-07-06T11:55:41.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Activiti6工作流Api文档"><a href="#Activiti6工作流Api文档" class="headerlink" title="Activiti6工作流Api文档"></a>Activiti6工作流Api文档</h1><span id="more"></span><p>1、activiti 核心api</p><p><img src="file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps5.png" alt="img"> </p><p>1.1  流程存储服务 (RepositoryService)</p><p>​    •  管理流程定义文件xml及静态资源服务</p><p>​    •  对流程定义文件对暂停激活</p><p>​    •  流程定义启动权限管理</p><p>​    •  部署文件构造器DeploymentBuilder</p><p>​    •  部署文件查询器DeploymentQuery</p><p>​    •  流程定义文件查询对象ProcessDefinitionQuery</p><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th><th>库表字段</th></tr></thead><tbody><tr><td>1</td><td>repositoryService.createDeployment().addClasspathResource(“参 数”) .deploy()</td><td>部署流程</td><td>resources文件下面的xml流程文件</td><td>省略</td></tr><tr><td>2</td><td>repositoryService.createDeploymentQuery().list()</td><td>查询所有部署</td><td>省略</td><td>省略</td></tr><tr><td>3</td><td>repositoryService.createProcessDefinitionQuery().list()</td><td>查询所有部署流程</td><td>省略</td><td>省略</td></tr><tr><td>4</td><td>repositoryService.suspendProcessDefinitionById(id)或ByKey</td><td>挂起流程</td><td>根据流程id挂起流程</td><td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td></tr><tr><td>5</td><td>repositoryService.activateProcessDefinitionById(id)或ByKey</td><td>启动流程</td><td>根据流程id激活流程</td><td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td></tr><tr><td>6</td><td>repositoryService.addCandidateStarterUser(流程id,用户id)</td><td>流程与用户对应关系</td><td>添加流程与用户关系</td><td>操作ACT_RU_IDENTITYLINK表</td></tr><tr><td>7</td><td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td><td>流程与用户组对应关系</td><td>添加流程与用户组关系</td><td>操作ACT_RU_IDENTITYLINK表</td></tr><tr><td>8</td><td>repositoryService.deleteCandidateStarterUser(流程id,用户id)</td><td>流程与用户对应关系</td><td>删除流程与用户关系</td><td>操作ACT_RU_IDENTITYLINK表</td></tr><tr><td>9</td><td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td><td>流程与用户对应关系</td><td>删除流程与用户组关系</td><td>操作ACT_RU_IDENTITYLINK表</td></tr><tr><td>10</td><td>repositoryService.getIdentityLinksForProcessDefinition(流程id)</td><td>查询流程对应关系</td><td>查询流程对应用户跟组关系</td><td>操作ACT_RU_IDENTITYLINK表</td></tr></tbody></table><p>1.2 流程运行控制服务  (RuntimeService)</p><p>​    •  启动流程及对流程数据对控制</p><p>​    •  流程实例(ProcessInstance)与执行流(Execution)查询</p><p>​    •  触发流程操作、接收消息和信号</p><p>1.3 RuntimeService启动流程变量管理</p><p>​    •  启动流程的常用方式(id,key,message)</p><p>​    •  启动流程可选参数(businesskey,variables,tenantId)</p><p>​    •  变量(variables)的设置和获取</p><p>1.4  流程实例与执行流</p><p>​    •  流程实例(ProcessInstance)表示一次工作流业务的数据实体</p><p>​    •  执行流(Execution)表示流程实例中具体的执行路径</p><p>​    •  流程实例接口继承与执行流</p><p>1.5  流程触发</p><p>​    •  使用trigger触发ReceiveTask节点</p><p>​    •  触发信号捕获事件signalEvenReceived</p><p>​    •  触发消息捕获事件messageEventReceived</p><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>runtimeService.startProcessInstanceByKey(String processDefinitionKey, Map&lt;String, Object&gt; variables)</td><td>根据部署流程key启动一个流程</td><td>省略</td></tr><tr><td>2</td><td>runtimeService.startProcessInstanceById(String processDefinitionId, Map&lt;String, Object&gt; variables)</td><td>根据部署流程id启动一个流程</td><td>省略</td></tr><tr><td>3</td><td>runtimeService.createProcessInstanceBuilder().businessKey(“businessKey001”) .processDefinitionKey(String processDefinitionKey).variables( Map&lt;String, Object&gt; variables) .start()</td><td>根据processInstanceBuilder启动流程</td><td>省略</td></tr><tr><td>4</td><td>runtimeService.getVariables(processInstance.getId())</td><td>根据流程实例id获取传参</td><td>省略</td></tr><tr><td>5</td><td>runtimeService.setVariable(processInstance.getId(),”key3”,”value3”)</td><td>新增或修改参数</td><td>省略</td></tr><tr><td>6</td><td>runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId())</td><td>查询流程实例</td><td>根据流程id获取流程实例</td></tr><tr><td>7</td><td>runtimeService.createExecutionQuery()</td><td>获取流程执行对象</td><td>省略</td></tr></tbody></table><p>1.4  任务管理服务</p><ul><li>TaskService<ul><li>对用户任务(UserTask)管理和流程控制</li><li> 设置用户任务(UserTask)对权限信息(拥有者,候选人,办理人)</li><li>针对用户任务添加任务附件、任务；评价和事件记录</li></ul></li><li>TaskService对Task管理与流程控制<ul><li>Task对象对创建,删除</li><li>查询Task,并驱动Task节点完成执行</li><li>Task相关参数变量(variable)设置</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>taskService.createTaskQuery().list()</td><td>查询所有任务</td><td>省略</td></tr><tr><td>2</td><td>taskService.setVariable(“任务id”,”键”,”值”)</td><td>设置普通变量</td><td>省略</td></tr><tr><td>3</td><td>taskService.setVariableLocal(“任务id”,”键”,”值”)</td><td>设置本地变量</td><td>省略</td></tr><tr><td>4</td><td>taskService.getVariables(“任务id”)</td><td>获取普通变量</td><td>省略</td></tr><tr><td>5</td><td>runtimeService.getVariables(task.getExecutionId())</td><td>获取本地变量</td><td>省略</td></tr><tr><td>6</td><td>taskService.complete(“任务id”,”传值Map”)</td><td>到下一个节点</td><td>省略</td></tr></tbody></table><ul><li>TaskService设置Task权限信息<ul><li><a href="https://blog.51cto.com/u_3423936/2771360">https://blog.51cto.com/u_3423936/2771360</a></li><li>指定拥有人(Owner)和办理人(Assignee)</li><li>通过claim设置办理人</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>taskService.setOwner(“taskId”,”user”)</td><td>设置流程发起人</td><td>省略</td></tr><tr><td>2</td><td>taskService.claim(“”taskId””,”user”)</td><td>指定代办人</td><td></td></tr><tr><td>3</td><td>taskService.addCandidateUser(“user”)</td><td>添加候选人</td><td></td></tr><tr><td>4</td><td>taskService.addCandidateGroup(“group”)</td><td>添加候选组</td><td></td></tr><tr><td>5</td><td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td><td>查询候选人列表有user但是没指定代办人任务</td><td></td></tr><tr><td>6</td><td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td><td>查询候选人列表有我但是没指定代办人任务</td><td></td></tr><tr><td>7</td><td>taskService.createTaskQuery().taskAssignee(“user”).list()</td><td>查询代办人为user的任务</td><td></td></tr><tr><td>8</td><td>taskService.getIdentityLinksForTask(“taskId”)</td><td>查询任务与人员之间的关系</td><td></td></tr></tbody></table><ul><li>TaskService设置Task附加信息<ul><li>任务附件(Attachment)创建与查询</li><li>任务评价(Comment)创建与查询</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td></td><td>taskService.createAttachment(“类型”,”任务id”,”流程Id”,”附件名称”,”附件描述”,”流或者url)</td><td>上传附件</td><td></td></tr><tr><td></td><td>taskService.getTaskAttachments(“任务id”)</td><td>上传附件</td><td></td></tr><tr><td></td><td>taskService.addComment(“任务id”,”流程id”,”批注1”)</td><td>添加审批批注</td><td></td></tr><tr><td></td><td>taskService.getTaskComments(“任务id”)</td><td>查询审批批注</td><td></td></tr><tr><td></td><td>taskService.getTaskEvents(“任务id”)</td><td>查询任务日志记录</td><td></td></tr></tbody></table><p>1.5 身份管理服务</p><ul><li>IdentityService<ul><li>管理用户(User)</li><li>管理用户组(Group)</li><li>用户与用户组关系(Membership)</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td></td><td>identityService.newUser(“userid”)</td><td>创建一个用户</td><td></td></tr><tr><td></td><td>identityService.newGroup(“groupid”)</td><td>创建一个组</td><td></td></tr><tr><td></td><td>identityService.saveUser(user)</td><td>保存或者更新用户</td><td></td></tr><tr><td></td><td>identityService.saveGroup(group)</td><td>保存或者更新组</td><td></td></tr><tr><td></td><td>identityService.createUserQuery()</td><td>查询用户</td><td></td></tr><tr><td></td><td>identityService.createGroupQuery()</td><td>查询组</td><td></td></tr></tbody></table><p>1.6 表单服务管理</p><ul><li>FormService<ul><li>解析流程定义中表单项的配置</li><li>提交表单的方式驱动用户节点流转</li><li>获取自定义外部表单key</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>formService.getStartFormKey(processDefinition.getId())</td><td>部署流程的id获取表单key</td><td></td></tr><tr><td>2</td><td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td><td>获取开始节点表单内容</td><td></td></tr><tr><td>3</td><td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td><td>获取开始节点表单内容</td><td></td></tr><tr><td>4</td><td>formService.submitStartFormData(processDefinition.getId(), “传值参数”)</td><td>通过formservice启动流程</td><td></td></tr><tr><td>5</td><td>formService.submitTaskFormData(“taskId”,”传参数”)</td><td>通过formservice提交task表单</td><td></td></tr><tr><td>6</td><td>formService.getTaskFormData(“taskId”)</td><td>通过taskid获取task节点表单内容</td><td></td></tr></tbody></table><p>1.7  历史管理服务</p><ul><li>HistoryService<ul><li>管理流程实例结束后的历史数据</li><li>构建历史数据查询对象</li><li>根据流程实例id删除流程历史数据</li></ul></li></ul><p><img src="file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps6.png" alt="img"> </p><ul><li><p>HistoryService构建历史查询对象</p><ul><li>create[历史数据实体]Query</li><li>createNative[历史数据实体]Query | 通过原生sql查询</li><li>createProcessInstanceHistoryLogQuery | 查询一个流程实例的所有其他数据</li></ul></li><li><p>HistoryService删除历史操作</p><ul><li>deleteHistoricProcessInstance | 删除历史流程实例及联删除其他信息</li><li>deleteHistoricTaskInstance | 删除历史的task实例</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>historyService.createHistoricProcessInstanceQuery()</td><td>查询流程实例变量</td><td></td></tr><tr><td>2</td><td>historyService.createHistoricActivityInstanceQuery()</td><td>查询活动节点</td><td></td></tr><tr><td>3</td><td>historyService.createHistoricTaskInstanceQuery()</td><td>查询任务实例</td><td></td></tr><tr><td>4</td><td>historyService.createHistoricVariableInstanceQuery()</td><td>查询流程任务变量</td><td></td></tr><tr><td>5</td><td>historyService.createHistoricDetailQuery()</td><td>历史任务流程活动详细信息</td><td></td></tr><tr><td>6</td><td>historyService.createProcessInstanceHistoryLogQuery(“流程实例id”)</td><td>查询一个流程实例的所有其他数据</td><td></td></tr><tr><td>7</td><td>historyService.deleteHistoricProcessInstance(“流程实例id”)</td><td>删除历史流程实例</td><td></td></tr><tr><td>8</td><td>historyService.deleteHistoricTaskInstance(“taskid”)</td><td>删除历史任务</td><td></td></tr></tbody></table><p>1.8 其他管理服务</p><ul><li><p>其他管理服务</p><ul><li>管理服务ManagementService</li><li>动态流程定义服务DynamicBpmnService</li></ul></li><li><p>ManagementService</p><ul><li>job任务管理</li><li>数据库相关通用操作</li><li>执行流程引擎命令(Command)</li></ul></li><li><p>Job任务查询</p><ul><li>JobQuery 查询一般工作</li><li>TimerJobQuery 查询定时工作</li><li>SuspendedJobQuery 查询中断工作</li><li>DeadLetterJobQuery 查询无法执行的工作</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>managementService.createTimerJobQuery(</td><td>查询定时任务</td><td></td></tr><tr><td>2</td><td>managementService.createJobQuery()</td><td>查询一般工作</td><td></td></tr><tr><td>3</td><td>managementService.createSuspendedJobQuery()</td><td>查询中断工作</td><td></td></tr><tr><td>4</td><td>managementService.createDeadLetterJobQuery()</td><td>查询无法执行的工作</td><td></td></tr></tbody></table><ul><li>数据库相关操作<ul><li>查询表结构元数据(TableMetaData)</li><li>通用查询(TablePageQuery)</li><li>执行自定义Sql查询(executeCustomSql)</li></ul></li></ul><table><thead><tr><th>序号</th><th>方法</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>managementService.createTablePageQuery().tableName(managementService.getTableName(class))</td><td>查询实体到所有数据</td><td></td></tr><tr><td>2</td><td>managementService.executeCustomSql()</td><td>自定义sql查询</td><td></td></tr></tbody></table><p>1.9 异常策略</p><ul><li>ActivitiEXception<ul><li>ActivitiWrongDbException 引擎与数据库版本不匹配</li><li>ActivitiOptimisticLockingException 并发导致乐观锁异常</li><li>ActivitiClassLoadingException 加载类异常</li><li>ActivitiObjectNotFoundException 操作对象不存在</li><li>ActivitilllegalArgumentException 非法的参数</li><li>ActivitiTaskAlreadyClaimedException 任务被重新声明代理人</li><li>BpmnError 定义业务异常控制流程</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Activiti6工作流Api文档&quot;&gt;&lt;a href=&quot;#Activiti6工作流Api文档&quot; class=&quot;headerlink&quot; title=&quot;Activiti6工作流Api文档&quot;&gt;&lt;/a&gt;Activiti6工作流Api文档&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue的空格表示</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Vue%E7%9A%84%E7%A9%BA%E6%A0%BC%E8%A1%A8%E7%A4%BA/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Vue%E7%9A%84%E7%A9%BA%E6%A0%BC%E8%A1%A8%E7%A4%BA/</id>
    <published>2022-07-06T06:11:37.000Z</published>
    <updated>2022-07-06T11:58:11.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue的空格表示"><a href="#vue的空格表示" class="headerlink" title="vue的空格表示"></a>vue的空格表示</h2><p>1.不间断空格\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;</p><p>2.半角空格(英文符号)\u0020,代码中常用的;</p><p>3.全角空格(中文符号)\u3000,中文文章中使用;</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;vue的空格表示&quot;&gt;&lt;a href=&quot;#vue的空格表示&quot; class=&quot;headerlink&quot; title=&quot;vue的空格表示&quot;&gt;&lt;/a&gt;vue的空格表示&lt;/h2&gt;&lt;p&gt;1.不间断空格\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;&lt;/p&gt;
&lt;p&gt;2.半角空格(英文符号)\u0020,代码中常用的;&lt;/p&gt;
&lt;p&gt;3.全角空格(中文符号)\u3000,中文文章中使用;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>NySQL函数</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/MySQL%E5%87%BD%E6%95%B0/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/MySQL%E5%87%BD%E6%95%B0/</id>
    <published>2022-07-06T05:45:31.000Z</published>
    <updated>2022-07-06T11:58:06.771Z</updated>
    
    <content type="html"><![CDATA[<h3 id="concat-函数"><a href="#concat-函数" class="headerlink" title="concat()函数"></a><strong>concat()函数</strong></h3><p>1、功能：将多个字符串连接成一个字符串。</p><p>2、语法：concat(str1, str2,…)</p><span id="more"></span><h3 id="concat-ws-函数"><a href="#concat-ws-函数" class="headerlink" title="concat_ws()函数"></a><strong>concat_ws()函数</strong></h3><p>1、功能：和concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）</p><p>2、语法：concat_ws(separator, str1, str2, …)</p><h3 id="group-concat-函数"><a href="#group-concat-函数" class="headerlink" title="**group_concat()**函数"></a>**group_concat()**函数</h3><p>1、功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p><p>2、语法：group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator ‘分隔符’] )</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;concat-函数&quot;&gt;&lt;a href=&quot;#concat-函数&quot; class=&quot;headerlink&quot; title=&quot;concat()函数&quot;&gt;&lt;/a&gt;&lt;strong&gt;concat()函数&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;1、功能：将多个字符串连接成一个字符串。&lt;/p&gt;
&lt;p&gt;2、语法：concat(str1, str2,…)&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Xml转义字符</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Xml%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Xml%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</id>
    <published>2022-07-06T05:44:17.000Z</published>
    <updated>2022-07-06T11:58:15.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用的转义字符"><a href="#常用的转义字符" class="headerlink" title="常用的转义字符"></a>常用的转义字符</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;lt;</span> &lt; 小于号</span><br><span class="line"><span class="symbol">&amp;gt;</span> &gt; 大于号</span><br><span class="line"><span class="symbol">&amp;amp;</span> &amp; 和</span><br><span class="line"><span class="symbol">&amp;apos;</span> &#x27; 单引号</span><br><span class="line"><span class="symbol">&amp;quot;</span> &quot; 双引号</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;常用的转义字符&quot;&gt;&lt;a href=&quot;#常用的转义字符&quot; class=&quot;headerlink&quot; title=&quot;常用的转义字符&quot;&gt;&lt;/a&gt;常用的转义字符&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&amp;amp;lt;&lt;/span&gt; &amp;lt; 小于号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&amp;amp;gt;&lt;/span&gt; &amp;gt; 大于号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&amp;amp;amp;&lt;/span&gt; &amp;amp; 和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&amp;amp;apos;&lt;/span&gt; &amp;#x27; 单引号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&amp;amp;quot;&lt;/span&gt; &amp;quot; 双引号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mac安装软件</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Mac%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</id>
    <published>2022-07-06T05:39:54.000Z</published>
    <updated>2022-07-06T05:41:28.551Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1、</strong>【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**<br>打开终端，输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine /Applications/服务名.app</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**&lt;br&gt;打开终端，输入：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mac终端设置代理</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Mac%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Mac%E7%BB%88%E7%AB%AF%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</id>
    <published>2022-07-06T05:39:00.000Z</published>
    <updated>2022-07-06T11:58:00.848Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。"><a href="#1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。" class="headerlink" title="1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。"></a>1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://proxyAddress:port</span><br></pre></td></tr></table></figure><h3 id="2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc"><a href="#2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc" class="headerlink" title="2、把代理服务器地址写入shell配置文件.bashrc或者.zshrc"></a>2、把<a href="https://so.csdn.net/so/search?q=%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020">代理服务器</a>地址写入shell配置文件.bashrc或者.zshrc</h3><p>直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://localhost:port&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://localhost:port&quot;</span></span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。&quot;&gt;&lt;a href=&quot;#1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。&quot; class=&quot;headerlink&quot; title=&quot;1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。&quot;&gt;&lt;/a&gt;1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。&lt;/h3&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; http_proxy=http://proxyAddress:port&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc&quot;&gt;&lt;a href=&quot;#2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc&quot; class=&quot;headerlink&quot; title=&quot;2、把代理服务器地址写入shell配置文件.bashrc或者.zshrc&quot;&gt;&lt;/a&gt;2、把&lt;a href=&quot;https://so.csdn.net/so/search?q=%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&amp;spm=1001.2101.3001.7020&quot;&gt;代理服务器&lt;/a&gt;地址写入shell配置文件.bashrc或者.zshrc&lt;/h3&gt;&lt;p&gt;直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; http_proxy=&lt;span class=&quot;string&quot;&gt;&amp;quot;http://localhost:port&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; https_proxy=&lt;span class=&quot;string&quot;&gt;&amp;quot;http://localhost:port&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>双网卡实现内外网同时访问</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%AE%9E%E7%8E%B0%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/</id>
    <published>2022-07-06T05:36:46.000Z</published>
    <updated>2022-07-06T11:59:41.791Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><pre><code>1.展示路由route print2.添加路由route add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -proute add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p3.删除路由route delete 网关。</code></pre><span id="more"></span><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><p>   route -n add -net 10.16.88.66  10.16.128.1</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.展示路由
route print
2.添加路由
route add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -p
route add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p
3.删除路由
route delete 网关。
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux目录挂载</title>
    <link href="https://armytigers.github.io/my-hexo-blog/2022/07/06/Linux%E7%9B%AE%E5%BD%95%E6%8C%82%E8%BD%BD/"/>
    <id>https://armytigers.github.io/my-hexo-blog/2022/07/06/Linux%E7%9B%AE%E5%BD%95%E6%8C%82%E8%BD%BD/</id>
    <published>2022-07-06T05:33:03.000Z</published>
    <updated>2022-07-06T11:57:54.102Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录挂载"><a href="#目录挂载" class="headerlink" title="目录挂载"></a>目录挂载</h2><h3 id="挂载共享文件夹"><a href="#挂载共享文件夹" class="headerlink" title="挂载共享文件夹"></a>挂载共享文件夹</h3><p>mount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;目录挂载&quot;&gt;&lt;a href=&quot;#目录挂载&quot; class=&quot;headerlink&quot; title=&quot;目录挂载&quot;&gt;&lt;/a&gt;目录挂载&lt;/h2&gt;&lt;h3 id=&quot;挂载共享文件夹&quot;&gt;&lt;a href=&quot;#挂载共享文件夹&quot; class=&quot;headerlink&quot; title=&quot;挂载共享文件夹&quot;&gt;&lt;/a&gt;挂载共享文件夹&lt;/h3&gt;&lt;p&gt;mount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
