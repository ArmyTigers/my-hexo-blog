{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/bluelake/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/bluelake/source/themeauthor.jpg","path":"themeauthor.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/bluelake/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/bluelake/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/giteement/gitee.oauthcallback.js","path":"giteement/gitee.oauthcallback.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/giteement/giteement.css","path":"giteement/giteement.css","modified":1,"renderable":1},{"_id":"themes/bluelake/source/giteement/giteement.min.js","path":"giteement/giteement.min.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/js/search.json.js","path":"js/search.json.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/iconfont/iconfont.eot","path":"css/iconfont/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/iconfont/iconfont.svg","path":"css/iconfont/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/iconfont/iconfont.ttf","path":"css/iconfont/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/iconfont/iconfont.woff","path":"css/iconfont/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/iconfont/iconfont.woff2","path":"css/iconfont/iconfont.woff2","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/alipay-pay.jpg","path":"css/images/alipay-pay.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/alipay.jpg","path":"css/images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/banner-dark.jpg","path":"css/images/banner-dark.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/wechat-pay.jpg","path":"css/images/wechat-pay.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/css/images/wechat.jpg","path":"css/images/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.eot","path":"localshare/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.svg","path":"localshare/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.ttf","path":"localshare/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.woff","path":"localshare/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/css/share.styl","path":"localshare/css/share.styl","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/js/qrcode.js","path":"localshare/js/qrcode.js","modified":1,"renderable":1},{"_id":"themes/bluelake/source/localshare/js/social-share.js","path":"localshare/js/social-share.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/Mac安装软件.md","hash":"ce212c2884261e86888533553978f8e32bd52d5a","modified":1657086088551},{"_id":"source/_posts/Activiti6表结构说明.md","hash":"817b14182603721abd3bc87f30c07a6a577c3fd9","modified":1657108476574},{"_id":"source/_posts/Linux目录挂载.md","hash":"317c4da910b0817e3dea983c600104d3a337433e","modified":1657108674102},{"_id":"source/_posts/Mac终端设置代理.md","hash":"374a9ec6036bb221cc892a01213b4865b27a356a","modified":1657108680848},{"_id":"source/_posts/MySQL函数.md","hash":"1b394938695185f3afdaebd79a1d823e8b70df3f","modified":1657108686771},{"_id":"source/_posts/Activiti6工作流Api文档.md","hash":"6e3c73f0200506369bf93bcf68c330b81eaa44fd","modified":1657108541154},{"_id":"source/_posts/Xml转义字符.md","hash":"3d080779aa62532f9f03c7267108e72f8a15e6be","modified":1657108695998},{"_id":"source/_posts/Vue的空格表示.md","hash":"07de428c1d9b61432e7217e2634844e031e7fc47","modified":1657108691880},{"_id":"source/_posts/双网卡实现内外网同时访问.md","hash":"81d6a3e00e98f40354bd69ff766f973bc8811d2a","modified":1657108781791},{"_id":"source/about/index.md","hash":"370109cd84a6c05c56d7ffa61d9f9fc149b90249","modified":1657109393616},{"_id":"themes/bluelake/.gitignore","hash":"999db0c9fe03f35cae9145141fe3931239fd34df","modified":1657084332936},{"_id":"themes/bluelake/LICENSE","hash":"3e191ca3f51efc111863c4941051291a696ef43e","modified":1657084332936},{"_id":"themes/bluelake/package.json","hash":"36a90f881b63e6806ab36762dd85a5f56927eab3","modified":1657084332939},{"_id":"themes/bluelake/_config.yml","hash":"a6b159d7e1b1b7c5a4ef1305050843c91b65c833","modified":1657108573341},{"_id":"themes/bluelake/README.md","hash":"4df911cd83db74df318e3ab23c08cd06ad636228","modified":1657084332936},{"_id":"themes/bluelake/languages/en.yml","hash":"97e5709af8d432b53331e25acdb0aeef0636c8d4","modified":1657084332936},{"_id":"themes/bluelake/languages/es-ES.yml","hash":"d99da24ae1a943ad573f831134e15dfc0dacce42","modified":1657084332936},{"_id":"themes/bluelake/languages/de-DE.yml","hash":"ec0dd4b7badb6c0f687444a6c7e3646d29b4cc74","modified":1657084332936},{"_id":"themes/bluelake/languages/fr-FR.yml","hash":"b05fa1f82fb9f6dc01c2fab612410b109077c359","modified":1657084332936},{"_id":"themes/bluelake/languages/zh-CN.yml","hash":"d82238fef73561f00e987ea223f61afde627ae61","modified":1657084332937},{"_id":"themes/bluelake/languages/ko.yml","hash":"764246632c02a70943fcc80362df2eb76adc8a21","modified":1657084332936},{"_id":"themes/bluelake/languages/zh-TW.yml","hash":"4ca753e3b5f0b38ce7618b190e4862b54fa80486","modified":1657084332937},{"_id":"themes/bluelake/languages/tr.yml","hash":"d3474815ebee20942a620b59fd33b24a9079715b","modified":1657084332936},{"_id":"themes/bluelake/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1657084332939},{"_id":"themes/bluelake/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1657084332939},{"_id":"themes/bluelake/layout/layout.ejs","hash":"5d9a9d6be8b9b4e79c56a0317f007765d4a67152","modified":1657084332939},{"_id":"themes/bluelake/layout/page.ejs","hash":"cc86a83b9edfa0ec21a1d6a1c99e0f772a064ed9","modified":1657084332939},{"_id":"themes/bluelake/layout/index.ejs","hash":"a357447e69d38afa2263052751bc3f1f01f7ca5d","modified":1657084332939},{"_id":"themes/bluelake/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1657084332939},{"_id":"themes/bluelake/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1657084332939},{"_id":"themes/bluelake/layout/_partial/after-footer.ejs","hash":"751b24b994ef91df8b37a148f89601fe38600b81","modified":1657084332937},{"_id":"themes/bluelake/source/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1657084332944},{"_id":"themes/bluelake/layout/_partial/archive-post.ejs","hash":"61e74e87a7fb3ad1af7d5ebcb38d80318e8a8621","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/archive.ejs","hash":"40dc9f65d07ff4b0e05ce58b1fb25b7d4a2dfd06","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/about.ejs","hash":"5b8f9f99bf0f5696c51acf05b10867e8a44ef2af","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/article.ejs","hash":"3ca513b7d67c8cb4357d7250cb21abbff84afc41","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/baidu-analytics.ejs","hash":"0bbb6af521596dcbfb2b61191bef5fe196587996","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/footer.ejs","hash":"08ee4a6795a513ad3e3ecf98e58ca5f261bb873c","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/head.ejs","hash":"86e02ee635668c47c78e49d6b27fa5a128c20760","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/commonts-script.ejs","hash":"878fdf33df7ce3ebe98baa9466dcfde8e9cb4156","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/header.ejs","hash":"36690b8c2b7a041770037e699aa530bc6d439d33","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1657084332937},{"_id":"themes/bluelake/layout/_partial/pagination.ejs","hash":"da420eaf6b3672b446c8584a84d9b06bb4e2da90","modified":1657084332938},{"_id":"themes/bluelake/layout/_widget/links.ejs","hash":"8f0f9530c9e1ff4b19945ae8cb93328ca92f4cf9","modified":1657084332939},{"_id":"themes/bluelake/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1657084332939},{"_id":"themes/bluelake/layout/_widget/archive.ejs","hash":"389b54e076c85b7cf102c0952a538a193964fa37","modified":1657084332939},{"_id":"themes/bluelake/layout/_widget/category.ejs","hash":"48636efbaf95e90d7246f5b996be8919a43c0f19","modified":1657084332939},{"_id":"themes/bluelake/layout/_widget/recent_posts.ejs","hash":"af6e1f3de744a229cee30137d7a36b92e998c178","modified":1657084332939},{"_id":"themes/bluelake/layout/_widget/tag.ejs","hash":"5c11d583f3dec803dfdfe75ee64ac424a838d94e","modified":1657084332939},{"_id":"themes/bluelake/layout/_widget/tagcloud.ejs","hash":"2df7a22f3513c66977e63d8d6e03f94e4f8b9f72","modified":1657084332939},{"_id":"themes/bluelake/source/css/style.styl","hash":"92eef2a05e9beb87a7ec2e47ea47fe1f62407ca2","modified":1657084332943},{"_id":"themes/bluelake/source/css/_extend.styl","hash":"9691b1ef1faba9b7bd034fd7b34baf9670aad62a","modified":1657084332939},{"_id":"themes/bluelake/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1657084332943},{"_id":"themes/bluelake/source/css/_variables.styl","hash":"eb7ec783a1ac1276f0913d236f66eaa19fc7ce02","modified":1657084332941},{"_id":"themes/bluelake/source/giteement/gitee.oauthcallback.js","hash":"f24dc1fd8de0dc44b8d70df83f7c82fd2f3fc710","modified":1657084332944},{"_id":"themes/bluelake/source/giteement/giteement.css","hash":"887ad901816c2427b1715444f72ae94f6146e9f7","modified":1657084332944},{"_id":"themes/bluelake/source/js/search.json.js","hash":"ec601a6db4c68a7d9c2d440951c6e26ebfbc1f3a","modified":1657084332946},{"_id":"themes/bluelake/source/js/script.js","hash":"b9441363ff8fe829d90295ea947960338a1a020a","modified":1657084332946},{"_id":"themes/bluelake/layout/_partial/post/comments-count.ejs","hash":"b41c771d033d7a732f65940727b9bee6f99f7040","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/category.ejs","hash":"9357b1e9ec68bd4a4513bb803d4336fce196edda","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/comments.ejs","hash":"69d92ea4106893bdb7d85283ad0acc138226601c","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/date.ejs","hash":"da28f2ee8bb2e5fe6179ce4a5da204d198625bd9","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/reward.ejs","hash":"10b8c96d843651cb79425a09a8e98b88226aaac3","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/nav.ejs","hash":"2238e6339a091dd826baf7f39f97082a381d65c0","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/share.ejs","hash":"c4afe1da14cca0eafd63dca60659a54dc290cdd7","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/toc.ejs","hash":"019048b9be745fa094678303ef3f63607743998b","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/title.ejs","hash":"a444db0ce077b443258b2b41e806c1135c8cb9b9","modified":1657084332938},{"_id":"themes/bluelake/layout/_partial/post/views-count.ejs","hash":"52ebfe5a252909f8b15d9447be64da1645511277","modified":1657084332938},{"_id":"themes/bluelake/source/css/_partial/about.styl","hash":"b936c5d0c9388c6b8097232bf92a9a46a196d6da","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/article.styl","hash":"80e5dce86be8abd5566634eee2191519c948c30d","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/comment.styl","hash":"ac7cb71e18ec2c71159a28b94842e47222fd39bc","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/archive.styl","hash":"0176062d48d82b7917876e19772f7b6430caaae7","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/footer.styl","hash":"5ae7745dc9b434eec4d0be97909dccfd413ba2a8","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/header.styl","hash":"e303e338cacf6df867928e475d775c5d00b4ac7a","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/highlight.styl","hash":"d2e9dfbea2eaf42ebd6eb0ac127ed74f8bd35ca6","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/pagination.styl","hash":"684b498f319e5ebf13332c374f62a8ff5156b6f5","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/iconfont.styl","hash":"77ef07c5dab7af0225e966bbd3a6bcf837a9e101","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/reward.styl","hash":"effc0f0fff4f0ff04e8a5b688793bb441973323a","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/sidebar-aside.styl","hash":"9efc05328c70d014a8ca558cadc047458728eb23","modified":1657084332940},{"_id":"themes/bluelake/source/css/_partial/sidebar-bottom.styl","hash":"d0b3f8607c3608a059ed9a884ba0eb7bc7603766","modified":1657084332940},{"_id":"themes/bluelake/source/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1657084332941},{"_id":"themes/bluelake/source/css/iconfont/iconfont.svg","hash":"1a2fc918df7cd86721f376af104a389dd8d379ea","modified":1657084332941},{"_id":"themes/bluelake/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1657084332940},{"_id":"themes/bluelake/source/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1657084332941},{"_id":"themes/bluelake/source/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1657084332941},{"_id":"themes/bluelake/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1657084332940},{"_id":"themes/bluelake/source/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1657084332941},{"_id":"themes/bluelake/source/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1657084332942},{"_id":"themes/bluelake/source/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1657084332941},{"_id":"themes/bluelake/source/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1657084332943},{"_id":"themes/bluelake/source/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1657084332943},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1657084332946},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1657084332947},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1657084332947},{"_id":"themes/bluelake/source/localshare/css/share.styl","hash":"21c948769783e4031d0d51c2a9f0ca7f387fb432","modified":1657084332946},{"_id":"themes/bluelake/source/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1657084332947},{"_id":"themes/bluelake/source/localshare/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1657084332947},{"_id":"themes/bluelake/source/localshare/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1657084332947},{"_id":"themes/bluelake/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1657084332944},{"_id":"themes/bluelake/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1657084332946},{"_id":"themes/bluelake/source/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1657084332943},{"_id":"themes/bluelake/source/themeauthor.jpg","hash":"9249ed22939add5e393180338b4fb76bfe88034c","modified":1657084332948},{"_id":"themes/bluelake/source/css/images/banner-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1657084332942},{"_id":"themes/bluelake/source/giteement/giteement.min.js","hash":"922687138ef42d0c77ff6a1c6d3d85ab6c743466","modified":1657084332946},{"_id":"public/atom.xml","hash":"8b9d2d05576117ce4336f97bdd1884d534bac18f","modified":1657173502920},{"_id":"public/content.json","hash":"b4f90b19412b0574bedf2eeaa012e7dff30a8fa8","modified":1657173502920},{"_id":"public/sitemap.xml","hash":"f6569d5685dc85edf88ded5d9b0a54854187dd35","modified":1657173502920},{"_id":"public/sitemap.txt","hash":"c65423831b1af2e0a1d991212c28afeb0464d1d1","modified":1657173502920},{"_id":"public/about/index.html","hash":"11758f2f48dbd7db045b4d17e01b7871bae9b3eb","modified":1657173502920},{"_id":"public/2022/07/06/Vue的空格表示/index.html","hash":"f89a653d9d612e898fb5eb0433344360c7a72685","modified":1657173502920},{"_id":"public/2022/07/06/MySQL函数/index.html","hash":"3d3ba96120e19e7669cfb80e661f4c30e46da195","modified":1657173502920},{"_id":"public/2022/07/06/Xml转义字符/index.html","hash":"f37e28f24b78650356d69ef8b306a126ad7cd935","modified":1657173502920},{"_id":"public/2022/07/06/Mac安装软件/index.html","hash":"5eb85bd0f1e00fba259d76b53c7dd46be7c653b1","modified":1657173502920},{"_id":"public/2022/07/06/Mac终端设置代理/index.html","hash":"136d16b53416a8f7e2a20162126f2d6f98ece7be","modified":1657173502920},{"_id":"public/2022/07/06/双网卡实现内外网同时访问/index.html","hash":"345e03088270bd3c0f11d09e3ba8eacad1f2be49","modified":1657173502920},{"_id":"public/2022/07/06/Linux目录挂载/index.html","hash":"ae52e6e87ae1cd594d458a354a5c04ee7f8cccf1","modified":1657173502920},{"_id":"public/archives/index.html","hash":"c70aa19b23e966566e426b6c16818727b1a8e6b5","modified":1657173502920},{"_id":"public/archives/2022/index.html","hash":"3edda587b192cf9ff33da5f75a0b94d7c5c503f5","modified":1657173502920},{"_id":"public/archives/2022/07/index.html","hash":"ba8ea6061951189ae192eb833f3df0cd36209635","modified":1657173502920},{"_id":"public/2022/07/06/Activiti6表结构说明/index.html","hash":"81ea3bc9d0015bdd79d8759573a9ddf96b475b6f","modified":1657173502920},{"_id":"public/2022/07/06/Activiti6工作流Api文档/index.html","hash":"fc587ecc0d3ae646e04601ce024c92f5678a2410","modified":1657173502920},{"_id":"public/index.html","hash":"6d8e809a0559471967b5971d168fcc598419da15","modified":1657173502920},{"_id":"public/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1657173502920},{"_id":"public/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1657173502920},{"_id":"public/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1657173502920},{"_id":"public/css/iconfont/iconfont.svg","hash":"1a2fc918df7cd86721f376af104a389dd8d379ea","modified":1657173502920},{"_id":"public/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1657173502920},{"_id":"public/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1657173502920},{"_id":"public/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1657173502920},{"_id":"public/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1657173502920},{"_id":"public/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1657173502920},{"_id":"public/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1657173502920},{"_id":"public/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1657173502920},{"_id":"public/localshare/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1657173502920},{"_id":"public/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1657173502920},{"_id":"public/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1657173502920},{"_id":"public/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1657173502920},{"_id":"public/themeauthor.jpg","hash":"9249ed22939add5e393180338b4fb76bfe88034c","modified":1657173502920},{"_id":"public/css/images/banner-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1657173502920},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1657173502920},{"_id":"public/giteement/gitee.oauthcallback.js","hash":"f24dc1fd8de0dc44b8d70df83f7c82fd2f3fc710","modified":1657173502920},{"_id":"public/js/search.json.js","hash":"ec601a6db4c68a7d9c2d440951c6e26ebfbc1f3a","modified":1657173502920},{"_id":"public/js/script.js","hash":"b9441363ff8fe829d90295ea947960338a1a020a","modified":1657173502920},{"_id":"public/localshare/css/share.css","hash":"34f53537ebcf2757b35a15a4a9473f2352486372","modified":1657173502920},{"_id":"public/localshare/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1657173502920},{"_id":"public/css/style.css","hash":"630f6c6d9a995cc8fd64c967608ba1d715a841fd","modified":1657173502920},{"_id":"public/giteement/giteement.css","hash":"887ad901816c2427b1715444f72ae94f6146e9f7","modified":1657173502920},{"_id":"public/localshare/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1657173502920},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1657173502920},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1657173502920},{"_id":"public/giteement/giteement.min.js","hash":"922687138ef42d0c77ff6a1c6d3d85ab6c743466","modified":1657173502920}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2022-07-06T05:20:31.000Z","_content":"","source":"about/index.md","raw":"title: about\ndate: 2022-07-06 13:20:31\n---\n","updated":"2022-07-06T12:09:53.616Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl5ambeqy0001rm9kdpirdcng","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Activiti6工作流Api文档","date":"2022-07-06T11:48:55.000Z","_content":"\n\n# Activiti6工作流Api文档 \n\n<!-- more -->\n\n1、activiti 核心api\n\n![img](file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps5.png) \n\n \n\n1.1  流程存储服务 (RepositoryService)\n\n​\t•  管理流程定义文件xml及静态资源服务\n\n​\t•  对流程定义文件对暂停激活\n\n​\t•  流程定义启动权限管理\n\n​\t•  部署文件构造器DeploymentBuilder\n\n​\t•  部署文件查询器DeploymentQuery\n\n​\t•  流程定义文件查询对象ProcessDefinitionQuery\n\n \n\n| 序号 | 方法                                                         | 含义                 | 描述                           | 库表字段                                              |\n| ---- | ------------------------------------------------------------ | -------------------- | ------------------------------ | ----------------------------------------------------- |\n| 1    | repositoryService.createDeployment().addClasspathResource(\"参 数\") .deploy() | 部署流程             | resources文件下面的xml流程文件 | 省略                                                  |\n| 2    | repositoryService.createDeploymentQuery().list()             | 查询所有部署         | 省略                           | 省略                                                  |\n| 3    | repositoryService.createProcessDefinitionQuery().list()      | 查询所有部署流程     | 省略                           | 省略                                                  |\n| 4    | repositoryService.suspendProcessDefinitionById(id)或ByKey    | 挂起流程             | 根据流程id挂起流程             | 修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起 |\n| 5    | repositoryService.activateProcessDefinitionById(id)或ByKey   | 启动流程             | 根据流程id激活流程             | 修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起 |\n| 6    | repositoryService.addCandidateStarterUser(流程id,用户id)     | 流程与用户对应关系   | 添加流程与用户关系             | 操作ACT_RU_IDENTITYLINK表                             |\n| 7    | repositoryService.deleteCandidateStarterGroup(流程id,用户组id) | 流程与用户组对应关系 | 添加流程与用户组关系           | 操作ACT_RU_IDENTITYLINK表                             |\n| 8    | repositoryService.deleteCandidateStarterUser(流程id,用户id)  | 流程与用户对应关系   | 删除流程与用户关系             | 操作ACT_RU_IDENTITYLINK表                             |\n| 9    | repositoryService.deleteCandidateStarterGroup(流程id,用户组id) | 流程与用户对应关系   | 删除流程与用户组关系           | 操作ACT_RU_IDENTITYLINK表                             |\n| 10   | repositoryService.getIdentityLinksForProcessDefinition(流程id) | 查询流程对应关系     | 查询流程对应用户跟组关系       | 操作ACT_RU_IDENTITYLINK表                             |\n\n\n\n1.2 流程运行控制服务  (RuntimeService)\n\n​\t•  启动流程及对流程数据对控制\n\n​\t•  流程实例(ProcessInstance)与执行流(Execution)查询\n\n​\t•  触发流程操作、接收消息和信号\n\n1.3 RuntimeService启动流程变量管理\n\n​\t•  启动流程的常用方式(id,key,message)\n\n​\t•  启动流程可选参数(businesskey,variables,tenantId)\n\n​\t•  变量(variables)的设置和获取\n\n1.4  流程实例与执行流\n\n​\t•  流程实例(ProcessInstance)表示一次工作流业务的数据实体\n\n​\t•  执行流(Execution)表示流程实例中具体的执行路径\n\n​\t•  流程实例接口继承与执行流\n\n1.5  流程触发\n\n​\t•  使用trigger触发ReceiveTask节点\n\n​\t•  触发信号捕获事件signalEvenReceived\n\n​\t•  触发消息捕获事件messageEventReceived\n\n\n\n| 序号 | 方法                                                         | 含义                               | 描述                   |\n| ---- | ------------------------------------------------------------ | ---------------------------------- | ---------------------- |\n| 1    | runtimeService.startProcessInstanceByKey(String processDefinitionKey, Map<String, Object> variables) | 根据部署流程key启动一个流程        | 省略                   |\n| 2    | runtimeService.startProcessInstanceById(String processDefinitionId, Map<String, Object> variables) | 根据部署流程id启动一个流程         | 省略                   |\n| 3    | runtimeService.createProcessInstanceBuilder().businessKey(\"businessKey001\") .processDefinitionKey(String processDefinitionKey).variables( Map<String, Object> variables) .start() | 根据processInstanceBuilder启动流程 | 省略                   |\n| 4    | runtimeService.getVariables(processInstance.getId())         | 根据流程实例id获取传参             | 省略                   |\n| 5    | runtimeService.setVariable(processInstance.getId(),\"key3\",\"value3\") | 新增或修改参数                     | 省略                   |\n| 6    | runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()) | 查询流程实例                       | 根据流程id获取流程实例 |\n| 7    | runtimeService.createExecutionQuery()                        | 获取流程执行对象                   | 省略                   |\n\n\n\n1.4  任务管理服务\n\n+ TaskService\n  + 对用户任务(UserTask)管理和流程控制\n  +  设置用户任务(UserTask)对权限信息(拥有者,候选人,办理人)\n  + 针对用户任务添加任务附件、任务；评价和事件记录\n+ TaskService对Task管理与流程控制\n  + Task对象对创建,删除\n  + 查询Task,并驱动Task节点完成执行\n  + Task相关参数变量(variable)设置\n\n| 序号 | 方法                                               | 含义         | 描述 |\n| ---- | -------------------------------------------------- | ------------ | ---- |\n| 1    | taskService.createTaskQuery().list()               | 查询所有任务 | 省略 |\n| 2    | taskService.setVariable(\"任务id\",\"键\",\"值\")        | 设置普通变量 | 省略 |\n| 3    | taskService.setVariableLocal(\"任务id\",\"键\",\"值\")   | 设置本地变量 | 省略 |\n| 4    | taskService.getVariables(\"任务id\")                 | 获取普通变量 | 省略 |\n| 5    | runtimeService.getVariables(task.getExecutionId()) | 获取本地变量 | 省略 |\n| 6    | taskService.complete(\"任务id\",\"传值Map\")           | 到下一个节点 | 省略 |\n\n\n\n+ TaskService设置Task权限信息\n  + https://blog.51cto.com/u_3423936/2771360\n  + 指定拥有人(Owner)和办理人(Assignee)\n  + 通过claim设置办理人\n\n| 序号 | 方法                                                         | 含义                                     | 描述 |\n| ---- | ------------------------------------------------------------ | ---------------------------------------- | ---- |\n| 1    | taskService.setOwner(\"taskId\",\"user\")                        | 设置流程发起人                           | 省略 |\n| 2    | taskService.claim(\"\"taskId\"\",\"user\")                         | 指定代办人                               |      |\n| 3    | taskService.addCandidateUser(\"user\")                         | 添加候选人                               |      |\n| 4    | taskService.addCandidateGroup(\"group\")                       | 添加候选组                               |      |\n| 5    | taskService.createTaskQuery().taskCandidateUser(\"user\").taskUnassigned().list() | 查询候选人列表有user但是没指定代办人任务 |      |\n| 6    | taskService.createTaskQuery().taskCandidateUser(\"user\").taskUnassigned().list() | 查询候选人列表有我但是没指定代办人任务   |      |\n| 7    | taskService.createTaskQuery().taskAssignee(\"user\").list()    | 查询代办人为user的任务                   |      |\n| 8    | taskService.getIdentityLinksForTask(\"taskId\")                | 查询任务与人员之间的关系                 |      |\n\n\n\n+ TaskService设置Task附加信息\n  + 任务附件(Attachment)创建与查询\n  + 任务评价(Comment)创建与查询\n\n| 序号 | 方法                                                         | 含义             | 描述 |\n| ---- | ------------------------------------------------------------ | ---------------- | ---- |\n|      | taskService.createAttachment(\"类型\",\"任务id\",\"流程Id\",\"附件名称\",\"附件描述\",\"流或者url) | 上传附件         |      |\n|      | taskService.getTaskAttachments(\"任务id\")                     | 上传附件         |      |\n|      | taskService.addComment(\"任务id\",\"流程id\",\"批注1\")            | 添加审批批注     |      |\n|      | taskService.getTaskComments(\"任务id\")                        | 查询审批批注     |      |\n|      | taskService.getTaskEvents(\"任务id\")                          | 查询任务日志记录 |      |\n\n \n\n1.5 身份管理服务\n\n+ IdentityService\n  + 管理用户(User)\n  + 管理用户组(Group)\n  + 用户与用户组关系(Membership)\n\n| 序号 | 方法                                | 含义             | 描述 |\n| ---- | ----------------------------------- | ---------------- | ---- |\n|      | identityService.newUser(\"userid\")   | 创建一个用户     |      |\n|      | identityService.newGroup(\"groupid\") | 创建一个组       |      |\n|      | identityService.saveUser(user)      | 保存或者更新用户 |      |\n|      | identityService.saveGroup(group)    | 保存或者更新组   |      |\n|      | identityService.createUserQuery()   | 查询用户         |      |\n|      | identityService.createGroupQuery()  | 查询组           |      |\n\n \n\n1.6 表单服务管理\n\n+ FormService\n  + 解析流程定义中表单项的配置\n  + 提交表单的方式驱动用户节点流转\n  + 获取自定义外部表单key\n\n \n\n| 序号 | 方法                                                         | 含义                           | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------------------ | ---- |\n| 1    | formService.getStartFormKey(processDefinition.getId())       | 部署流程的id获取表单key        |      |\n| 2    | formService.getStartFormData(processDefinition.getId()).getFormProperties() | 获取开始节点表单内容           |      |\n| 3    | formService.getStartFormData(processDefinition.getId()).getFormProperties() | 获取开始节点表单内容           |      |\n| 4    | formService.submitStartFormData(processDefinition.getId(), \"传值参数\") | 通过formservice启动流程        |      |\n| 5    | formService.submitTaskFormData(\"taskId\",\"传参数\")            | 通过formservice提交task表单    |      |\n| 6    | formService.getTaskFormData(\"taskId\")                        | 通过taskid获取task节点表单内容 |      |\n\n \n\n1.7  历史管理服务\n\n+ HistoryService\n  + 管理流程实例结束后的历史数据\n  + 构建历史数据查询对象\n  + 根据流程实例id删除流程历史数据\n\n![img](file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps6.png) \n\n+ HistoryService构建历史查询对象\n  + create[历史数据实体]Query\n  + createNative[历史数据实体]Query | 通过原生sql查询\n  + createProcessInstanceHistoryLogQuery | 查询一个流程实例的所有其他数据\n\n+ HistoryService删除历史操作\n  + deleteHistoricProcessInstance | 删除历史流程实例及联删除其他信息\n  + deleteHistoricTaskInstance | 删除历史的task实例\n\n \n\n| 序号 | 方法                                                         | 含义                           | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------------------ | ---- |\n| 1    | historyService.createHistoricProcessInstanceQuery()          | 查询流程实例变量               |      |\n| 2    | historyService.createHistoricActivityInstanceQuery()         | 查询活动节点                   |      |\n| 3    | historyService.createHistoricTaskInstanceQuery()             | 查询任务实例                   |      |\n| 4    | historyService.createHistoricVariableInstanceQuery()         | 查询流程任务变量               |      |\n| 5    | historyService.createHistoricDetailQuery()                   | 历史任务流程活动详细信息       |      |\n| 6    | historyService.createProcessInstanceHistoryLogQuery(\"流程实例id\") | 查询一个流程实例的所有其他数据 |      |\n| 7    | historyService.deleteHistoricProcessInstance(\"流程实例id\")   | 删除历史流程实例               |      |\n| 8    | historyService.deleteHistoricTaskInstance(\"taskid\")          | 删除历史任务                   |      |\n\n\n\n1.8 其他管理服务\n\n+ 其他管理服务\n  + 管理服务ManagementService\n  + 动态流程定义服务DynamicBpmnService\n\n+ ManagementService\n  + job任务管理\n  + 数据库相关通用操作\n  + 执行流程引擎命令(Command)\n\n+ Job任务查询\n  + JobQuery 查询一般工作\n  + TimerJobQuery 查询定时工作\n  + SuspendedJobQuery 查询中断工作\n  + DeadLetterJobQuery 查询无法执行的工作\n\n \n\n| 序号 | 方法                                         | 含义               | 描述 |\n| ---- | -------------------------------------------- | ------------------ | ---- |\n| 1    | managementService.createTimerJobQuery(       | 查询定时任务       |      |\n| 2    | managementService.createJobQuery()           | 查询一般工作       |      |\n| 3    | managementService.createSuspendedJobQuery()  | 查询中断工作       |      |\n| 4    | managementService.createDeadLetterJobQuery() | 查询无法执行的工作 |      |\n\n \n\n+ 数据库相关操作\n  + 查询表结构元数据(TableMetaData)\n  + 通用查询(TablePageQuery)\n  + 执行自定义Sql查询(executeCustomSql)\n\n \n\n| 序号 | 方法                                                         | 含义               | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------ | ---- |\n| 1    | managementService.createTablePageQuery().tableName(managementService.getTableName(class)) | 查询实体到所有数据 |      |\n| 2    | managementService.executeCustomSql()                         | 自定义sql查询      |      |\n\n\n\n1.9 异常策略\n\n+ ActivitiEXception\n  + ActivitiWrongDbException 引擎与数据库版本不匹配\n  + ActivitiOptimisticLockingException 并发导致乐观锁异常\n  + ActivitiClassLoadingException 加载类异常\n  + ActivitiObjectNotFoundException 操作对象不存在\n  + ActivitilllegalArgumentException 非法的参数\n  + ActivitiTaskAlreadyClaimedException 任务被重新声明代理人\n  + BpmnError 定义业务异常控制流程","source":"_posts/Activiti6工作流Api文档.md","raw":"---\ntitle: Activiti6工作流Api文档\ndate: 2022-07-06 19:48:55\ntags:\n---\n\n\n# Activiti6工作流Api文档 \n\n<!-- more -->\n\n1、activiti 核心api\n\n![img](file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps5.png) \n\n \n\n1.1  流程存储服务 (RepositoryService)\n\n​\t•  管理流程定义文件xml及静态资源服务\n\n​\t•  对流程定义文件对暂停激活\n\n​\t•  流程定义启动权限管理\n\n​\t•  部署文件构造器DeploymentBuilder\n\n​\t•  部署文件查询器DeploymentQuery\n\n​\t•  流程定义文件查询对象ProcessDefinitionQuery\n\n \n\n| 序号 | 方法                                                         | 含义                 | 描述                           | 库表字段                                              |\n| ---- | ------------------------------------------------------------ | -------------------- | ------------------------------ | ----------------------------------------------------- |\n| 1    | repositoryService.createDeployment().addClasspathResource(\"参 数\") .deploy() | 部署流程             | resources文件下面的xml流程文件 | 省略                                                  |\n| 2    | repositoryService.createDeploymentQuery().list()             | 查询所有部署         | 省略                           | 省略                                                  |\n| 3    | repositoryService.createProcessDefinitionQuery().list()      | 查询所有部署流程     | 省略                           | 省略                                                  |\n| 4    | repositoryService.suspendProcessDefinitionById(id)或ByKey    | 挂起流程             | 根据流程id挂起流程             | 修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起 |\n| 5    | repositoryService.activateProcessDefinitionById(id)或ByKey   | 启动流程             | 根据流程id激活流程             | 修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起 |\n| 6    | repositoryService.addCandidateStarterUser(流程id,用户id)     | 流程与用户对应关系   | 添加流程与用户关系             | 操作ACT_RU_IDENTITYLINK表                             |\n| 7    | repositoryService.deleteCandidateStarterGroup(流程id,用户组id) | 流程与用户组对应关系 | 添加流程与用户组关系           | 操作ACT_RU_IDENTITYLINK表                             |\n| 8    | repositoryService.deleteCandidateStarterUser(流程id,用户id)  | 流程与用户对应关系   | 删除流程与用户关系             | 操作ACT_RU_IDENTITYLINK表                             |\n| 9    | repositoryService.deleteCandidateStarterGroup(流程id,用户组id) | 流程与用户对应关系   | 删除流程与用户组关系           | 操作ACT_RU_IDENTITYLINK表                             |\n| 10   | repositoryService.getIdentityLinksForProcessDefinition(流程id) | 查询流程对应关系     | 查询流程对应用户跟组关系       | 操作ACT_RU_IDENTITYLINK表                             |\n\n\n\n1.2 流程运行控制服务  (RuntimeService)\n\n​\t•  启动流程及对流程数据对控制\n\n​\t•  流程实例(ProcessInstance)与执行流(Execution)查询\n\n​\t•  触发流程操作、接收消息和信号\n\n1.3 RuntimeService启动流程变量管理\n\n​\t•  启动流程的常用方式(id,key,message)\n\n​\t•  启动流程可选参数(businesskey,variables,tenantId)\n\n​\t•  变量(variables)的设置和获取\n\n1.4  流程实例与执行流\n\n​\t•  流程实例(ProcessInstance)表示一次工作流业务的数据实体\n\n​\t•  执行流(Execution)表示流程实例中具体的执行路径\n\n​\t•  流程实例接口继承与执行流\n\n1.5  流程触发\n\n​\t•  使用trigger触发ReceiveTask节点\n\n​\t•  触发信号捕获事件signalEvenReceived\n\n​\t•  触发消息捕获事件messageEventReceived\n\n\n\n| 序号 | 方法                                                         | 含义                               | 描述                   |\n| ---- | ------------------------------------------------------------ | ---------------------------------- | ---------------------- |\n| 1    | runtimeService.startProcessInstanceByKey(String processDefinitionKey, Map<String, Object> variables) | 根据部署流程key启动一个流程        | 省略                   |\n| 2    | runtimeService.startProcessInstanceById(String processDefinitionId, Map<String, Object> variables) | 根据部署流程id启动一个流程         | 省略                   |\n| 3    | runtimeService.createProcessInstanceBuilder().businessKey(\"businessKey001\") .processDefinitionKey(String processDefinitionKey).variables( Map<String, Object> variables) .start() | 根据processInstanceBuilder启动流程 | 省略                   |\n| 4    | runtimeService.getVariables(processInstance.getId())         | 根据流程实例id获取传参             | 省略                   |\n| 5    | runtimeService.setVariable(processInstance.getId(),\"key3\",\"value3\") | 新增或修改参数                     | 省略                   |\n| 6    | runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()) | 查询流程实例                       | 根据流程id获取流程实例 |\n| 7    | runtimeService.createExecutionQuery()                        | 获取流程执行对象                   | 省略                   |\n\n\n\n1.4  任务管理服务\n\n+ TaskService\n  + 对用户任务(UserTask)管理和流程控制\n  +  设置用户任务(UserTask)对权限信息(拥有者,候选人,办理人)\n  + 针对用户任务添加任务附件、任务；评价和事件记录\n+ TaskService对Task管理与流程控制\n  + Task对象对创建,删除\n  + 查询Task,并驱动Task节点完成执行\n  + Task相关参数变量(variable)设置\n\n| 序号 | 方法                                               | 含义         | 描述 |\n| ---- | -------------------------------------------------- | ------------ | ---- |\n| 1    | taskService.createTaskQuery().list()               | 查询所有任务 | 省略 |\n| 2    | taskService.setVariable(\"任务id\",\"键\",\"值\")        | 设置普通变量 | 省略 |\n| 3    | taskService.setVariableLocal(\"任务id\",\"键\",\"值\")   | 设置本地变量 | 省略 |\n| 4    | taskService.getVariables(\"任务id\")                 | 获取普通变量 | 省略 |\n| 5    | runtimeService.getVariables(task.getExecutionId()) | 获取本地变量 | 省略 |\n| 6    | taskService.complete(\"任务id\",\"传值Map\")           | 到下一个节点 | 省略 |\n\n\n\n+ TaskService设置Task权限信息\n  + https://blog.51cto.com/u_3423936/2771360\n  + 指定拥有人(Owner)和办理人(Assignee)\n  + 通过claim设置办理人\n\n| 序号 | 方法                                                         | 含义                                     | 描述 |\n| ---- | ------------------------------------------------------------ | ---------------------------------------- | ---- |\n| 1    | taskService.setOwner(\"taskId\",\"user\")                        | 设置流程发起人                           | 省略 |\n| 2    | taskService.claim(\"\"taskId\"\",\"user\")                         | 指定代办人                               |      |\n| 3    | taskService.addCandidateUser(\"user\")                         | 添加候选人                               |      |\n| 4    | taskService.addCandidateGroup(\"group\")                       | 添加候选组                               |      |\n| 5    | taskService.createTaskQuery().taskCandidateUser(\"user\").taskUnassigned().list() | 查询候选人列表有user但是没指定代办人任务 |      |\n| 6    | taskService.createTaskQuery().taskCandidateUser(\"user\").taskUnassigned().list() | 查询候选人列表有我但是没指定代办人任务   |      |\n| 7    | taskService.createTaskQuery().taskAssignee(\"user\").list()    | 查询代办人为user的任务                   |      |\n| 8    | taskService.getIdentityLinksForTask(\"taskId\")                | 查询任务与人员之间的关系                 |      |\n\n\n\n+ TaskService设置Task附加信息\n  + 任务附件(Attachment)创建与查询\n  + 任务评价(Comment)创建与查询\n\n| 序号 | 方法                                                         | 含义             | 描述 |\n| ---- | ------------------------------------------------------------ | ---------------- | ---- |\n|      | taskService.createAttachment(\"类型\",\"任务id\",\"流程Id\",\"附件名称\",\"附件描述\",\"流或者url) | 上传附件         |      |\n|      | taskService.getTaskAttachments(\"任务id\")                     | 上传附件         |      |\n|      | taskService.addComment(\"任务id\",\"流程id\",\"批注1\")            | 添加审批批注     |      |\n|      | taskService.getTaskComments(\"任务id\")                        | 查询审批批注     |      |\n|      | taskService.getTaskEvents(\"任务id\")                          | 查询任务日志记录 |      |\n\n \n\n1.5 身份管理服务\n\n+ IdentityService\n  + 管理用户(User)\n  + 管理用户组(Group)\n  + 用户与用户组关系(Membership)\n\n| 序号 | 方法                                | 含义             | 描述 |\n| ---- | ----------------------------------- | ---------------- | ---- |\n|      | identityService.newUser(\"userid\")   | 创建一个用户     |      |\n|      | identityService.newGroup(\"groupid\") | 创建一个组       |      |\n|      | identityService.saveUser(user)      | 保存或者更新用户 |      |\n|      | identityService.saveGroup(group)    | 保存或者更新组   |      |\n|      | identityService.createUserQuery()   | 查询用户         |      |\n|      | identityService.createGroupQuery()  | 查询组           |      |\n\n \n\n1.6 表单服务管理\n\n+ FormService\n  + 解析流程定义中表单项的配置\n  + 提交表单的方式驱动用户节点流转\n  + 获取自定义外部表单key\n\n \n\n| 序号 | 方法                                                         | 含义                           | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------------------ | ---- |\n| 1    | formService.getStartFormKey(processDefinition.getId())       | 部署流程的id获取表单key        |      |\n| 2    | formService.getStartFormData(processDefinition.getId()).getFormProperties() | 获取开始节点表单内容           |      |\n| 3    | formService.getStartFormData(processDefinition.getId()).getFormProperties() | 获取开始节点表单内容           |      |\n| 4    | formService.submitStartFormData(processDefinition.getId(), \"传值参数\") | 通过formservice启动流程        |      |\n| 5    | formService.submitTaskFormData(\"taskId\",\"传参数\")            | 通过formservice提交task表单    |      |\n| 6    | formService.getTaskFormData(\"taskId\")                        | 通过taskid获取task节点表单内容 |      |\n\n \n\n1.7  历史管理服务\n\n+ HistoryService\n  + 管理流程实例结束后的历史数据\n  + 构建历史数据查询对象\n  + 根据流程实例id删除流程历史数据\n\n![img](file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps6.png) \n\n+ HistoryService构建历史查询对象\n  + create[历史数据实体]Query\n  + createNative[历史数据实体]Query | 通过原生sql查询\n  + createProcessInstanceHistoryLogQuery | 查询一个流程实例的所有其他数据\n\n+ HistoryService删除历史操作\n  + deleteHistoricProcessInstance | 删除历史流程实例及联删除其他信息\n  + deleteHistoricTaskInstance | 删除历史的task实例\n\n \n\n| 序号 | 方法                                                         | 含义                           | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------------------ | ---- |\n| 1    | historyService.createHistoricProcessInstanceQuery()          | 查询流程实例变量               |      |\n| 2    | historyService.createHistoricActivityInstanceQuery()         | 查询活动节点                   |      |\n| 3    | historyService.createHistoricTaskInstanceQuery()             | 查询任务实例                   |      |\n| 4    | historyService.createHistoricVariableInstanceQuery()         | 查询流程任务变量               |      |\n| 5    | historyService.createHistoricDetailQuery()                   | 历史任务流程活动详细信息       |      |\n| 6    | historyService.createProcessInstanceHistoryLogQuery(\"流程实例id\") | 查询一个流程实例的所有其他数据 |      |\n| 7    | historyService.deleteHistoricProcessInstance(\"流程实例id\")   | 删除历史流程实例               |      |\n| 8    | historyService.deleteHistoricTaskInstance(\"taskid\")          | 删除历史任务                   |      |\n\n\n\n1.8 其他管理服务\n\n+ 其他管理服务\n  + 管理服务ManagementService\n  + 动态流程定义服务DynamicBpmnService\n\n+ ManagementService\n  + job任务管理\n  + 数据库相关通用操作\n  + 执行流程引擎命令(Command)\n\n+ Job任务查询\n  + JobQuery 查询一般工作\n  + TimerJobQuery 查询定时工作\n  + SuspendedJobQuery 查询中断工作\n  + DeadLetterJobQuery 查询无法执行的工作\n\n \n\n| 序号 | 方法                                         | 含义               | 描述 |\n| ---- | -------------------------------------------- | ------------------ | ---- |\n| 1    | managementService.createTimerJobQuery(       | 查询定时任务       |      |\n| 2    | managementService.createJobQuery()           | 查询一般工作       |      |\n| 3    | managementService.createSuspendedJobQuery()  | 查询中断工作       |      |\n| 4    | managementService.createDeadLetterJobQuery() | 查询无法执行的工作 |      |\n\n \n\n+ 数据库相关操作\n  + 查询表结构元数据(TableMetaData)\n  + 通用查询(TablePageQuery)\n  + 执行自定义Sql查询(executeCustomSql)\n\n \n\n| 序号 | 方法                                                         | 含义               | 描述 |\n| ---- | ------------------------------------------------------------ | ------------------ | ---- |\n| 1    | managementService.createTablePageQuery().tableName(managementService.getTableName(class)) | 查询实体到所有数据 |      |\n| 2    | managementService.executeCustomSql()                         | 自定义sql查询      |      |\n\n\n\n1.9 异常策略\n\n+ ActivitiEXception\n  + ActivitiWrongDbException 引擎与数据库版本不匹配\n  + ActivitiOptimisticLockingException 并发导致乐观锁异常\n  + ActivitiClassLoadingException 加载类异常\n  + ActivitiObjectNotFoundException 操作对象不存在\n  + ActivitilllegalArgumentException 非法的参数\n  + ActivitiTaskAlreadyClaimedException 任务被重新声明代理人\n  + BpmnError 定义业务异常控制流程","slug":"Activiti6工作流Api文档","published":1,"updated":"2022-07-06T11:55:41.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ambequ0000rm9khhxf49oy","content":"<h1 id=\"Activiti6工作流Api文档\"><a href=\"#Activiti6工作流Api文档\" class=\"headerlink\" title=\"Activiti6工作流Api文档\"></a>Activiti6工作流Api文档</h1><span id=\"more\"></span>\n\n<p>1、activiti 核心api</p>\n<p><img src=\"file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps5.png\" alt=\"img\"> </p>\n<p>1.1  流程存储服务 (RepositoryService)</p>\n<p>​    •  管理流程定义文件xml及静态资源服务</p>\n<p>​    •  对流程定义文件对暂停激活</p>\n<p>​    •  流程定义启动权限管理</p>\n<p>​    •  部署文件构造器DeploymentBuilder</p>\n<p>​    •  部署文件查询器DeploymentQuery</p>\n<p>​    •  流程定义文件查询对象ProcessDefinitionQuery</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n<th>库表字段</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>repositoryService.createDeployment().addClasspathResource(“参 数”) .deploy()</td>\n<td>部署流程</td>\n<td>resources文件下面的xml流程文件</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>repositoryService.createDeploymentQuery().list()</td>\n<td>查询所有部署</td>\n<td>省略</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>repositoryService.createProcessDefinitionQuery().list()</td>\n<td>查询所有部署流程</td>\n<td>省略</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>repositoryService.suspendProcessDefinitionById(id)或ByKey</td>\n<td>挂起流程</td>\n<td>根据流程id挂起流程</td>\n<td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td>\n</tr>\n<tr>\n<td>5</td>\n<td>repositoryService.activateProcessDefinitionById(id)或ByKey</td>\n<td>启动流程</td>\n<td>根据流程id激活流程</td>\n<td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td>\n</tr>\n<tr>\n<td>6</td>\n<td>repositoryService.addCandidateStarterUser(流程id,用户id)</td>\n<td>流程与用户对应关系</td>\n<td>添加流程与用户关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>7</td>\n<td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td>\n<td>流程与用户组对应关系</td>\n<td>添加流程与用户组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>8</td>\n<td>repositoryService.deleteCandidateStarterUser(流程id,用户id)</td>\n<td>流程与用户对应关系</td>\n<td>删除流程与用户关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>9</td>\n<td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td>\n<td>流程与用户对应关系</td>\n<td>删除流程与用户组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>10</td>\n<td>repositoryService.getIdentityLinksForProcessDefinition(流程id)</td>\n<td>查询流程对应关系</td>\n<td>查询流程对应用户跟组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n</tbody></table>\n<p>1.2 流程运行控制服务  (RuntimeService)</p>\n<p>​    •  启动流程及对流程数据对控制</p>\n<p>​    •  流程实例(ProcessInstance)与执行流(Execution)查询</p>\n<p>​    •  触发流程操作、接收消息和信号</p>\n<p>1.3 RuntimeService启动流程变量管理</p>\n<p>​    •  启动流程的常用方式(id,key,message)</p>\n<p>​    •  启动流程可选参数(businesskey,variables,tenantId)</p>\n<p>​    •  变量(variables)的设置和获取</p>\n<p>1.4  流程实例与执行流</p>\n<p>​    •  流程实例(ProcessInstance)表示一次工作流业务的数据实体</p>\n<p>​    •  执行流(Execution)表示流程实例中具体的执行路径</p>\n<p>​    •  流程实例接口继承与执行流</p>\n<p>1.5  流程触发</p>\n<p>​    •  使用trigger触发ReceiveTask节点</p>\n<p>​    •  触发信号捕获事件signalEvenReceived</p>\n<p>​    •  触发消息捕获事件messageEventReceived</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>runtimeService.startProcessInstanceByKey(String processDefinitionKey, Map&lt;String, Object&gt; variables)</td>\n<td>根据部署流程key启动一个流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>runtimeService.startProcessInstanceById(String processDefinitionId, Map&lt;String, Object&gt; variables)</td>\n<td>根据部署流程id启动一个流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>runtimeService.createProcessInstanceBuilder().businessKey(“businessKey001”) .processDefinitionKey(String processDefinitionKey).variables( Map&lt;String, Object&gt; variables) .start()</td>\n<td>根据processInstanceBuilder启动流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>runtimeService.getVariables(processInstance.getId())</td>\n<td>根据流程实例id获取传参</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>5</td>\n<td>runtimeService.setVariable(processInstance.getId(),”key3”,”value3”)</td>\n<td>新增或修改参数</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>6</td>\n<td>runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId())</td>\n<td>查询流程实例</td>\n<td>根据流程id获取流程实例</td>\n</tr>\n<tr>\n<td>7</td>\n<td>runtimeService.createExecutionQuery()</td>\n<td>获取流程执行对象</td>\n<td>省略</td>\n</tr>\n</tbody></table>\n<p>1.4  任务管理服务</p>\n<ul>\n<li>TaskService<ul>\n<li>对用户任务(UserTask)管理和流程控制</li>\n<li> 设置用户任务(UserTask)对权限信息(拥有者,候选人,办理人)</li>\n<li>针对用户任务添加任务附件、任务；评价和事件记录</li>\n</ul>\n</li>\n<li>TaskService对Task管理与流程控制<ul>\n<li>Task对象对创建,删除</li>\n<li>查询Task,并驱动Task节点完成执行</li>\n<li>Task相关参数变量(variable)设置</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>taskService.createTaskQuery().list()</td>\n<td>查询所有任务</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>taskService.setVariable(“任务id”,”键”,”值”)</td>\n<td>设置普通变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>taskService.setVariableLocal(“任务id”,”键”,”值”)</td>\n<td>设置本地变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>taskService.getVariables(“任务id”)</td>\n<td>获取普通变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>5</td>\n<td>runtimeService.getVariables(task.getExecutionId())</td>\n<td>获取本地变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>6</td>\n<td>taskService.complete(“任务id”,”传值Map”)</td>\n<td>到下一个节点</td>\n<td>省略</td>\n</tr>\n</tbody></table>\n<ul>\n<li>TaskService设置Task权限信息<ul>\n<li><a href=\"https://blog.51cto.com/u_3423936/2771360\">https://blog.51cto.com/u_3423936/2771360</a></li>\n<li>指定拥有人(Owner)和办理人(Assignee)</li>\n<li>通过claim设置办理人</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>taskService.setOwner(“taskId”,”user”)</td>\n<td>设置流程发起人</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>taskService.claim(“”taskId””,”user”)</td>\n<td>指定代办人</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>taskService.addCandidateUser(“user”)</td>\n<td>添加候选人</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>taskService.addCandidateGroup(“group”)</td>\n<td>添加候选组</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td>\n<td>查询候选人列表有user但是没指定代办人任务</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td>\n<td>查询候选人列表有我但是没指定代办人任务</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>taskService.createTaskQuery().taskAssignee(“user”).list()</td>\n<td>查询代办人为user的任务</td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>taskService.getIdentityLinksForTask(“taskId”)</td>\n<td>查询任务与人员之间的关系</td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li>TaskService设置Task附加信息<ul>\n<li>任务附件(Attachment)创建与查询</li>\n<li>任务评价(Comment)创建与查询</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>taskService.createAttachment(“类型”,”任务id”,”流程Id”,”附件名称”,”附件描述”,”流或者url)</td>\n<td>上传附件</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskAttachments(“任务id”)</td>\n<td>上传附件</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.addComment(“任务id”,”流程id”,”批注1”)</td>\n<td>添加审批批注</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskComments(“任务id”)</td>\n<td>查询审批批注</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskEvents(“任务id”)</td>\n<td>查询任务日志记录</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.5 身份管理服务</p>\n<ul>\n<li>IdentityService<ul>\n<li>管理用户(User)</li>\n<li>管理用户组(Group)</li>\n<li>用户与用户组关系(Membership)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>identityService.newUser(“userid”)</td>\n<td>创建一个用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.newGroup(“groupid”)</td>\n<td>创建一个组</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.saveUser(user)</td>\n<td>保存或者更新用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.saveGroup(group)</td>\n<td>保存或者更新组</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.createUserQuery()</td>\n<td>查询用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.createGroupQuery()</td>\n<td>查询组</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.6 表单服务管理</p>\n<ul>\n<li>FormService<ul>\n<li>解析流程定义中表单项的配置</li>\n<li>提交表单的方式驱动用户节点流转</li>\n<li>获取自定义外部表单key</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>formService.getStartFormKey(processDefinition.getId())</td>\n<td>部署流程的id获取表单key</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td>\n<td>获取开始节点表单内容</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td>\n<td>获取开始节点表单内容</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>formService.submitStartFormData(processDefinition.getId(), “传值参数”)</td>\n<td>通过formservice启动流程</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>formService.submitTaskFormData(“taskId”,”传参数”)</td>\n<td>通过formservice提交task表单</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>formService.getTaskFormData(“taskId”)</td>\n<td>通过taskid获取task节点表单内容</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.7  历史管理服务</p>\n<ul>\n<li>HistoryService<ul>\n<li>管理流程实例结束后的历史数据</li>\n<li>构建历史数据查询对象</li>\n<li>根据流程实例id删除流程历史数据</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps6.png\" alt=\"img\"> </p>\n<ul>\n<li><p>HistoryService构建历史查询对象</p>\n<ul>\n<li>create[历史数据实体]Query</li>\n<li>createNative[历史数据实体]Query | 通过原生sql查询</li>\n<li>createProcessInstanceHistoryLogQuery | 查询一个流程实例的所有其他数据</li>\n</ul>\n</li>\n<li><p>HistoryService删除历史操作</p>\n<ul>\n<li>deleteHistoricProcessInstance | 删除历史流程实例及联删除其他信息</li>\n<li>deleteHistoricTaskInstance | 删除历史的task实例</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>historyService.createHistoricProcessInstanceQuery()</td>\n<td>查询流程实例变量</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>historyService.createHistoricActivityInstanceQuery()</td>\n<td>查询活动节点</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>historyService.createHistoricTaskInstanceQuery()</td>\n<td>查询任务实例</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>historyService.createHistoricVariableInstanceQuery()</td>\n<td>查询流程任务变量</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>historyService.createHistoricDetailQuery()</td>\n<td>历史任务流程活动详细信息</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>historyService.createProcessInstanceHistoryLogQuery(“流程实例id”)</td>\n<td>查询一个流程实例的所有其他数据</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>historyService.deleteHistoricProcessInstance(“流程实例id”)</td>\n<td>删除历史流程实例</td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>historyService.deleteHistoricTaskInstance(“taskid”)</td>\n<td>删除历史任务</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.8 其他管理服务</p>\n<ul>\n<li><p>其他管理服务</p>\n<ul>\n<li>管理服务ManagementService</li>\n<li>动态流程定义服务DynamicBpmnService</li>\n</ul>\n</li>\n<li><p>ManagementService</p>\n<ul>\n<li>job任务管理</li>\n<li>数据库相关通用操作</li>\n<li>执行流程引擎命令(Command)</li>\n</ul>\n</li>\n<li><p>Job任务查询</p>\n<ul>\n<li>JobQuery 查询一般工作</li>\n<li>TimerJobQuery 查询定时工作</li>\n<li>SuspendedJobQuery 查询中断工作</li>\n<li>DeadLetterJobQuery 查询无法执行的工作</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>managementService.createTimerJobQuery(</td>\n<td>查询定时任务</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>managementService.createJobQuery()</td>\n<td>查询一般工作</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>managementService.createSuspendedJobQuery()</td>\n<td>查询中断工作</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>managementService.createDeadLetterJobQuery()</td>\n<td>查询无法执行的工作</td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li>数据库相关操作<ul>\n<li>查询表结构元数据(TableMetaData)</li>\n<li>通用查询(TablePageQuery)</li>\n<li>执行自定义Sql查询(executeCustomSql)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>managementService.createTablePageQuery().tableName(managementService.getTableName(class))</td>\n<td>查询实体到所有数据</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>managementService.executeCustomSql()</td>\n<td>自定义sql查询</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.9 异常策略</p>\n<ul>\n<li>ActivitiEXception<ul>\n<li>ActivitiWrongDbException 引擎与数据库版本不匹配</li>\n<li>ActivitiOptimisticLockingException 并发导致乐观锁异常</li>\n<li>ActivitiClassLoadingException 加载类异常</li>\n<li>ActivitiObjectNotFoundException 操作对象不存在</li>\n<li>ActivitilllegalArgumentException 非法的参数</li>\n<li>ActivitiTaskAlreadyClaimedException 任务被重新声明代理人</li>\n<li>BpmnError 定义业务异常控制流程</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"Activiti6工作流Api文档\"><a href=\"#Activiti6工作流Api文档\" class=\"headerlink\" title=\"Activiti6工作流Api文档\"></a>Activiti6工作流Api文档</h1>","more":"<p>1、activiti 核心api</p>\n<p><img src=\"file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps5.png\" alt=\"img\"> </p>\n<p>1.1  流程存储服务 (RepositoryService)</p>\n<p>​    •  管理流程定义文件xml及静态资源服务</p>\n<p>​    •  对流程定义文件对暂停激活</p>\n<p>​    •  流程定义启动权限管理</p>\n<p>​    •  部署文件构造器DeploymentBuilder</p>\n<p>​    •  部署文件查询器DeploymentQuery</p>\n<p>​    •  流程定义文件查询对象ProcessDefinitionQuery</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n<th>库表字段</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>repositoryService.createDeployment().addClasspathResource(“参 数”) .deploy()</td>\n<td>部署流程</td>\n<td>resources文件下面的xml流程文件</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>repositoryService.createDeploymentQuery().list()</td>\n<td>查询所有部署</td>\n<td>省略</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>repositoryService.createProcessDefinitionQuery().list()</td>\n<td>查询所有部署流程</td>\n<td>省略</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>repositoryService.suspendProcessDefinitionById(id)或ByKey</td>\n<td>挂起流程</td>\n<td>根据流程id挂起流程</td>\n<td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td>\n</tr>\n<tr>\n<td>5</td>\n<td>repositoryService.activateProcessDefinitionById(id)或ByKey</td>\n<td>启动流程</td>\n<td>根据流程id激活流程</td>\n<td>修改表ACT_RE_PROCDEF字段SUSPENSION_STATE_:1激活 2挂起</td>\n</tr>\n<tr>\n<td>6</td>\n<td>repositoryService.addCandidateStarterUser(流程id,用户id)</td>\n<td>流程与用户对应关系</td>\n<td>添加流程与用户关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>7</td>\n<td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td>\n<td>流程与用户组对应关系</td>\n<td>添加流程与用户组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>8</td>\n<td>repositoryService.deleteCandidateStarterUser(流程id,用户id)</td>\n<td>流程与用户对应关系</td>\n<td>删除流程与用户关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>9</td>\n<td>repositoryService.deleteCandidateStarterGroup(流程id,用户组id)</td>\n<td>流程与用户对应关系</td>\n<td>删除流程与用户组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n<tr>\n<td>10</td>\n<td>repositoryService.getIdentityLinksForProcessDefinition(流程id)</td>\n<td>查询流程对应关系</td>\n<td>查询流程对应用户跟组关系</td>\n<td>操作ACT_RU_IDENTITYLINK表</td>\n</tr>\n</tbody></table>\n<p>1.2 流程运行控制服务  (RuntimeService)</p>\n<p>​    •  启动流程及对流程数据对控制</p>\n<p>​    •  流程实例(ProcessInstance)与执行流(Execution)查询</p>\n<p>​    •  触发流程操作、接收消息和信号</p>\n<p>1.3 RuntimeService启动流程变量管理</p>\n<p>​    •  启动流程的常用方式(id,key,message)</p>\n<p>​    •  启动流程可选参数(businesskey,variables,tenantId)</p>\n<p>​    •  变量(variables)的设置和获取</p>\n<p>1.4  流程实例与执行流</p>\n<p>​    •  流程实例(ProcessInstance)表示一次工作流业务的数据实体</p>\n<p>​    •  执行流(Execution)表示流程实例中具体的执行路径</p>\n<p>​    •  流程实例接口继承与执行流</p>\n<p>1.5  流程触发</p>\n<p>​    •  使用trigger触发ReceiveTask节点</p>\n<p>​    •  触发信号捕获事件signalEvenReceived</p>\n<p>​    •  触发消息捕获事件messageEventReceived</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>runtimeService.startProcessInstanceByKey(String processDefinitionKey, Map&lt;String, Object&gt; variables)</td>\n<td>根据部署流程key启动一个流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>runtimeService.startProcessInstanceById(String processDefinitionId, Map&lt;String, Object&gt; variables)</td>\n<td>根据部署流程id启动一个流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>runtimeService.createProcessInstanceBuilder().businessKey(“businessKey001”) .processDefinitionKey(String processDefinitionKey).variables( Map&lt;String, Object&gt; variables) .start()</td>\n<td>根据processInstanceBuilder启动流程</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>runtimeService.getVariables(processInstance.getId())</td>\n<td>根据流程实例id获取传参</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>5</td>\n<td>runtimeService.setVariable(processInstance.getId(),”key3”,”value3”)</td>\n<td>新增或修改参数</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>6</td>\n<td>runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId())</td>\n<td>查询流程实例</td>\n<td>根据流程id获取流程实例</td>\n</tr>\n<tr>\n<td>7</td>\n<td>runtimeService.createExecutionQuery()</td>\n<td>获取流程执行对象</td>\n<td>省略</td>\n</tr>\n</tbody></table>\n<p>1.4  任务管理服务</p>\n<ul>\n<li>TaskService<ul>\n<li>对用户任务(UserTask)管理和流程控制</li>\n<li> 设置用户任务(UserTask)对权限信息(拥有者,候选人,办理人)</li>\n<li>针对用户任务添加任务附件、任务；评价和事件记录</li>\n</ul>\n</li>\n<li>TaskService对Task管理与流程控制<ul>\n<li>Task对象对创建,删除</li>\n<li>查询Task,并驱动Task节点完成执行</li>\n<li>Task相关参数变量(variable)设置</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>taskService.createTaskQuery().list()</td>\n<td>查询所有任务</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>taskService.setVariable(“任务id”,”键”,”值”)</td>\n<td>设置普通变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>3</td>\n<td>taskService.setVariableLocal(“任务id”,”键”,”值”)</td>\n<td>设置本地变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>4</td>\n<td>taskService.getVariables(“任务id”)</td>\n<td>获取普通变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>5</td>\n<td>runtimeService.getVariables(task.getExecutionId())</td>\n<td>获取本地变量</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>6</td>\n<td>taskService.complete(“任务id”,”传值Map”)</td>\n<td>到下一个节点</td>\n<td>省略</td>\n</tr>\n</tbody></table>\n<ul>\n<li>TaskService设置Task权限信息<ul>\n<li><a href=\"https://blog.51cto.com/u_3423936/2771360\">https://blog.51cto.com/u_3423936/2771360</a></li>\n<li>指定拥有人(Owner)和办理人(Assignee)</li>\n<li>通过claim设置办理人</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>taskService.setOwner(“taskId”,”user”)</td>\n<td>设置流程发起人</td>\n<td>省略</td>\n</tr>\n<tr>\n<td>2</td>\n<td>taskService.claim(“”taskId””,”user”)</td>\n<td>指定代办人</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>taskService.addCandidateUser(“user”)</td>\n<td>添加候选人</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>taskService.addCandidateGroup(“group”)</td>\n<td>添加候选组</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td>\n<td>查询候选人列表有user但是没指定代办人任务</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>taskService.createTaskQuery().taskCandidateUser(“user”).taskUnassigned().list()</td>\n<td>查询候选人列表有我但是没指定代办人任务</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>taskService.createTaskQuery().taskAssignee(“user”).list()</td>\n<td>查询代办人为user的任务</td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>taskService.getIdentityLinksForTask(“taskId”)</td>\n<td>查询任务与人员之间的关系</td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li>TaskService设置Task附加信息<ul>\n<li>任务附件(Attachment)创建与查询</li>\n<li>任务评价(Comment)创建与查询</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>taskService.createAttachment(“类型”,”任务id”,”流程Id”,”附件名称”,”附件描述”,”流或者url)</td>\n<td>上传附件</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskAttachments(“任务id”)</td>\n<td>上传附件</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.addComment(“任务id”,”流程id”,”批注1”)</td>\n<td>添加审批批注</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskComments(“任务id”)</td>\n<td>查询审批批注</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>taskService.getTaskEvents(“任务id”)</td>\n<td>查询任务日志记录</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.5 身份管理服务</p>\n<ul>\n<li>IdentityService<ul>\n<li>管理用户(User)</li>\n<li>管理用户组(Group)</li>\n<li>用户与用户组关系(Membership)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td>identityService.newUser(“userid”)</td>\n<td>创建一个用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.newGroup(“groupid”)</td>\n<td>创建一个组</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.saveUser(user)</td>\n<td>保存或者更新用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.saveGroup(group)</td>\n<td>保存或者更新组</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.createUserQuery()</td>\n<td>查询用户</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>identityService.createGroupQuery()</td>\n<td>查询组</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.6 表单服务管理</p>\n<ul>\n<li>FormService<ul>\n<li>解析流程定义中表单项的配置</li>\n<li>提交表单的方式驱动用户节点流转</li>\n<li>获取自定义外部表单key</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>formService.getStartFormKey(processDefinition.getId())</td>\n<td>部署流程的id获取表单key</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td>\n<td>获取开始节点表单内容</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>formService.getStartFormData(processDefinition.getId()).getFormProperties()</td>\n<td>获取开始节点表单内容</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>formService.submitStartFormData(processDefinition.getId(), “传值参数”)</td>\n<td>通过formservice启动流程</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>formService.submitTaskFormData(“taskId”,”传参数”)</td>\n<td>通过formservice提交task表单</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>formService.getTaskFormData(“taskId”)</td>\n<td>通过taskid获取task节点表单内容</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.7  历史管理服务</p>\n<ul>\n<li>HistoryService<ul>\n<li>管理流程实例结束后的历史数据</li>\n<li>构建历史数据查询对象</li>\n<li>根据流程实例id删除流程历史数据</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"file:////private/var/folders/m4/cdq8ymt567d_pnlb0620n4_40000gn/T/com.kingsoft.wpsoffice.mac/wps-junhu/ksohtml//wps6.png\" alt=\"img\"> </p>\n<ul>\n<li><p>HistoryService构建历史查询对象</p>\n<ul>\n<li>create[历史数据实体]Query</li>\n<li>createNative[历史数据实体]Query | 通过原生sql查询</li>\n<li>createProcessInstanceHistoryLogQuery | 查询一个流程实例的所有其他数据</li>\n</ul>\n</li>\n<li><p>HistoryService删除历史操作</p>\n<ul>\n<li>deleteHistoricProcessInstance | 删除历史流程实例及联删除其他信息</li>\n<li>deleteHistoricTaskInstance | 删除历史的task实例</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>historyService.createHistoricProcessInstanceQuery()</td>\n<td>查询流程实例变量</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>historyService.createHistoricActivityInstanceQuery()</td>\n<td>查询活动节点</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>historyService.createHistoricTaskInstanceQuery()</td>\n<td>查询任务实例</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>historyService.createHistoricVariableInstanceQuery()</td>\n<td>查询流程任务变量</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>historyService.createHistoricDetailQuery()</td>\n<td>历史任务流程活动详细信息</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>historyService.createProcessInstanceHistoryLogQuery(“流程实例id”)</td>\n<td>查询一个流程实例的所有其他数据</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>historyService.deleteHistoricProcessInstance(“流程实例id”)</td>\n<td>删除历史流程实例</td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>historyService.deleteHistoricTaskInstance(“taskid”)</td>\n<td>删除历史任务</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.8 其他管理服务</p>\n<ul>\n<li><p>其他管理服务</p>\n<ul>\n<li>管理服务ManagementService</li>\n<li>动态流程定义服务DynamicBpmnService</li>\n</ul>\n</li>\n<li><p>ManagementService</p>\n<ul>\n<li>job任务管理</li>\n<li>数据库相关通用操作</li>\n<li>执行流程引擎命令(Command)</li>\n</ul>\n</li>\n<li><p>Job任务查询</p>\n<ul>\n<li>JobQuery 查询一般工作</li>\n<li>TimerJobQuery 查询定时工作</li>\n<li>SuspendedJobQuery 查询中断工作</li>\n<li>DeadLetterJobQuery 查询无法执行的工作</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>managementService.createTimerJobQuery(</td>\n<td>查询定时任务</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>managementService.createJobQuery()</td>\n<td>查询一般工作</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>managementService.createSuspendedJobQuery()</td>\n<td>查询中断工作</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>managementService.createDeadLetterJobQuery()</td>\n<td>查询无法执行的工作</td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li>数据库相关操作<ul>\n<li>查询表结构元数据(TableMetaData)</li>\n<li>通用查询(TablePageQuery)</li>\n<li>执行自定义Sql查询(executeCustomSql)</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>方法</th>\n<th>含义</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>managementService.createTablePageQuery().tableName(managementService.getTableName(class))</td>\n<td>查询实体到所有数据</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>managementService.executeCustomSql()</td>\n<td>自定义sql查询</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>1.9 异常策略</p>\n<ul>\n<li>ActivitiEXception<ul>\n<li>ActivitiWrongDbException 引擎与数据库版本不匹配</li>\n<li>ActivitiOptimisticLockingException 并发导致乐观锁异常</li>\n<li>ActivitiClassLoadingException 加载类异常</li>\n<li>ActivitiObjectNotFoundException 操作对象不存在</li>\n<li>ActivitilllegalArgumentException 非法的参数</li>\n<li>ActivitiTaskAlreadyClaimedException 任务被重新声明代理人</li>\n<li>BpmnError 定义业务异常控制流程</li>\n</ul>\n</li>\n</ul>"},{"title":"Mac安装软件","date":"2022-07-06T05:39:54.000Z","_content":"\n**1、**【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**\n打开终端，输入：\n\n```sh\nsudo xattr -r -d com.apple.quarantine /Applications/服务名.app\n```\n\n","source":"_posts/Mac安装软件.md","raw":"---\ntitle: Mac安装软件\ndate: 2022-07-06 13:39:54\ntags:\n---\n\n**1、**【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**\n打开终端，输入：\n\n```sh\nsudo xattr -r -d com.apple.quarantine /Applications/服务名.app\n```\n\n","slug":"Mac安装软件","published":1,"updated":"2022-07-06T05:41:28.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ambeqz0002rm9k4ai93ufm","content":"<p><strong>1、</strong>【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**<br>打开终端，输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xattr -r -d com.apple.quarantine /Applications/服务名.app</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1、</strong>【XXX.app 已损坏，打不开。您应该将它移到废纸篓】解决方法：**<br>打开终端，输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xattr -r -d com.apple.quarantine /Applications/服务名.app</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Linux目录挂载","date":"2022-07-06T05:33:03.000Z","_content":"\n## 目录挂载\n\n### 挂载共享文件夹\n\nmount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password\n\n\n<!-- more -->","source":"_posts/Linux目录挂载.md","raw":"---\ntitle: Linux目录挂载\ndate: 2022-07-06 13:33:03\ntags:\n---\n\n## 目录挂载\n\n### 挂载共享文件夹\n\nmount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password\n\n\n<!-- more -->","slug":"Linux目录挂载","published":1,"updated":"2022-07-06T11:57:54.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber20003rm9kb4m45ao6","content":"<h2 id=\"目录挂载\"><a href=\"#目录挂载\" class=\"headerlink\" title=\"目录挂载\"></a>目录挂载</h2><h3 id=\"挂载共享文件夹\"><a href=\"#挂载共享文件夹\" class=\"headerlink\" title=\"挂载共享文件夹\"></a>挂载共享文件夹</h3><p>mount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password</p>\n<span id=\"more\"></span>","site":{"data":{}},"excerpt":"<h2 id=\"目录挂载\"><a href=\"#目录挂载\" class=\"headerlink\" title=\"目录挂载\"></a>目录挂载</h2><h3 id=\"挂载共享文件夹\"><a href=\"#挂载共享文件夹\" class=\"headerlink\" title=\"挂载共享文件夹\"></a>挂载共享文件夹</h3><p>mount -t cifs //10.16.88.66/nginx /mnt/nginx  -o  user=username,password=password</p>","more":""},{"title":"Mac终端设置代理","date":"2022-07-06T05:39:00.000Z","_content":"\n### 1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\n\n```sh\nexport http_proxy=http://proxyAddress:port\n```\n\n### 2、把[代理服务器](https://so.csdn.net/so/search?q=代理服务器&spm=1001.2101.3001.7020)地址写入shell配置文件.bashrc或者.zshrc\n\n直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。\n\n```sh\nexport http_proxy=\"http://localhost:port\"\nexport https_proxy=\"http://localhost:port\"\n```\n\n<!-- more -->","source":"_posts/Mac终端设置代理.md","raw":"---\ntitle: Mac终端设置代理\ndate: 2022-07-06 13:39:00\ntags:\n---\n\n### 1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\n\n```sh\nexport http_proxy=http://proxyAddress:port\n```\n\n### 2、把[代理服务器](https://so.csdn.net/so/search?q=代理服务器&spm=1001.2101.3001.7020)地址写入shell配置文件.bashrc或者.zshrc\n\n直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。\n\n```sh\nexport http_proxy=\"http://localhost:port\"\nexport https_proxy=\"http://localhost:port\"\n```\n\n<!-- more -->","slug":"Mac终端设置代理","published":1,"updated":"2022-07-06T11:58:00.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber40004rm9k3ogy0v0d","content":"<h3 id=\"1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\"><a href=\"#1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\" class=\"headerlink\" title=\"1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\"></a>1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://proxyAddress:port</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc\"><a href=\"#2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc\" class=\"headerlink\" title=\"2、把代理服务器地址写入shell配置文件.bashrc或者.zshrc\"></a>2、把<a href=\"https://so.csdn.net/so/search?q=%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020\">代理服务器</a>地址写入shell配置文件.bashrc或者.zshrc</h3><p>直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=<span class=\"string\">&quot;http://localhost:port&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=<span class=\"string\">&quot;http://localhost:port&quot;</span></span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>","site":{"data":{}},"excerpt":"<h3 id=\"1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\"><a href=\"#1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\" class=\"headerlink\" title=\"1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。\"></a>1、这个办法的好处是简单直接，并且影响面很小（只对当前终端有效）。</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://proxyAddress:port</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc\"><a href=\"#2、把代理服务器地址写入shell配置文件-bashrc或者-zshrc\" class=\"headerlink\" title=\"2、把代理服务器地址写入shell配置文件.bashrc或者.zshrc\"></a>2、把<a href=\"https://so.csdn.net/so/search?q=%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020\">代理服务器</a>地址写入shell配置文件.bashrc或者.zshrc</h3><p>直接在.bashrc或者.zshrc文件中加入， 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=<span class=\"string\">&quot;http://localhost:port&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=<span class=\"string\">&quot;http://localhost:port&quot;</span></span><br></pre></td></tr></table></figure>","more":""},{"title":"NySQL函数","date":"2022-07-06T05:45:31.000Z","_content":"\n### **concat()函数**\n\n1、功能：将多个字符串连接成一个字符串。\n\n2、语法：concat(str1, str2,...)\n\n<!-- more -->\n\n### **concat_ws()函数**\n\n1、功能：和concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）\n\n2、语法：concat_ws(separator, str1, str2, ...)\n\n### **group_concat()**函数\n\n1、功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。\n\n2、语法：group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator '分隔符'] )","source":"_posts/MySQL函数.md","raw":"---\ntitle: NySQL函数\ndate: 2022-07-06 13:45:31\ntags:\n---\n\n### **concat()函数**\n\n1、功能：将多个字符串连接成一个字符串。\n\n2、语法：concat(str1, str2,...)\n\n<!-- more -->\n\n### **concat_ws()函数**\n\n1、功能：和concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）\n\n2、语法：concat_ws(separator, str1, str2, ...)\n\n### **group_concat()**函数\n\n1、功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。\n\n2、语法：group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator '分隔符'] )","slug":"MySQL函数","published":1,"updated":"2022-07-06T11:58:06.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber40005rm9k5jqv9my6","content":"<h3 id=\"concat-函数\"><a href=\"#concat-函数\" class=\"headerlink\" title=\"concat()函数\"></a><strong>concat()函数</strong></h3><p>1、功能：将多个字符串连接成一个字符串。</p>\n<p>2、语法：concat(str1, str2,…)</p>\n<span id=\"more\"></span>\n\n<h3 id=\"concat-ws-函数\"><a href=\"#concat-ws-函数\" class=\"headerlink\" title=\"concat_ws()函数\"></a><strong>concat_ws()函数</strong></h3><p>1、功能：和concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）</p>\n<p>2、语法：concat_ws(separator, str1, str2, …)</p>\n<h3 id=\"group-concat-函数\"><a href=\"#group-concat-函数\" class=\"headerlink\" title=\"**group_concat()**函数\"></a>**group_concat()**函数</h3><p>1、功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p>\n<p>2、语法：group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator ‘分隔符’] )</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"concat-函数\"><a href=\"#concat-函数\" class=\"headerlink\" title=\"concat()函数\"></a><strong>concat()函数</strong></h3><p>1、功能：将多个字符串连接成一个字符串。</p>\n<p>2、语法：concat(str1, str2,…)</p>","more":"<h3 id=\"concat-ws-函数\"><a href=\"#concat-ws-函数\" class=\"headerlink\" title=\"concat_ws()函数\"></a><strong>concat_ws()函数</strong></h3><p>1、功能：和concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）</p>\n<p>2、语法：concat_ws(separator, str1, str2, …)</p>\n<h3 id=\"group-concat-函数\"><a href=\"#group-concat-函数\" class=\"headerlink\" title=\"**group_concat()**函数\"></a>**group_concat()**函数</h3><p>1、功能：将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p>\n<p>2、语法：group_concat( [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator ‘分隔符’] )</p>"},{"title":"Xml转义字符","date":"2022-07-06T05:44:17.000Z","_content":"\n## 常用的转义字符\n\n```xml\n&lt; < 小于号\n&gt; > 大于号\n&amp; & 和\n&apos; ' 单引号\n&quot; \" 双引号\n```\n\n<!-- more -->\n","source":"_posts/Xml转义字符.md","raw":"---\ntitle: Xml转义字符\ndate: 2022-07-06 13:44:17\ntags:\n---\n\n## 常用的转义字符\n\n```xml\n&lt; < 小于号\n&gt; > 大于号\n&amp; & 和\n&apos; ' 单引号\n&quot; \" 双引号\n```\n\n<!-- more -->\n","slug":"Xml转义字符","published":1,"updated":"2022-07-06T11:58:15.998Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber50006rm9k2h3r75ym","content":"<h2 id=\"常用的转义字符\"><a href=\"#常用的转义字符\" class=\"headerlink\" title=\"常用的转义字符\"></a>常用的转义字符</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">&amp;lt;</span> &lt; 小于号</span><br><span class=\"line\"><span class=\"symbol\">&amp;gt;</span> &gt; 大于号</span><br><span class=\"line\"><span class=\"symbol\">&amp;amp;</span> &amp; 和</span><br><span class=\"line\"><span class=\"symbol\">&amp;apos;</span> &#x27; 单引号</span><br><span class=\"line\"><span class=\"symbol\">&amp;quot;</span> &quot; 双引号</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n","site":{"data":{}},"excerpt":"<h2 id=\"常用的转义字符\"><a href=\"#常用的转义字符\" class=\"headerlink\" title=\"常用的转义字符\"></a>常用的转义字符</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">&amp;lt;</span> &lt; 小于号</span><br><span class=\"line\"><span class=\"symbol\">&amp;gt;</span> &gt; 大于号</span><br><span class=\"line\"><span class=\"symbol\">&amp;amp;</span> &amp; 和</span><br><span class=\"line\"><span class=\"symbol\">&amp;apos;</span> &#x27; 单引号</span><br><span class=\"line\"><span class=\"symbol\">&amp;quot;</span> &quot; 双引号</span><br></pre></td></tr></table></figure>","more":""},{"title":"Vue的空格表示","date":"2022-07-06T06:11:37.000Z","_content":"\n## vue的空格表示\n\n1.不间断空格\\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;\n\n2.半角空格(英文符号)\\u0020,代码中常用的;\n\n3.全角空格(中文符号)\\u3000,中文文章中使用;\n\n<!-- more -->","source":"_posts/Vue的空格表示.md","raw":"---\ntitle: Vue的空格表示\ndate: 2022-07-06 14:11:37\ntags:\n---\n\n## vue的空格表示\n\n1.不间断空格\\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;\n\n2.半角空格(英文符号)\\u0020,代码中常用的;\n\n3.全角空格(中文符号)\\u3000,中文文章中使用;\n\n<!-- more -->","slug":"Vue的空格表示","published":1,"updated":"2022-07-06T11:58:11.880Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber50007rm9kezovceb6","content":"<h2 id=\"vue的空格表示\"><a href=\"#vue的空格表示\" class=\"headerlink\" title=\"vue的空格表示\"></a>vue的空格表示</h2><p>1.不间断空格\\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;</p>\n<p>2.半角空格(英文符号)\\u0020,代码中常用的;</p>\n<p>3.全角空格(中文符号)\\u3000,中文文章中使用;</p>\n<span id=\"more\"></span>","site":{"data":{}},"excerpt":"<h2 id=\"vue的空格表示\"><a href=\"#vue的空格表示\" class=\"headerlink\" title=\"vue的空格表示\"></a>vue的空格表示</h2><p>1.不间断空格\\u00A0,主要用在office中,让一个单词在结尾处不会换行显示,快捷键ctrl+shift+space ;</p>\n<p>2.半角空格(英文符号)\\u0020,代码中常用的;</p>\n<p>3.全角空格(中文符号)\\u3000,中文文章中使用;</p>","more":""},{"title":"双网卡实现内外网同时访问","date":"2022-07-06T05:36:46.000Z","_content":"\n\n## Windows\n    1.展示路由\n    route print\n    2.添加路由\n    route add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -p\n    route add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p\n    3.删除路由\n    route delete 网关。\n\n<!-- more -->\n## Mac\n   route -n add -net 10.16.88.66  10.16.128.1","source":"_posts/双网卡实现内外网同时访问.md","raw":"---\ntitle: 双网卡实现内外网同时访问\ndate: 2022-07-06 13:36:46\ntags:\n---\n\n\n## Windows\n    1.展示路由\n    route print\n    2.添加路由\n    route add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -p\n    route add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p\n    3.删除路由\n    route delete 网关。\n\n<!-- more -->\n## Mac\n   route -n add -net 10.16.88.66  10.16.128.1","slug":"双网卡实现内外网同时访问","published":1,"updated":"2022-07-06T11:59:41.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5amber60008rm9kfhfhggq1","content":"<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><pre><code>1.展示路由\nroute print\n2.添加路由\nroute add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -p\nroute add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p\n3.删除路由\nroute delete 网关。\n</code></pre>\n<span id=\"more\"></span>\n<h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><p>   route -n add -net 10.16.88.66  10.16.128.1</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><pre><code>1.展示路由\nroute print\n2.添加路由\nroute add 0.0.0.0 mask 0.0.0.0 192.168.110.1（想要使用的网络的网关） -p\nroute add 10.16.0.0 mask 255.255.255.0 10.16.128.1（想要使用的网络的网关） -p\n3.删除路由\nroute delete 网关。\n</code></pre>","more":"<h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><p>   route -n add -net 10.16.88.66  10.16.128.1</p>"},{"title":"Activiti6表结构说明","date":"2022-07-06T11:50:00.000Z","_content":"\n# 表结构说明\n\n<!-- more -->\n\n## 表名规则:\n\n### \tActiviti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。\n\n## 表前缀说明\n\n- ACT_GE_  (GE)   表示  general 全局通用数据及设置，各种情况都使用的数据。\n\n- ACT_HI_  (HI)   表示  history 历史数据表，包含着程执行的历史相关数据，如结束的流程实例，变量，任务，等等\n\n- ACT_ID_  (ID)   表示  identity 组织机构，用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。\n\n- ACT_RE_  (RE)   表示  repository 存储，包含的是静态信息，如，流程定义，流程的资源(图片，规则等)。\n\n- ACT_RU_  (RU)   表示  runtime 运行时，运行时的流程变量，用户任务，变量，职责(job)等运行时的数据。Activiti 只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。\n\n \n\n## Activiti表总览 \n\n### 全局数据表 (ACT_GE_)\n\n| 表名             | 解释                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| ACT_GE_BYTEARRAY | 二进制数据表，存储通用的流程定义和流程资源。                 |\n| ACT_GE_PROPERTY  | 系统相关属性，属性数据表存储整个流程引擎级别的数据，初始化表结构时，会默认插入三条记录。 |\n\n\n\n### 流程历史记录表 (ACT_HI_)\n\n| 表名                  | 解释                           |\n| --------------------- | ------------------------------ |\n| ACT_ HI_ACTINST       | 历史节点表                     |\n| ACT_ HI_ATTACHMENT    | 历史附件表                     |\n| ACT_ HI_COMMENT       | 历史意见表                     |\n| ACT_ HI_ DETAIL       | 历史详情表，提供历史变量的查询 |\n| ACT_ HI_ IDENTITYLINK | 历史流程人员表                 |\n| ACT_ HI_ PROCINST     | 历史流程实例表                 |\n| ACT_HI_TASKINST       | 历史任务实例表                 |\n| ACT_HI_VARINST        | 历史变量表                     |\n\n\n\n### 用户用户组表 (ACT_ID_) \n\n| 表名              | 解释                   |\n| ----------------- | ---------------------- |\n| ACT_ID_GROUP      | 用户组信息表           |\n| ACT_ID_INFO       | 用户扩展信息表         |\n| ACT_ID_MEMBERSHIP | 用户与用户组对应信息表 |\n| ACT_ID_USER       | 用户信息表             |\n\n\n\n\n\n### 流程定义表 (ACT_RE_)\n\n| 表名              | 解释               |\n| ----------------- | ------------------ |\n| ACT_RE_DEPLOYMENT | 部署信息表         |\n| ACT_RE_MODEL      | 流程设计模型部署表 |\n| ACT_RE_PROCDEF    | 流程定义数据表     |\n\n\n\n### 运行实例表 (ACT_RU_)\n\n| 表名                | 解释                                                 |\n| ------------------- | ---------------------------------------------------- |\n| ACT_RU_EVENT_SUBSCR | 运行时事件 throwEvent、catchEvent 时间监听信息表     |\n| ACT_RU_EXECUTION    | 运行时流程执行实例                                   |\n| ACT_RU_IDENTITYLINK | 运行时流程人员表，主要存储任务节点与参与者的相关信息 |\n| ACT_RU_JOB          | 运行时定时任务数据表                                 |\n| ACT_RU_TASK         | 运行时任务节点表                                     |\n| ACT_RU_VARIABLE     | 运行时流程变量数据表                                 |\n\n\n\n### 其它\n\n| 表名             | 解释                   |\n| ---------------- | ---------------------- |\n| ACT_EVT_LOG      | 事件日志               |\n| ACT_PROCDEF_INFO | 流程定义的动态变更信息 |\n\n \n\n## Acticiti表详情\n\n### ACT_GE_BYTEARRAY表结构\n\n \t二进制数据表，存储通用的流程定义和流程资源。(act_ge_bytearray)\n\n​\t保存流程定义图片和xml、Serializable(序列化)的变量,即保存所有二进制数据，特别注意类路径部署时候，不要把svn等隐藏文件或者其他与流程无关的文件也一起部署到该表中，会造成一些错误(可能导致流程定义无法删除)\n\n| 字段名称       | 字段描述       | 数据类型       | 主键 | 为空 | 取值说明                                            |\n| -------------- | -------------- | -------------- | ---- | ---- | --------------------------------------------------- |\n| ID_            | ID_            | nvarchar(64)   | Y    |      | 主键ID                                              |\n| REV_           | 乐观锁         | int            |      | Y    | Version(版本)                                       |\n| NAME_          | 名称           | nvarchar(255)  |      | Y    | 部署的文件名称，如：leave.bpmn.png,leave.bpmn20.xml |\n| DEPLOYMENT_ID_ | 部署ID         | nvarchar(64)   |      | Y    | 部署表ID                                            |\n| BYTES_         | 字节           | varbinary(max) |      | Y    | 部署文件                                            |\n| GENERATED_     | 是否是引擎生成 | tinyint        |      | Y    | 0为用户生成，1为activiti生成                        |\n\n \n\n### ACT_GE_PROPERTY表结构\n\n​\t属性数据表(act_ge_property)\n\n​\t属性数据表。存储整个流程引擎级别的数据。\n\n \n\n| 字段名称 | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明                              |\n| -------- | -------- | ------------- | ---- | ---- | ------------------------------------- |\n| NAME_    | 名称     | nvarchar(64)  | √    |      | schema.versionschema.historynext.dbid |\n| VALUE_   | 值       | nvarchar(300) |      | √    | 5.**create****(****5.**)              |\n| REV_     | 乐观锁   | int           |      | √    | version                               |\n\n \n\n### ACT_HI_ACTINST表结构\n\n​\t历史节点表(act_hi_actinst)\n\n​\t历史活动信息。这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容\n\n| 字段名称           | 字段描述             | 数据类型      | 主键 | 为空 | 取值说明                                |\n| ------------------ | -------------------- | ------------- | ---- | ---- | --------------------------------------- |\n| ID_                | ID_                  | nvarchar(64)  | √    |      |                                         |\n| PROC_DEF_ID_       | 流程定义ID           | nvarchar(64)  |      |      |                                         |\n| PROC_INST_ID_      | 流程实例ID           | nvarchar(64)  |      |      |                                         |\n| EXECUTION_ID_      | 执行实例ID           | nvarchar(64)  |      |      |                                         |\n| ACT_ID_            | 节点ID               | nvarchar(225) |      |      | 节点定义ID                              |\n| TASK_ID_           | 任务实例ID           | nvarchar(64)  |      | √    | 任务实例ID 其他节点类型实例ID在这里为空 |\n| CALL_PROC_INST_ID_ | 调用外部的流程实例ID | nvarchar(64)  |      | √    | 调用外部流程的流程实例ID’               |\n| ACT_NAME_          | 节点名称             | nvarchar(225) |      | √    | 节点定义名称                            |\n| ACT_TYPE_          | 节点类型             | nvarchar(225) |      |      | 如startEvent、userTask                  |\n| ASSIGNEE_          | 签收人               | nvarchar(64)  |      | √    | 节点签收人                              |\n| START_TIME_        | 开始时间             | datetime      |      |      | 2013-09-15 11:30:00                     |\n| END_TIME_          | 结束时间             | datetime      |      | √    | 2013-09-15 11:30:00                     |\n| DURATION_          | 耗时                 | numeric(19,0) |      | √    | 毫秒值                                  |\n|                    |                      |               |      |      |                                         |\n\n \n\n### ACT_HI_ATTACHMENT表结构\n\n \t历史附件表( act_hi_attachment )\n\n| 字段名称       | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明             |\n| -------------- | ---------- | -------------- | ---- | ---- | -------------------- |\n| ID_            | ID_        | nvarchar(64)   | √    |      | 主键ID               |\n| REV_           | 乐观锁     | integer        |      | √    | Version              |\n| USER_ID_       | 用户ID     | nvarchar(255)  |      | √    | 用户ID               |\n| NAME_          | 名称       | nvarchar(255)  |      | √    | 附件名称             |\n| DESCRIPTION_   | 描述       | nvarchar(4000) |      | √    | 描述                 |\n| TYPE_          | 类型       | nvarchar(255)  |      | √    | 附件类型             |\n| TASK_ID_       | 任务实例ID | nvarchar(64)   |      | √    | 节点实例ID           |\n| PROC_INST_ ID_ | 流程实例ID | nvarchar(64)   |      | √    | 流程实例ID           |\n| URL_           | URL_       | nvarchar(4000) |      | √    | 附件地址             |\n| CONTENT_ ID_   | 字节表的ID | nvarchar(64)   |      | √    | ACT_GE_BYTEARRAY的ID |\n\n \n\n### ACT_HI_COMMENT表结构\n\n 历史意见表( act_hi_comment )\n\n| 字段名称       | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明                             |\n| -------------- | ---------- | -------------- | ---- | ---- | ------------------------------------ |\n| ID_            | ID_        | nvarchar(64)   | √    |      | 主键ID                               |\n| TYPE_          | 类型       | nvarchar(255)  |      | √    | 类型：event(事件)comment(意见)       |\n| TIME_          | 时间       | datetime       |      |      | 填写时间’                            |\n| USER_ID_       | 用户ID     | nvarchar(64)   |      | √    | 填写人                               |\n| TASK_ID_       | 节点任务ID | nvarchar(64)   |      | √    | 节点实例ID                           |\n| PROC_INST_ ID_ | 流程实例ID | nvarchar(255)  |      | √    | 流程实例ID                           |\n| ACTION_        | 行为类型   | nvarchar(64)   |      | √    | 见备注1                              |\n| MESSAGE_       | 基本内容   | nvarchar(4000) |      | √    | 用于存放流程产生的信息，比如审批意见 |\n| FULL_MSG_      | 全部内容   | varbinary(max) |      | √    | 附件地址                             |\n\n \n\n### ACT_HI_DETAIL表结构\n\n \t历史详情表( act_hi_detail )\n\n​\t流程中产生的变量详细，包括控制流程流转的变量，业务表单中填写的流程需要用到的变量等。\n\n| 字段名称      | 字段描述   | 数据类型         | 主键 | 为空 | 取值说明                                            |\n| ------------- | ---------- | ---------------- | ---- | ---- | --------------------------------------------------- |\n| ID_           | ID_        | nvarchar(64)     | √    |      | 主键                                                |\n| TYPE_         | 类型       | nvarchar(255)    |      |      | 见备注2                                             |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)     |      | √    | 流程实例ID                                          |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(64)     |      | √    | 执行实例ID                                          |\n| TASK_ID_      | 任务实例ID | nvarchar(64)     |      | √    | 任务实例ID                                          |\n| ACT_INST_ID_  | 节点实例ID | nvarchar(64)     |      | √    | ACT_HI_ACTINST表的ID                                |\n| NAME_         | 名称       | nvarchar(255)    |      |      | 名称                                                |\n| VAR_TYPE_     | 参数类型   | nvarchar(255)    |      | √    | 见备注3                                             |\n| REV_          | 乐观锁     | int              |      | √    | Version                                             |\n| TIME_         | 时间戳     | datetime         |      |      | 创建时间                                            |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar         |      | √    | ACT_GE_BYTEARRAY表的ID                              |\n| DOUBLE_       | DOUBLE_    | double precision |      | √    | 存储变量类型为Double                                |\n| LONG_         | LONG_      | numeric          |      | √    | 存储变量类型为long                                  |\n| TEXT_         | TEXT_      | nvarchar         |      | √    | 存储变量值类型为String                              |\n| TEXT2_        | TEXT2_     | nvarchar         |      | √    | 此处存储的是JPA持久化对象时，才会有值。此值为对象ID |\n\n \n\n ### ACT_HI_IDENTITYLINK表结构\n\n​\t历史流程人员表( act_ru_identitylink )\n\n​\t任务参与者数据表。主要存储历史节点参与者的信息 \n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------- | ---------- | ------------- | ---- | ---- | ---------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_        |\n| GROUP_ID_     | 组ID       | nvarchar(255) |      | √    | 组ID       |\n| TYPE_         | 类型       | nvarchar(255) |      | √    | 备注4      |\n| USER_ID_      | 用户ID     | nvarchar(255) |      | √    | 用户ID     |\n| TASK_ID_      | 节点实例ID | nvarchar(64)  |      | √    | 节点实例ID |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID |\n\n \n\n### ACT_HI_PROCINST表结构\n\n \t历史流程实例表(act_hi_procinst)\n\n| 字段名称                   | 字段描述     | 数据类型       | 主键 | 为空 | 取值说明               |\n| -------------------------- | ------------ | -------------- | ---- | ---- | ---------------------- |\n| ID_                        | ID_          | nvarchar(64)   | √    |      | 主键ID                 |\n| PROC_INST_ID_              | 流程实例ID   | nvarchar(64)   |      |      | 流程实例ID             |\n| BUSINESS_KEY_              | 业务主键     | nvarchar(255)  |      | √    | 业务主键，业务表单的ID |\n| PROC_DEF_ID_               | 流程定义ID   | nvarchar(64)   |      |      | 流程定义ID             |\n| START_TIME_                | 开始时间     | datetime       |      |      | 开始时间               |\n| END_TIME_                  | 结束时间     | datetime       |      | √    | 结束时间               |\n| DURATION_                  | 耗时         | Numeric(19)    |      | √    | 耗时                   |\n| START_USER_ID_             | 起草人       | nvarchar(255)  |      | √    | 起草人                 |\n| START_ACT_ID_              | 开始节点ID   | nvarchar(255)  |      | √    | 起草环节ID             |\n| END_ACT_ID_                | 结束节点ID   | nvarchar(255)  |      | √    | 结束环节ID             |\n| SUPER_PROCESS_INSTANCE_ID_ | 父流程实例ID | nvarchar(64)   |      | √    | 父流程实例ID           |\n| DELETE_REASON_             | 删除原因     | nvarchar(4000) |      | √    | 删除原因               |\n\n \n\n### ACT_HI_TASKINST表结构\n\n \t历史任务实例表( act_hi_taskinst )\n\n| 字段名称        | 字段描述                | 数据类型       | 主键 | 为空 | 取值说明                             |\n| --------------- | ----------------------- | -------------- | ---- | ---- | ------------------------------------ |\n| ID_             | ID_                     | nvarchar(64)   | √    |      | 主键ID                               |\n| PROC_DEF_ID_    | 流程定义ID              | nvarchar(64)   |      | √    | 流程定义ID                           |\n| TASK_DEF_KEY_   | 节点定义ID              | nvarchar(255)  |      | √    | 节点定义ID                           |\n| PROC_INST_ID_   | 流程实例ID              | nvarchar(64)   |      | √    | 流程实例ID                           |\n| EXECUTION_ID_   | 执行实例ID              | nvarchar(64)   |      | √    | 执行实例ID                           |\n| NAME_           | 名称                    | varchar(255)   |      | √    | 名称                                 |\n| PARENT_TASK_ID_ | 父节点实例ID            | nvarchar(64)   |      | √    | 父节点实例ID                         |\n| DESCRIPTION_    | 描述                    | nvarchar(400)  |      | √    | 描述                                 |\n| OWNER_          | 实际签收人 任务的拥有者 | nvarchar(255)  |      | √    | 签收人(默认为空，只有在委托时才有值) |\n| ASSIGNEE_       | 签收人或被委托          | nvarchar(255)  |      | √    | 签收人或被委托                       |\n| START_TIME_     | 开始时间                | datetime       |      |      | 开始时间                             |\n| CLAIM_TIME_     | 提醒时间                | datetime       |      | √    | 提醒时间                             |\n| END_TIME_       | 结束时间                | datetime       |      | √    | 结束时间                             |\n| DURATION_       | 耗时                    | numeric(19)    |      | √    | 耗时                                 |\n| DELETE_REASON_  | 删除原因                | nvarchar(4000) |      | √    | 删除原因(completed,deleted)          |\n| PRIORITY_       | 优先级别                | int            |      | √    | 优先级别                             |\n| DUE_DATE_       | 过期时间                | datetime       |      | √    | 过期时间，表明任务应在多长时间内完成 |\n| FORM_KEY_       | 节点定义的formkey       | nvarchar(255)  |      | √    | desinger节点定义的form_key属性       |\n\n \n\n### ACT_HI_VARINST表结构 \n\n 历史变量表( act_hi_varinst )\n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明                                            |\n| ------------- | ---------- | ------------- | ---- | ---- | --------------------------------------------------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_                                                 |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID                                          |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(255) |      | √    | 执行实例ID                                          |\n| TASK_ID_      | 任务实例ID | nvarchar(64)  |      | √    | 任务实例ID                                          |\n| NAME_         | 名称       | nvarchar(64)  |      |      | 参数名称(英文)                                      |\n| VAR_TYPE_     | 参数类型   | varchar(255)  |      | √    | 备注5                                               |\n| REV_          | 乐观锁     | nvarchar(64)  |      | √    | 乐观锁 Version                                      |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar(400) |      | √    | ACT_GE_BYTEARRAY表的主键                            |\n| DOUBLE_       | DOUBLE_    | nvarchar(255) |      | √    | 存储DoubleType类型的数据                            |\n| LONG_         | LONG_      | nvarchar(255) |      | √    | 存储LongType类型的数据                              |\n| TEXT_         | TEXT_      | datetime      |      | √    | 备注6                                               |\n| TEXT2_        | TEXT2_     | datetime      |      |      | 此处存储的是JPA持久化对象时，才会有值。此值为对象ID |\n\n \n\n### ACT_ID_GROUP表结构\n\n 用户组信息表( act_id_group )\n\n| 字段名称 | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| -------- | -------- | ------------- | ---- | ---- | ------------- |\n| ID_      | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_     | 乐观锁   | int           |      | √    | 乐观锁Version |\n| NAME_    | 名称     | nvarchar(255) |      | √    | 组名称        |\n| TYPE_    | 类型     | nvarchar(255) |      | √    | 类型          |\n\n \n\n### ACT_ID_INFO表结构\n\n 用户扩展信息表( act_id_info )\n\n| 字段名称   | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| ---------- | -------- | ------------- | ---- | ---- | ------------- |\n| ID_        | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_       | 乐观锁   | int           |      | √    | 乐观锁Version |\n| USER_ID_   | 用户ID   | nvarchar(64)  |      | √    |               |\n| TYPE_      | 类型     | nvarchar(64)  |      | √    |               |\n| KEY_       |          | nvarchar(255) |      | √    |               |\n| VALUE_     |          | nvarchar(255) |      | √    |               |\n| PASSWORD_  |          | Image         |      | √    |               |\n| PARENT_ID_ |          | nvarchar(255) |      | √    |               |\n\n \n\n### ACT_ID_MEMBERSHIP表结构\n\n 用户与分组对应信息表( act_id_membership )\n\n用来保存用户的分组信息。\n\n| 字段名称 | 字段描述 | 数据类型     | 主键 | 为空 | 取值说明 |\n| -------- | -------- | ------------ | ---- | ---- | -------- |\n| USER_ID  | 用户ID   | nvarchar(64) | √    |      |          |\n| GROUP_ID | 用户组ID | nvarchar(64) | √    |      |          |\n\n \n\n### ACT_ID_USER表结构\n\n 用户信息表( act_id_user )\n\n| 字段名称     | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| ------------ | -------- | ------------- | ---- | ---- | ------------- |\n| ID_          | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_         | 乐观锁   | int           |      | √    | 乐观锁Version |\n| FIRST_       | 姓       | nvarchar(255) |      | √    |               |\n| LAST_        | 名       | nvarchar(255) |      | √    |               |\n| EMAIL_       | EMAIL_   | nvarchar(255) |      | √    |               |\n| PWD_         | 密码     | nvarchar(255) |      | √    |               |\n| PICTURE_ ID_ | 图片ID   | nvarchar(64)  |      | √    |               |\n\n \n\n### ACT_RE_DEPLOYMENT表结构\n\n部署信息表( act_re_deployment )\n\n部署流程定义时需要被持久化保存下来的信息。\n\n| 字段名称     | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------ | -------- | ------------- | ---- | ---- | ---------- |\n| ID_          | ID_      | nvarchar(64)  | √    |      | 主键ID     |\n| CATEGORY_    | 分类     | nvarchar(255) |      | √    | 类别       |\n| DEPLOY_TIME_ | 部署时间 | datetime      |      | √    | 部署时间   |\n| NAME_        | 部署名称 | nvarchar(255) |      | √    | 部署文件名 |\n\n \n\n### ACT_RE_MODEL表结构\n\n流程设计模型部署表( act_re_model )\n\n流程设计器设计流程后，保存数据到该表。\n\n| 字段名称                      | 字段描述     | 数据类型      | 主键 | 为空 | 取值说明                     |\n| ----------------------------- | ------------ | ------------- | ---- | ---- | ---------------------------- |\n| ID_                           | ID_          | nvarchar(64)  | √    |      | ID_                          |\n| REV_                          | 乐观锁       | int           |      | √    | 乐观锁                       |\n| NAME_                         | 名称         | nvarchar(255) |      | √    | 名称                         |\n| KEY_                          | KEY_         | nvarchar(255) |      | √    | key                          |\n| CATEGORY_                     | 分类         | nvarchar(255) |      | √    | 分类                         |\n| CREATE_TIME_                  | 创建时间     | datetime      |      | √    | 创建时间                     |\n| LAST_UPDATE_TIME_             | 最新修改时间 | datetime      |      | √    | 最新修改时间                 |\n| VERSION_                      | 版本         | int           |      | √    | 版本                         |\n| META_INFO_                    | META_INFO_   | nvarchar(255) |      | √    | 以json格式保存流程定义的信息 |\n| DEPLOYMENT_ID_                | 部署ID       | nvarchar(255) |      | √    | 部署ID                       |\n| EDITOR_SOURCE_VALUE_ID_       |              | datetime      |      | √    |                              |\n| EDITOR_SOURCE_EXTRA_VALUE_ID_ |              | datetime      |      | √    |                              |\n\n \n\n### ACT_RE_PROCDEF表结构\n\n流程定义数据表( act_re_procdef )\n\n业务流程定义数据表。此表和 ACT_RE_DEPLOYMENT 是多对一的关系，即，一个部署的bar包里可能包含多个流程定义文件，每个流程定义文件都会有一条记录在 ACT_REPROCDEF 表内，每个流程定义的数据，都会对于 ACT_GE_BYTEARRAY 表内的一个资源文件和 PNG 图片文件。和 ACT_GE_BYTEARRAY 的关联是通过程序用ACT_GE_BYTEARRAY.NAME 与 ACT_RE_PROCDEF.NAME 完成的，在数据库表结构中没有体现。 \n\n| 字段名称            | 字段描述                | 数据类型       | 主键 | 为空 | 取值说明                         |\n| ------------------- | ----------------------- | -------------- | ---- | ---- | -------------------------------- |\n| ID_                 | ID_                     | nvarchar(64)   | √    |      | ID_                              |\n| REV_                | 乐观锁                  | int            |      | √    | 乐观锁                           |\n| CATEGORY_           | 分类                    | nvarchar(255)  |      | √    | 流程定义的Namespace就是类别      |\n| NAME_               | 名称                    | nvarchar(255)  |      | √    | 名称                             |\n| KEY_                | 定义的KEY               | nvarchar(255)  |      |      | 流程定义ID                       |\n| VERSION_            | 版本                    | int            |      |      | 版本                             |\n| DEPLOYMENT_ID_      | 部署表ID                | nvarchar(64)   |      | √    | 部署表ID                         |\n| RESOURCE_NAME_      | bpmn文件名称            | nvarchar(4000) |      | √    | 流程bpmn文件名称                 |\n| DGRM_RESOURCE_NAME_ | png图片名称             | nvarchar(4000) |      | √    | 流程图片名称                     |\n| DESCRIPTION_        | 描述                    | nvarchar(4000) |      | √    | 描述                             |\n| HAS_START_FORM_KEY_ | 是否存在开始节点formKey | tinyint        |      | √    | start节点是否存在formKey 0否 1是 |\n| SUSPENSION_STATE_   | 是否挂起                | tinyint        |      | √    | 1 激活 2挂起                     |\n\n \n\n### ACT_RU_EVENT_SUBSCR表结构\n\n \n\n \n\n| 字段名称       | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明                               |\n| -------------- | ---------- | ------------- | ---- | ---- | -------------------------------------- |\n| ID_            | 事件ID     | nvarchar(64)  | √    |      | 事件ID                                 |\n| REV_           | 版本       | int           |      | √    | 乐观锁Version                          |\n| EVENT_TYPE_    | 事件类型   | nvarchar(255) |      |      | 事件类型                               |\n| EVENT_NAME_    | 事件名称   | nvarchar(255) |      | √    | 事件名称                               |\n| EXECUTION_ID_  | 执行实例ID | nvarchar(64)  |      | √    | 执行实例ID                             |\n| PROC_INST_ID_  | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID                             |\n| ACTIVITY_ID_   | 活动实例ID | nvarchar(64)  |      | √    | 活动实例ID                             |\n| CONFIGURATION_ | 配置       | nvarchar(255) |      | √    | 配置                                   |\n| CREATED_       | 是否创建   | datetime      |      |      | 默认值 当前系统时间戳CURRENT_TIMESTAMP |\n\n\n\n### ACT_RU_EXECUTION表结构\n\n运行时流程执行实例表( act_ru_execution )\n\n| 字段名称          | 字段描述        | 数据类型      | 主键 | 为空 | 取值说明                       |\n| ----------------- | --------------- | ------------- | ---- | ---- | ------------------------------ |\n| ID_               | ID_             | nvarchar(64)  | √    |      | ID_                            |\n| REV_              | 乐观锁          | int           |      | √    | 乐观锁                         |\n| PROC_INST_ID_     | 流程实例ID      | nvarchar(64)  |      |      | 流程实例ID                     |\n| BUSINESS_KEY_     | 业务主键ID      | nvarchar(255) |      | √    | 业务主键ID                     |\n| PARENT_ID_        | 父节点实例ID    | nvarchar(64)  |      | √    | 父节点实例ID                   |\n| PROC_DEF_ID_      | 流程定义ID      | nvarchar(64)  |      | √    | 流程定义ID                     |\n| SUPER_EXEC_       | SUPER_EXEC_     | nvarchar(64)  |      | √    | SUPER_EXEC_                    |\n| ACT_ID_           | 节点实例ID      | nvarchar(255) |      | √    | 节点实例ID即ACT_HI_ACTINST中ID |\n| IS_ACTIVE_        | 是否存活        | tinyint       |      | √    | 是否存活                       |\n| IS_CONCURRENT_    | 是否并行        | tinyint       |      | √    | 是否为并行(true/false)         |\n| IS_SCOPE_         | IS_SCOPE_       | tinyint       |      | √    | IS_SCOPE_                      |\n| IS_EVENT_SCOPE_   | IS_EVENT_SCOPE_ | tinyint       |      | √    | IS_EVENT_SCOPE_                |\n| SUSPENSION_STATE_ | 是否挂起        | tinyint       |      | √    | 挂起状态 1激活 2挂起           |\n| CACHED_ENT_STATE_ |                 | int           |      | √    |                                |\n\n \n\n\n\n### ACT_RU_IDENTITYLINK表结构\n\n运行时流程人员表( act_ru_identitylink )\n\n任务参与者数据表。主要存储当前节点参与者的信息。\n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------- | ---------- | ------------- | ---- | ---- | ---------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_        |\n| REV_          | 乐观锁     | int           |      | √    | 乐观锁     |\n| GROUP_ID_     | 组ID       | nvarchar(64)  |      | √    | 组ID       |\n| TYPE_         | 类型       | nvarchar(255) |      | √    | 备注7      |\n| USER_ID_      | 用户ID     | nvarchar(64)  |      | √    | 用户ID     |\n| TASK_ID_      | 节点实例ID | nvarchar(64)  |      | √    | 节点实例ID |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID |\n| PROC_DEF_ID_  | 流程定义ID | nvarchar(255) |      | √    | 流程定义ID |\n\n \n\n### ACT_RU_JOB表结构\n\n运行时定时任务数据表( act_ru_job )\n\n| 字段名称             | 字段描述     | 数据类型       | 主键 | 为空 | 取值说明     |\n| -------------------- | ------------ | -------------- | ---- | ---- | ------------ |\n| ID_                  | 标识         | nvarchar(64)   | √    |      | 标识         |\n| REV_                 | 版本         | int            |      | √    | 版本         |\n| TYPE_                | 类型         | nvarchar(255)  |      |      | 类型         |\n| LOCK_EXP_TIME_       | 锁定释放时间 | datetime       |      | √    | 锁定释放时间 |\n| LOCK_OWNER_          | 挂起者       | nvarchar(255)  |      | √    | 挂起者       |\n| EXCLUSIVE_           |              | bit            |      | √    |              |\n| EXECUTION_ID_        | 执行实例ID   | nvarchar(64)   |      | √    | 执行实例ID   |\n| PROCESS_INSTANCE_ID_ | 流程实例ID   | nvarchar(64)   |      | √    | 流程实例ID   |\n| PROC_DEF_ID_         | 流程定义ID   | nvarchar(64)   |      | √    | 流程定义ID   |\n| RETRIES_             |              | int            |      | √    |              |\n| EXCEPTION_STACK_ID_  | 异常信息ID   | nvarchar(64)   |      | √    | 异常信息ID   |\n| EXCEPTION_MSG_       | 异常信息     | nvarchar(4000) |      | √    | 异常信息     |\n| DUEDATE_             | 到期时间     | datetime       |      | √    | 到期时间     |\n| REPEAT_              | 重复         | nvarchar(255)  |      | √    | 重复         |\n| HANDLER_TYPE_        | 处理类型     | nvarchar(255)  |      | √    | 处理类型     |\n| HANDLER_CFG_         |              | nvarchar(4000) |      | √    | 标识         |\n\n \n\n### ACT_RU_TASK表结构\n\n运行时任务节点表( act_ru_task )\n\n| 字段名称          | 字段描述       | 数据类型       | 主键 | 为空 | 取值说明                                   |\n| ----------------- | -------------- | -------------- | ---- | ---- | ------------------------------------------ |\n| ID_               | ID_            | nvarchar(64)   | √    |      | ID_                                        |\n| REV_              | 乐观锁         | int            |      | √    | 乐观锁                                     |\n| EXECUTION_ID_     | 执行实例ID     | nvarchar(64)   |      | √    | 执行实例ID                                 |\n| PROC_INST_ID_     | 流程实例ID     | nvarchar(64)   |      | √    | 流程实例ID                                 |\n| PROC_DEF_ID_      | 流程定义ID     | nvarchar(64)   |      | √    | 流程定义ID                                 |\n| NAME_             | 节点定义名称   | nvarchar(255)  |      | √    | 节点定义名称                               |\n| PARENT_TASK_ID_   | 父节点实例ID   | nvarchar(64)   |      | √    | 父节点实例ID                               |\n| DESCRIPTION_      | 节点定义描述   | nvarchar(4000) |      | √    | 节点定义描述                               |\n| TASK_DEF_KEY_     | 节点定义的KEY  | nvarchar(255)  |      | √    | 任务定义的ID                               |\n| OWNER_            | 实际签收人     | nvarchar(255)  |      | √    | 拥有者(一般情况下为空，只有在委托时才有值) |\n| ASSIGNEE_         | 签收人或委托人 | nvarchar(255)  |      | √    | 签收人或委托人                             |\n| DELEGATION_       | 委托类型       | nvarchar(64)   |      | √    | 备注8                                      |\n| PRIORITY_         | 优先级别       | int            |      | √    | 优先级别，默认为：50                       |\n| CREATE_TIME_      | 创建时间       | datetime       |      | √    | 创建时间                                   |\n| DUE_DATE_         | 过期时间       | datetime       |      | √    | 耗时                                       |\n| SUSPENSION_STATE_ | 是否挂起       | int            |      | √    | 1代表激活 2代表挂起                        |\n\n\n\n### ACT_RU_VARIABLE表结构\n\n运行时流程变量数据表( act_ru_variable ) \n\n| 字段名称      | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明                                                     |\n| ------------- | ---------- | -------------- | ---- | ---- | ------------------------------------------------------------ |\n| ID_           | ID_        | nvarchar(64)   | √    |      | 主键标识                                                     |\n| REV_          | 乐观锁     | int            |      | √    | 乐观锁                                                       |\n| TYPE_         | 类型       | nvarchar(255)  |      |      | 备注9                                                        |\n| NAME_         | 名称       | nvarchar(255)  |      |      | 变量名称                                                     |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(64)   |      | √    | 执行的ID                                                     |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)   |      | √    | 流程实例ID                                                   |\n| TASK_ID_      | 节点实例ID | nvarchar(64)   |      | √    | 节点实例ID(Local)                                            |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar(64)   |      | √    | 字节表的ID(ACT_GE_BYTEARRAY)                                 |\n| DOUBLE_       | DOUBLE_    | float          |      | √    | 存储变量类型为Double                                         |\n| LONG_         | LONG_      | numeric(19)    |      | √    | 存储变量类型为long                                           |\n| TEXT_         | TEXT_      | nvarchar(4000) |      | √    | ‘存储变量值类型为String 如此处存储持久化对象时，值jpa对象的class |\n| TEXT2_        | TEXT2_     | nvarchar(4000) |      | √    | 此处存储的是JPA持久化对象时，  才会有值。此值为对象ID        |\n\n \n\n### ACT_RU_EXECUTION表结构\n\n运行时流程执行实例表( act_ru_execution )\t \n\n| 字段名称          | 字段描述        | 数据类型      | 主键 | 为空 | 取值说明                       |\n| ----------------- | --------------- | ------------- | ---- | ---- | ------------------------------ |\n| ID_               | ID_             | nvarchar(64)  | √    |      | ID_                            |\n| REV_              | 乐观锁          | int           |      | √    | 乐观锁                         |\n| PROC_INST_ID_     | 流程实例ID      | nvarchar(64)  |      |      | 流程实例ID                     |\n| BUSINESS_KEY_     | 业务主键ID      | nvarchar(255) |      | √    | 业务主键ID                     |\n| PARENT_ID_        | 父节点实例ID    | nvarchar(64)  |      | √    | 父节点实例ID                   |\n| PROC_DEF_ID_      | 流程定义ID      | nvarchar(64)  |      | √    | 流程定义ID                     |\n| SUPER_EXEC_       | SUPER_EXEC_     | nvarchar(64)  |      | √    | SUPER_EXEC_                    |\n| ACT_ID_           | 节点实例ID      | nvarchar(255) |      | √    | 节点实例ID即ACT_HI_ACTINST中ID |\n| IS_ACTIVE_        | 是否存活        | tinyint       |      | √    | 是否存活                       |\n| IS_CONCURRENT_    | 是否并行        | tinyint       |      | √    | 是否为并行(true/false)         |\n| IS_SCOPE_         | IS_SCOPE_       | tinyint       |      | √    | IS_SCOPE_                      |\n| IS_EVENT_SCOPE_   | IS_EVENT_SCOPE_ | tinyint       |      | √    | IS_EVENT_SCOPE_                |\n| SUSPENSION_STATE_ | 是否挂起        | tinyint       |      | √    | 挂起状态 1激活 2挂起           |\n| CACHED_ENT_STATE_ |                 | int           |      | √    |                                |\n\n \n\n## 操作activiti的各个环节涉及到的关键表\n\n\\# 部署流程定义涉及到的表\n\n\\# 流程部署表\n\nSELECT * FROM `act_re_deployment`\n\n\\# 流程定义表\n\nSELECT * FROM `act_re_procdef`\n\n\\# 资源文件表\n\nSELECT * FROM `act_ge_bytearray`\n\n\\# 系统配置表\n\nSELECT * FROM `act_ge_property`\n\n \n\n\\################################\n\n\\# 启动流程实例涉及到的表\n\n\\# 流程实例运行时 执行对象表\n\nSELECT * FROM `act_ru_execution`\n\n\\# 流程实例运行时 身份联系表\n\nSELECT * FROM `act_ru_identitylink`\n\n\\# 流程实例运行时 用户任务表\n\nSELECT * FROM `act_ru_task`\n\n\\# 活动节点历史表\n\nSELECT * FROM `act_hi_actinst`\n\n\\# 身份联系表 历史\n\nSELECT * FROM `act_hi_identitylink`\n\n\\# 流程实例表 历史\n\nSELECT * FROM `act_hi_procinst`\n\n\\# 历史任务表\n\nSELECT * FROM `act_hi_taskinst`\n\n\\# 结束流程实例涉及到的表\n\n\\# 运行时 表数据全部清空\n\n\\# 历史表 表数据修改 或者增加了数据\n\n2. **流程定****义与图数据库保存结构**\n\n会更新ACT_RE_MODEL和ACT_GE_BYTEARRAY表，\n\nACT_GE_BYTEARRAY表保存了PNG图片和xml文件信息(其实是json格式的字符串)，并关联到ACT_RE_MODEL表。\n\nACT_GE_BYTEARRAY表中NAME_列值source-extra行中存储的是：PNG图片\n\nACT_GE_BYTEARRAY表中NAME_列值source行中存储的是：xml文件信息\n\n \n\n流程设计器设计流程后，保存数据到ACT_RE_MODEL 表。\n\nEDITOR_SOURCE_VALUE_ID(流程文件放在ACT_GE_BYTEARRAY中的ID)；\n\nEDITOR_SOURCE_EXTRA_VALUE_ID(流程文件图像放在ACT_GE_BYTEARRAY中的ID)。 \n\n ","source":"_posts/Activiti6表结构说明.md","raw":"---\ntitle: Activiti6表结构说明\ndate: 2022-07-06 19:50:00\ntags:\n---\n\n# 表结构说明\n\n<!-- more -->\n\n## 表名规则:\n\n### \tActiviti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。\n\n## 表前缀说明\n\n- ACT_GE_  (GE)   表示  general 全局通用数据及设置，各种情况都使用的数据。\n\n- ACT_HI_  (HI)   表示  history 历史数据表，包含着程执行的历史相关数据，如结束的流程实例，变量，任务，等等\n\n- ACT_ID_  (ID)   表示  identity 组织机构，用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。\n\n- ACT_RE_  (RE)   表示  repository 存储，包含的是静态信息，如，流程定义，流程的资源(图片，规则等)。\n\n- ACT_RU_  (RU)   表示  runtime 运行时，运行时的流程变量，用户任务，变量，职责(job)等运行时的数据。Activiti 只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。\n\n \n\n## Activiti表总览 \n\n### 全局数据表 (ACT_GE_)\n\n| 表名             | 解释                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| ACT_GE_BYTEARRAY | 二进制数据表，存储通用的流程定义和流程资源。                 |\n| ACT_GE_PROPERTY  | 系统相关属性，属性数据表存储整个流程引擎级别的数据，初始化表结构时，会默认插入三条记录。 |\n\n\n\n### 流程历史记录表 (ACT_HI_)\n\n| 表名                  | 解释                           |\n| --------------------- | ------------------------------ |\n| ACT_ HI_ACTINST       | 历史节点表                     |\n| ACT_ HI_ATTACHMENT    | 历史附件表                     |\n| ACT_ HI_COMMENT       | 历史意见表                     |\n| ACT_ HI_ DETAIL       | 历史详情表，提供历史变量的查询 |\n| ACT_ HI_ IDENTITYLINK | 历史流程人员表                 |\n| ACT_ HI_ PROCINST     | 历史流程实例表                 |\n| ACT_HI_TASKINST       | 历史任务实例表                 |\n| ACT_HI_VARINST        | 历史变量表                     |\n\n\n\n### 用户用户组表 (ACT_ID_) \n\n| 表名              | 解释                   |\n| ----------------- | ---------------------- |\n| ACT_ID_GROUP      | 用户组信息表           |\n| ACT_ID_INFO       | 用户扩展信息表         |\n| ACT_ID_MEMBERSHIP | 用户与用户组对应信息表 |\n| ACT_ID_USER       | 用户信息表             |\n\n\n\n\n\n### 流程定义表 (ACT_RE_)\n\n| 表名              | 解释               |\n| ----------------- | ------------------ |\n| ACT_RE_DEPLOYMENT | 部署信息表         |\n| ACT_RE_MODEL      | 流程设计模型部署表 |\n| ACT_RE_PROCDEF    | 流程定义数据表     |\n\n\n\n### 运行实例表 (ACT_RU_)\n\n| 表名                | 解释                                                 |\n| ------------------- | ---------------------------------------------------- |\n| ACT_RU_EVENT_SUBSCR | 运行时事件 throwEvent、catchEvent 时间监听信息表     |\n| ACT_RU_EXECUTION    | 运行时流程执行实例                                   |\n| ACT_RU_IDENTITYLINK | 运行时流程人员表，主要存储任务节点与参与者的相关信息 |\n| ACT_RU_JOB          | 运行时定时任务数据表                                 |\n| ACT_RU_TASK         | 运行时任务节点表                                     |\n| ACT_RU_VARIABLE     | 运行时流程变量数据表                                 |\n\n\n\n### 其它\n\n| 表名             | 解释                   |\n| ---------------- | ---------------------- |\n| ACT_EVT_LOG      | 事件日志               |\n| ACT_PROCDEF_INFO | 流程定义的动态变更信息 |\n\n \n\n## Acticiti表详情\n\n### ACT_GE_BYTEARRAY表结构\n\n \t二进制数据表，存储通用的流程定义和流程资源。(act_ge_bytearray)\n\n​\t保存流程定义图片和xml、Serializable(序列化)的变量,即保存所有二进制数据，特别注意类路径部署时候，不要把svn等隐藏文件或者其他与流程无关的文件也一起部署到该表中，会造成一些错误(可能导致流程定义无法删除)\n\n| 字段名称       | 字段描述       | 数据类型       | 主键 | 为空 | 取值说明                                            |\n| -------------- | -------------- | -------------- | ---- | ---- | --------------------------------------------------- |\n| ID_            | ID_            | nvarchar(64)   | Y    |      | 主键ID                                              |\n| REV_           | 乐观锁         | int            |      | Y    | Version(版本)                                       |\n| NAME_          | 名称           | nvarchar(255)  |      | Y    | 部署的文件名称，如：leave.bpmn.png,leave.bpmn20.xml |\n| DEPLOYMENT_ID_ | 部署ID         | nvarchar(64)   |      | Y    | 部署表ID                                            |\n| BYTES_         | 字节           | varbinary(max) |      | Y    | 部署文件                                            |\n| GENERATED_     | 是否是引擎生成 | tinyint        |      | Y    | 0为用户生成，1为activiti生成                        |\n\n \n\n### ACT_GE_PROPERTY表结构\n\n​\t属性数据表(act_ge_property)\n\n​\t属性数据表。存储整个流程引擎级别的数据。\n\n \n\n| 字段名称 | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明                              |\n| -------- | -------- | ------------- | ---- | ---- | ------------------------------------- |\n| NAME_    | 名称     | nvarchar(64)  | √    |      | schema.versionschema.historynext.dbid |\n| VALUE_   | 值       | nvarchar(300) |      | √    | 5.**create****(****5.**)              |\n| REV_     | 乐观锁   | int           |      | √    | version                               |\n\n \n\n### ACT_HI_ACTINST表结构\n\n​\t历史节点表(act_hi_actinst)\n\n​\t历史活动信息。这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容\n\n| 字段名称           | 字段描述             | 数据类型      | 主键 | 为空 | 取值说明                                |\n| ------------------ | -------------------- | ------------- | ---- | ---- | --------------------------------------- |\n| ID_                | ID_                  | nvarchar(64)  | √    |      |                                         |\n| PROC_DEF_ID_       | 流程定义ID           | nvarchar(64)  |      |      |                                         |\n| PROC_INST_ID_      | 流程实例ID           | nvarchar(64)  |      |      |                                         |\n| EXECUTION_ID_      | 执行实例ID           | nvarchar(64)  |      |      |                                         |\n| ACT_ID_            | 节点ID               | nvarchar(225) |      |      | 节点定义ID                              |\n| TASK_ID_           | 任务实例ID           | nvarchar(64)  |      | √    | 任务实例ID 其他节点类型实例ID在这里为空 |\n| CALL_PROC_INST_ID_ | 调用外部的流程实例ID | nvarchar(64)  |      | √    | 调用外部流程的流程实例ID’               |\n| ACT_NAME_          | 节点名称             | nvarchar(225) |      | √    | 节点定义名称                            |\n| ACT_TYPE_          | 节点类型             | nvarchar(225) |      |      | 如startEvent、userTask                  |\n| ASSIGNEE_          | 签收人               | nvarchar(64)  |      | √    | 节点签收人                              |\n| START_TIME_        | 开始时间             | datetime      |      |      | 2013-09-15 11:30:00                     |\n| END_TIME_          | 结束时间             | datetime      |      | √    | 2013-09-15 11:30:00                     |\n| DURATION_          | 耗时                 | numeric(19,0) |      | √    | 毫秒值                                  |\n|                    |                      |               |      |      |                                         |\n\n \n\n### ACT_HI_ATTACHMENT表结构\n\n \t历史附件表( act_hi_attachment )\n\n| 字段名称       | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明             |\n| -------------- | ---------- | -------------- | ---- | ---- | -------------------- |\n| ID_            | ID_        | nvarchar(64)   | √    |      | 主键ID               |\n| REV_           | 乐观锁     | integer        |      | √    | Version              |\n| USER_ID_       | 用户ID     | nvarchar(255)  |      | √    | 用户ID               |\n| NAME_          | 名称       | nvarchar(255)  |      | √    | 附件名称             |\n| DESCRIPTION_   | 描述       | nvarchar(4000) |      | √    | 描述                 |\n| TYPE_          | 类型       | nvarchar(255)  |      | √    | 附件类型             |\n| TASK_ID_       | 任务实例ID | nvarchar(64)   |      | √    | 节点实例ID           |\n| PROC_INST_ ID_ | 流程实例ID | nvarchar(64)   |      | √    | 流程实例ID           |\n| URL_           | URL_       | nvarchar(4000) |      | √    | 附件地址             |\n| CONTENT_ ID_   | 字节表的ID | nvarchar(64)   |      | √    | ACT_GE_BYTEARRAY的ID |\n\n \n\n### ACT_HI_COMMENT表结构\n\n 历史意见表( act_hi_comment )\n\n| 字段名称       | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明                             |\n| -------------- | ---------- | -------------- | ---- | ---- | ------------------------------------ |\n| ID_            | ID_        | nvarchar(64)   | √    |      | 主键ID                               |\n| TYPE_          | 类型       | nvarchar(255)  |      | √    | 类型：event(事件)comment(意见)       |\n| TIME_          | 时间       | datetime       |      |      | 填写时间’                            |\n| USER_ID_       | 用户ID     | nvarchar(64)   |      | √    | 填写人                               |\n| TASK_ID_       | 节点任务ID | nvarchar(64)   |      | √    | 节点实例ID                           |\n| PROC_INST_ ID_ | 流程实例ID | nvarchar(255)  |      | √    | 流程实例ID                           |\n| ACTION_        | 行为类型   | nvarchar(64)   |      | √    | 见备注1                              |\n| MESSAGE_       | 基本内容   | nvarchar(4000) |      | √    | 用于存放流程产生的信息，比如审批意见 |\n| FULL_MSG_      | 全部内容   | varbinary(max) |      | √    | 附件地址                             |\n\n \n\n### ACT_HI_DETAIL表结构\n\n \t历史详情表( act_hi_detail )\n\n​\t流程中产生的变量详细，包括控制流程流转的变量，业务表单中填写的流程需要用到的变量等。\n\n| 字段名称      | 字段描述   | 数据类型         | 主键 | 为空 | 取值说明                                            |\n| ------------- | ---------- | ---------------- | ---- | ---- | --------------------------------------------------- |\n| ID_           | ID_        | nvarchar(64)     | √    |      | 主键                                                |\n| TYPE_         | 类型       | nvarchar(255)    |      |      | 见备注2                                             |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)     |      | √    | 流程实例ID                                          |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(64)     |      | √    | 执行实例ID                                          |\n| TASK_ID_      | 任务实例ID | nvarchar(64)     |      | √    | 任务实例ID                                          |\n| ACT_INST_ID_  | 节点实例ID | nvarchar(64)     |      | √    | ACT_HI_ACTINST表的ID                                |\n| NAME_         | 名称       | nvarchar(255)    |      |      | 名称                                                |\n| VAR_TYPE_     | 参数类型   | nvarchar(255)    |      | √    | 见备注3                                             |\n| REV_          | 乐观锁     | int              |      | √    | Version                                             |\n| TIME_         | 时间戳     | datetime         |      |      | 创建时间                                            |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar         |      | √    | ACT_GE_BYTEARRAY表的ID                              |\n| DOUBLE_       | DOUBLE_    | double precision |      | √    | 存储变量类型为Double                                |\n| LONG_         | LONG_      | numeric          |      | √    | 存储变量类型为long                                  |\n| TEXT_         | TEXT_      | nvarchar         |      | √    | 存储变量值类型为String                              |\n| TEXT2_        | TEXT2_     | nvarchar         |      | √    | 此处存储的是JPA持久化对象时，才会有值。此值为对象ID |\n\n \n\n ### ACT_HI_IDENTITYLINK表结构\n\n​\t历史流程人员表( act_ru_identitylink )\n\n​\t任务参与者数据表。主要存储历史节点参与者的信息 \n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------- | ---------- | ------------- | ---- | ---- | ---------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_        |\n| GROUP_ID_     | 组ID       | nvarchar(255) |      | √    | 组ID       |\n| TYPE_         | 类型       | nvarchar(255) |      | √    | 备注4      |\n| USER_ID_      | 用户ID     | nvarchar(255) |      | √    | 用户ID     |\n| TASK_ID_      | 节点实例ID | nvarchar(64)  |      | √    | 节点实例ID |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID |\n\n \n\n### ACT_HI_PROCINST表结构\n\n \t历史流程实例表(act_hi_procinst)\n\n| 字段名称                   | 字段描述     | 数据类型       | 主键 | 为空 | 取值说明               |\n| -------------------------- | ------------ | -------------- | ---- | ---- | ---------------------- |\n| ID_                        | ID_          | nvarchar(64)   | √    |      | 主键ID                 |\n| PROC_INST_ID_              | 流程实例ID   | nvarchar(64)   |      |      | 流程实例ID             |\n| BUSINESS_KEY_              | 业务主键     | nvarchar(255)  |      | √    | 业务主键，业务表单的ID |\n| PROC_DEF_ID_               | 流程定义ID   | nvarchar(64)   |      |      | 流程定义ID             |\n| START_TIME_                | 开始时间     | datetime       |      |      | 开始时间               |\n| END_TIME_                  | 结束时间     | datetime       |      | √    | 结束时间               |\n| DURATION_                  | 耗时         | Numeric(19)    |      | √    | 耗时                   |\n| START_USER_ID_             | 起草人       | nvarchar(255)  |      | √    | 起草人                 |\n| START_ACT_ID_              | 开始节点ID   | nvarchar(255)  |      | √    | 起草环节ID             |\n| END_ACT_ID_                | 结束节点ID   | nvarchar(255)  |      | √    | 结束环节ID             |\n| SUPER_PROCESS_INSTANCE_ID_ | 父流程实例ID | nvarchar(64)   |      | √    | 父流程实例ID           |\n| DELETE_REASON_             | 删除原因     | nvarchar(4000) |      | √    | 删除原因               |\n\n \n\n### ACT_HI_TASKINST表结构\n\n \t历史任务实例表( act_hi_taskinst )\n\n| 字段名称        | 字段描述                | 数据类型       | 主键 | 为空 | 取值说明                             |\n| --------------- | ----------------------- | -------------- | ---- | ---- | ------------------------------------ |\n| ID_             | ID_                     | nvarchar(64)   | √    |      | 主键ID                               |\n| PROC_DEF_ID_    | 流程定义ID              | nvarchar(64)   |      | √    | 流程定义ID                           |\n| TASK_DEF_KEY_   | 节点定义ID              | nvarchar(255)  |      | √    | 节点定义ID                           |\n| PROC_INST_ID_   | 流程实例ID              | nvarchar(64)   |      | √    | 流程实例ID                           |\n| EXECUTION_ID_   | 执行实例ID              | nvarchar(64)   |      | √    | 执行实例ID                           |\n| NAME_           | 名称                    | varchar(255)   |      | √    | 名称                                 |\n| PARENT_TASK_ID_ | 父节点实例ID            | nvarchar(64)   |      | √    | 父节点实例ID                         |\n| DESCRIPTION_    | 描述                    | nvarchar(400)  |      | √    | 描述                                 |\n| OWNER_          | 实际签收人 任务的拥有者 | nvarchar(255)  |      | √    | 签收人(默认为空，只有在委托时才有值) |\n| ASSIGNEE_       | 签收人或被委托          | nvarchar(255)  |      | √    | 签收人或被委托                       |\n| START_TIME_     | 开始时间                | datetime       |      |      | 开始时间                             |\n| CLAIM_TIME_     | 提醒时间                | datetime       |      | √    | 提醒时间                             |\n| END_TIME_       | 结束时间                | datetime       |      | √    | 结束时间                             |\n| DURATION_       | 耗时                    | numeric(19)    |      | √    | 耗时                                 |\n| DELETE_REASON_  | 删除原因                | nvarchar(4000) |      | √    | 删除原因(completed,deleted)          |\n| PRIORITY_       | 优先级别                | int            |      | √    | 优先级别                             |\n| DUE_DATE_       | 过期时间                | datetime       |      | √    | 过期时间，表明任务应在多长时间内完成 |\n| FORM_KEY_       | 节点定义的formkey       | nvarchar(255)  |      | √    | desinger节点定义的form_key属性       |\n\n \n\n### ACT_HI_VARINST表结构 \n\n 历史变量表( act_hi_varinst )\n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明                                            |\n| ------------- | ---------- | ------------- | ---- | ---- | --------------------------------------------------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_                                                 |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID                                          |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(255) |      | √    | 执行实例ID                                          |\n| TASK_ID_      | 任务实例ID | nvarchar(64)  |      | √    | 任务实例ID                                          |\n| NAME_         | 名称       | nvarchar(64)  |      |      | 参数名称(英文)                                      |\n| VAR_TYPE_     | 参数类型   | varchar(255)  |      | √    | 备注5                                               |\n| REV_          | 乐观锁     | nvarchar(64)  |      | √    | 乐观锁 Version                                      |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar(400) |      | √    | ACT_GE_BYTEARRAY表的主键                            |\n| DOUBLE_       | DOUBLE_    | nvarchar(255) |      | √    | 存储DoubleType类型的数据                            |\n| LONG_         | LONG_      | nvarchar(255) |      | √    | 存储LongType类型的数据                              |\n| TEXT_         | TEXT_      | datetime      |      | √    | 备注6                                               |\n| TEXT2_        | TEXT2_     | datetime      |      |      | 此处存储的是JPA持久化对象时，才会有值。此值为对象ID |\n\n \n\n### ACT_ID_GROUP表结构\n\n 用户组信息表( act_id_group )\n\n| 字段名称 | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| -------- | -------- | ------------- | ---- | ---- | ------------- |\n| ID_      | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_     | 乐观锁   | int           |      | √    | 乐观锁Version |\n| NAME_    | 名称     | nvarchar(255) |      | √    | 组名称        |\n| TYPE_    | 类型     | nvarchar(255) |      | √    | 类型          |\n\n \n\n### ACT_ID_INFO表结构\n\n 用户扩展信息表( act_id_info )\n\n| 字段名称   | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| ---------- | -------- | ------------- | ---- | ---- | ------------- |\n| ID_        | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_       | 乐观锁   | int           |      | √    | 乐观锁Version |\n| USER_ID_   | 用户ID   | nvarchar(64)  |      | √    |               |\n| TYPE_      | 类型     | nvarchar(64)  |      | √    |               |\n| KEY_       |          | nvarchar(255) |      | √    |               |\n| VALUE_     |          | nvarchar(255) |      | √    |               |\n| PASSWORD_  |          | Image         |      | √    |               |\n| PARENT_ID_ |          | nvarchar(255) |      | √    |               |\n\n \n\n### ACT_ID_MEMBERSHIP表结构\n\n 用户与分组对应信息表( act_id_membership )\n\n用来保存用户的分组信息。\n\n| 字段名称 | 字段描述 | 数据类型     | 主键 | 为空 | 取值说明 |\n| -------- | -------- | ------------ | ---- | ---- | -------- |\n| USER_ID  | 用户ID   | nvarchar(64) | √    |      |          |\n| GROUP_ID | 用户组ID | nvarchar(64) | √    |      |          |\n\n \n\n### ACT_ID_USER表结构\n\n 用户信息表( act_id_user )\n\n| 字段名称     | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明      |\n| ------------ | -------- | ------------- | ---- | ---- | ------------- |\n| ID_          | ID_      | nvarchar(64)  | √    |      | 主键ID        |\n| REV_         | 乐观锁   | int           |      | √    | 乐观锁Version |\n| FIRST_       | 姓       | nvarchar(255) |      | √    |               |\n| LAST_        | 名       | nvarchar(255) |      | √    |               |\n| EMAIL_       | EMAIL_   | nvarchar(255) |      | √    |               |\n| PWD_         | 密码     | nvarchar(255) |      | √    |               |\n| PICTURE_ ID_ | 图片ID   | nvarchar(64)  |      | √    |               |\n\n \n\n### ACT_RE_DEPLOYMENT表结构\n\n部署信息表( act_re_deployment )\n\n部署流程定义时需要被持久化保存下来的信息。\n\n| 字段名称     | 字段描述 | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------ | -------- | ------------- | ---- | ---- | ---------- |\n| ID_          | ID_      | nvarchar(64)  | √    |      | 主键ID     |\n| CATEGORY_    | 分类     | nvarchar(255) |      | √    | 类别       |\n| DEPLOY_TIME_ | 部署时间 | datetime      |      | √    | 部署时间   |\n| NAME_        | 部署名称 | nvarchar(255) |      | √    | 部署文件名 |\n\n \n\n### ACT_RE_MODEL表结构\n\n流程设计模型部署表( act_re_model )\n\n流程设计器设计流程后，保存数据到该表。\n\n| 字段名称                      | 字段描述     | 数据类型      | 主键 | 为空 | 取值说明                     |\n| ----------------------------- | ------------ | ------------- | ---- | ---- | ---------------------------- |\n| ID_                           | ID_          | nvarchar(64)  | √    |      | ID_                          |\n| REV_                          | 乐观锁       | int           |      | √    | 乐观锁                       |\n| NAME_                         | 名称         | nvarchar(255) |      | √    | 名称                         |\n| KEY_                          | KEY_         | nvarchar(255) |      | √    | key                          |\n| CATEGORY_                     | 分类         | nvarchar(255) |      | √    | 分类                         |\n| CREATE_TIME_                  | 创建时间     | datetime      |      | √    | 创建时间                     |\n| LAST_UPDATE_TIME_             | 最新修改时间 | datetime      |      | √    | 最新修改时间                 |\n| VERSION_                      | 版本         | int           |      | √    | 版本                         |\n| META_INFO_                    | META_INFO_   | nvarchar(255) |      | √    | 以json格式保存流程定义的信息 |\n| DEPLOYMENT_ID_                | 部署ID       | nvarchar(255) |      | √    | 部署ID                       |\n| EDITOR_SOURCE_VALUE_ID_       |              | datetime      |      | √    |                              |\n| EDITOR_SOURCE_EXTRA_VALUE_ID_ |              | datetime      |      | √    |                              |\n\n \n\n### ACT_RE_PROCDEF表结构\n\n流程定义数据表( act_re_procdef )\n\n业务流程定义数据表。此表和 ACT_RE_DEPLOYMENT 是多对一的关系，即，一个部署的bar包里可能包含多个流程定义文件，每个流程定义文件都会有一条记录在 ACT_REPROCDEF 表内，每个流程定义的数据，都会对于 ACT_GE_BYTEARRAY 表内的一个资源文件和 PNG 图片文件。和 ACT_GE_BYTEARRAY 的关联是通过程序用ACT_GE_BYTEARRAY.NAME 与 ACT_RE_PROCDEF.NAME 完成的，在数据库表结构中没有体现。 \n\n| 字段名称            | 字段描述                | 数据类型       | 主键 | 为空 | 取值说明                         |\n| ------------------- | ----------------------- | -------------- | ---- | ---- | -------------------------------- |\n| ID_                 | ID_                     | nvarchar(64)   | √    |      | ID_                              |\n| REV_                | 乐观锁                  | int            |      | √    | 乐观锁                           |\n| CATEGORY_           | 分类                    | nvarchar(255)  |      | √    | 流程定义的Namespace就是类别      |\n| NAME_               | 名称                    | nvarchar(255)  |      | √    | 名称                             |\n| KEY_                | 定义的KEY               | nvarchar(255)  |      |      | 流程定义ID                       |\n| VERSION_            | 版本                    | int            |      |      | 版本                             |\n| DEPLOYMENT_ID_      | 部署表ID                | nvarchar(64)   |      | √    | 部署表ID                         |\n| RESOURCE_NAME_      | bpmn文件名称            | nvarchar(4000) |      | √    | 流程bpmn文件名称                 |\n| DGRM_RESOURCE_NAME_ | png图片名称             | nvarchar(4000) |      | √    | 流程图片名称                     |\n| DESCRIPTION_        | 描述                    | nvarchar(4000) |      | √    | 描述                             |\n| HAS_START_FORM_KEY_ | 是否存在开始节点formKey | tinyint        |      | √    | start节点是否存在formKey 0否 1是 |\n| SUSPENSION_STATE_   | 是否挂起                | tinyint        |      | √    | 1 激活 2挂起                     |\n\n \n\n### ACT_RU_EVENT_SUBSCR表结构\n\n \n\n \n\n| 字段名称       | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明                               |\n| -------------- | ---------- | ------------- | ---- | ---- | -------------------------------------- |\n| ID_            | 事件ID     | nvarchar(64)  | √    |      | 事件ID                                 |\n| REV_           | 版本       | int           |      | √    | 乐观锁Version                          |\n| EVENT_TYPE_    | 事件类型   | nvarchar(255) |      |      | 事件类型                               |\n| EVENT_NAME_    | 事件名称   | nvarchar(255) |      | √    | 事件名称                               |\n| EXECUTION_ID_  | 执行实例ID | nvarchar(64)  |      | √    | 执行实例ID                             |\n| PROC_INST_ID_  | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID                             |\n| ACTIVITY_ID_   | 活动实例ID | nvarchar(64)  |      | √    | 活动实例ID                             |\n| CONFIGURATION_ | 配置       | nvarchar(255) |      | √    | 配置                                   |\n| CREATED_       | 是否创建   | datetime      |      |      | 默认值 当前系统时间戳CURRENT_TIMESTAMP |\n\n\n\n### ACT_RU_EXECUTION表结构\n\n运行时流程执行实例表( act_ru_execution )\n\n| 字段名称          | 字段描述        | 数据类型      | 主键 | 为空 | 取值说明                       |\n| ----------------- | --------------- | ------------- | ---- | ---- | ------------------------------ |\n| ID_               | ID_             | nvarchar(64)  | √    |      | ID_                            |\n| REV_              | 乐观锁          | int           |      | √    | 乐观锁                         |\n| PROC_INST_ID_     | 流程实例ID      | nvarchar(64)  |      |      | 流程实例ID                     |\n| BUSINESS_KEY_     | 业务主键ID      | nvarchar(255) |      | √    | 业务主键ID                     |\n| PARENT_ID_        | 父节点实例ID    | nvarchar(64)  |      | √    | 父节点实例ID                   |\n| PROC_DEF_ID_      | 流程定义ID      | nvarchar(64)  |      | √    | 流程定义ID                     |\n| SUPER_EXEC_       | SUPER_EXEC_     | nvarchar(64)  |      | √    | SUPER_EXEC_                    |\n| ACT_ID_           | 节点实例ID      | nvarchar(255) |      | √    | 节点实例ID即ACT_HI_ACTINST中ID |\n| IS_ACTIVE_        | 是否存活        | tinyint       |      | √    | 是否存活                       |\n| IS_CONCURRENT_    | 是否并行        | tinyint       |      | √    | 是否为并行(true/false)         |\n| IS_SCOPE_         | IS_SCOPE_       | tinyint       |      | √    | IS_SCOPE_                      |\n| IS_EVENT_SCOPE_   | IS_EVENT_SCOPE_ | tinyint       |      | √    | IS_EVENT_SCOPE_                |\n| SUSPENSION_STATE_ | 是否挂起        | tinyint       |      | √    | 挂起状态 1激活 2挂起           |\n| CACHED_ENT_STATE_ |                 | int           |      | √    |                                |\n\n \n\n\n\n### ACT_RU_IDENTITYLINK表结构\n\n运行时流程人员表( act_ru_identitylink )\n\n任务参与者数据表。主要存储当前节点参与者的信息。\n\n| 字段名称      | 字段描述   | 数据类型      | 主键 | 为空 | 取值说明   |\n| ------------- | ---------- | ------------- | ---- | ---- | ---------- |\n| ID_           | ID_        | nvarchar(64)  | √    |      | ID_        |\n| REV_          | 乐观锁     | int           |      | √    | 乐观锁     |\n| GROUP_ID_     | 组ID       | nvarchar(64)  |      | √    | 组ID       |\n| TYPE_         | 类型       | nvarchar(255) |      | √    | 备注7      |\n| USER_ID_      | 用户ID     | nvarchar(64)  |      | √    | 用户ID     |\n| TASK_ID_      | 节点实例ID | nvarchar(64)  |      | √    | 节点实例ID |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)  |      | √    | 流程实例ID |\n| PROC_DEF_ID_  | 流程定义ID | nvarchar(255) |      | √    | 流程定义ID |\n\n \n\n### ACT_RU_JOB表结构\n\n运行时定时任务数据表( act_ru_job )\n\n| 字段名称             | 字段描述     | 数据类型       | 主键 | 为空 | 取值说明     |\n| -------------------- | ------------ | -------------- | ---- | ---- | ------------ |\n| ID_                  | 标识         | nvarchar(64)   | √    |      | 标识         |\n| REV_                 | 版本         | int            |      | √    | 版本         |\n| TYPE_                | 类型         | nvarchar(255)  |      |      | 类型         |\n| LOCK_EXP_TIME_       | 锁定释放时间 | datetime       |      | √    | 锁定释放时间 |\n| LOCK_OWNER_          | 挂起者       | nvarchar(255)  |      | √    | 挂起者       |\n| EXCLUSIVE_           |              | bit            |      | √    |              |\n| EXECUTION_ID_        | 执行实例ID   | nvarchar(64)   |      | √    | 执行实例ID   |\n| PROCESS_INSTANCE_ID_ | 流程实例ID   | nvarchar(64)   |      | √    | 流程实例ID   |\n| PROC_DEF_ID_         | 流程定义ID   | nvarchar(64)   |      | √    | 流程定义ID   |\n| RETRIES_             |              | int            |      | √    |              |\n| EXCEPTION_STACK_ID_  | 异常信息ID   | nvarchar(64)   |      | √    | 异常信息ID   |\n| EXCEPTION_MSG_       | 异常信息     | nvarchar(4000) |      | √    | 异常信息     |\n| DUEDATE_             | 到期时间     | datetime       |      | √    | 到期时间     |\n| REPEAT_              | 重复         | nvarchar(255)  |      | √    | 重复         |\n| HANDLER_TYPE_        | 处理类型     | nvarchar(255)  |      | √    | 处理类型     |\n| HANDLER_CFG_         |              | nvarchar(4000) |      | √    | 标识         |\n\n \n\n### ACT_RU_TASK表结构\n\n运行时任务节点表( act_ru_task )\n\n| 字段名称          | 字段描述       | 数据类型       | 主键 | 为空 | 取值说明                                   |\n| ----------------- | -------------- | -------------- | ---- | ---- | ------------------------------------------ |\n| ID_               | ID_            | nvarchar(64)   | √    |      | ID_                                        |\n| REV_              | 乐观锁         | int            |      | √    | 乐观锁                                     |\n| EXECUTION_ID_     | 执行实例ID     | nvarchar(64)   |      | √    | 执行实例ID                                 |\n| PROC_INST_ID_     | 流程实例ID     | nvarchar(64)   |      | √    | 流程实例ID                                 |\n| PROC_DEF_ID_      | 流程定义ID     | nvarchar(64)   |      | √    | 流程定义ID                                 |\n| NAME_             | 节点定义名称   | nvarchar(255)  |      | √    | 节点定义名称                               |\n| PARENT_TASK_ID_   | 父节点实例ID   | nvarchar(64)   |      | √    | 父节点实例ID                               |\n| DESCRIPTION_      | 节点定义描述   | nvarchar(4000) |      | √    | 节点定义描述                               |\n| TASK_DEF_KEY_     | 节点定义的KEY  | nvarchar(255)  |      | √    | 任务定义的ID                               |\n| OWNER_            | 实际签收人     | nvarchar(255)  |      | √    | 拥有者(一般情况下为空，只有在委托时才有值) |\n| ASSIGNEE_         | 签收人或委托人 | nvarchar(255)  |      | √    | 签收人或委托人                             |\n| DELEGATION_       | 委托类型       | nvarchar(64)   |      | √    | 备注8                                      |\n| PRIORITY_         | 优先级别       | int            |      | √    | 优先级别，默认为：50                       |\n| CREATE_TIME_      | 创建时间       | datetime       |      | √    | 创建时间                                   |\n| DUE_DATE_         | 过期时间       | datetime       |      | √    | 耗时                                       |\n| SUSPENSION_STATE_ | 是否挂起       | int            |      | √    | 1代表激活 2代表挂起                        |\n\n\n\n### ACT_RU_VARIABLE表结构\n\n运行时流程变量数据表( act_ru_variable ) \n\n| 字段名称      | 字段描述   | 数据类型       | 主键 | 为空 | 取值说明                                                     |\n| ------------- | ---------- | -------------- | ---- | ---- | ------------------------------------------------------------ |\n| ID_           | ID_        | nvarchar(64)   | √    |      | 主键标识                                                     |\n| REV_          | 乐观锁     | int            |      | √    | 乐观锁                                                       |\n| TYPE_         | 类型       | nvarchar(255)  |      |      | 备注9                                                        |\n| NAME_         | 名称       | nvarchar(255)  |      |      | 变量名称                                                     |\n| EXECUTION_ID_ | 执行实例ID | nvarchar(64)   |      | √    | 执行的ID                                                     |\n| PROC_INST_ID_ | 流程实例ID | nvarchar(64)   |      | √    | 流程实例ID                                                   |\n| TASK_ID_      | 节点实例ID | nvarchar(64)   |      | √    | 节点实例ID(Local)                                            |\n| BYTEARRAY_ID_ | 字节表ID   | nvarchar(64)   |      | √    | 字节表的ID(ACT_GE_BYTEARRAY)                                 |\n| DOUBLE_       | DOUBLE_    | float          |      | √    | 存储变量类型为Double                                         |\n| LONG_         | LONG_      | numeric(19)    |      | √    | 存储变量类型为long                                           |\n| TEXT_         | TEXT_      | nvarchar(4000) |      | √    | ‘存储变量值类型为String 如此处存储持久化对象时，值jpa对象的class |\n| TEXT2_        | TEXT2_     | nvarchar(4000) |      | √    | 此处存储的是JPA持久化对象时，  才会有值。此值为对象ID        |\n\n \n\n### ACT_RU_EXECUTION表结构\n\n运行时流程执行实例表( act_ru_execution )\t \n\n| 字段名称          | 字段描述        | 数据类型      | 主键 | 为空 | 取值说明                       |\n| ----------------- | --------------- | ------------- | ---- | ---- | ------------------------------ |\n| ID_               | ID_             | nvarchar(64)  | √    |      | ID_                            |\n| REV_              | 乐观锁          | int           |      | √    | 乐观锁                         |\n| PROC_INST_ID_     | 流程实例ID      | nvarchar(64)  |      |      | 流程实例ID                     |\n| BUSINESS_KEY_     | 业务主键ID      | nvarchar(255) |      | √    | 业务主键ID                     |\n| PARENT_ID_        | 父节点实例ID    | nvarchar(64)  |      | √    | 父节点实例ID                   |\n| PROC_DEF_ID_      | 流程定义ID      | nvarchar(64)  |      | √    | 流程定义ID                     |\n| SUPER_EXEC_       | SUPER_EXEC_     | nvarchar(64)  |      | √    | SUPER_EXEC_                    |\n| ACT_ID_           | 节点实例ID      | nvarchar(255) |      | √    | 节点实例ID即ACT_HI_ACTINST中ID |\n| IS_ACTIVE_        | 是否存活        | tinyint       |      | √    | 是否存活                       |\n| IS_CONCURRENT_    | 是否并行        | tinyint       |      | √    | 是否为并行(true/false)         |\n| IS_SCOPE_         | IS_SCOPE_       | tinyint       |      | √    | IS_SCOPE_                      |\n| IS_EVENT_SCOPE_   | IS_EVENT_SCOPE_ | tinyint       |      | √    | IS_EVENT_SCOPE_                |\n| SUSPENSION_STATE_ | 是否挂起        | tinyint       |      | √    | 挂起状态 1激活 2挂起           |\n| CACHED_ENT_STATE_ |                 | int           |      | √    |                                |\n\n \n\n## 操作activiti的各个环节涉及到的关键表\n\n\\# 部署流程定义涉及到的表\n\n\\# 流程部署表\n\nSELECT * FROM `act_re_deployment`\n\n\\# 流程定义表\n\nSELECT * FROM `act_re_procdef`\n\n\\# 资源文件表\n\nSELECT * FROM `act_ge_bytearray`\n\n\\# 系统配置表\n\nSELECT * FROM `act_ge_property`\n\n \n\n\\################################\n\n\\# 启动流程实例涉及到的表\n\n\\# 流程实例运行时 执行对象表\n\nSELECT * FROM `act_ru_execution`\n\n\\# 流程实例运行时 身份联系表\n\nSELECT * FROM `act_ru_identitylink`\n\n\\# 流程实例运行时 用户任务表\n\nSELECT * FROM `act_ru_task`\n\n\\# 活动节点历史表\n\nSELECT * FROM `act_hi_actinst`\n\n\\# 身份联系表 历史\n\nSELECT * FROM `act_hi_identitylink`\n\n\\# 流程实例表 历史\n\nSELECT * FROM `act_hi_procinst`\n\n\\# 历史任务表\n\nSELECT * FROM `act_hi_taskinst`\n\n\\# 结束流程实例涉及到的表\n\n\\# 运行时 表数据全部清空\n\n\\# 历史表 表数据修改 或者增加了数据\n\n2. **流程定****义与图数据库保存结构**\n\n会更新ACT_RE_MODEL和ACT_GE_BYTEARRAY表，\n\nACT_GE_BYTEARRAY表保存了PNG图片和xml文件信息(其实是json格式的字符串)，并关联到ACT_RE_MODEL表。\n\nACT_GE_BYTEARRAY表中NAME_列值source-extra行中存储的是：PNG图片\n\nACT_GE_BYTEARRAY表中NAME_列值source行中存储的是：xml文件信息\n\n \n\n流程设计器设计流程后，保存数据到ACT_RE_MODEL 表。\n\nEDITOR_SOURCE_VALUE_ID(流程文件放在ACT_GE_BYTEARRAY中的ID)；\n\nEDITOR_SOURCE_EXTRA_VALUE_ID(流程文件图像放在ACT_GE_BYTEARRAY中的ID)。 \n\n ","slug":"Activiti6表结构说明","published":1,"updated":"2022-07-06T11:54:36.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5ambere0009rm9k9eq8gijf","content":"<h1 id=\"表结构说明\"><a href=\"#表结构说明\" class=\"headerlink\" title=\"表结构说明\"></a>表结构说明</h1><span id=\"more\"></span>\n\n<h2 id=\"表名规则\"><a href=\"#表名规则\" class=\"headerlink\" title=\"表名规则:\"></a>表名规则:</h2><h3 id=\"Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。\"><a href=\"#Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。\" class=\"headerlink\" title=\"Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。\"></a>Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。</h3><h2 id=\"表前缀说明\"><a href=\"#表前缀说明\" class=\"headerlink\" title=\"表前缀说明\"></a>表前缀说明</h2><ul>\n<li><p>ACT_GE_  (GE)   表示  general 全局通用数据及设置，各种情况都使用的数据。</p>\n</li>\n<li><p>ACT_HI_  (HI)   表示  history 历史数据表，包含着程执行的历史相关数据，如结束的流程实例，变量，任务，等等</p>\n</li>\n<li><p>ACT_ID_  (ID)   表示  identity 组织机构，用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。</p>\n</li>\n<li><p>ACT_RE_  (RE)   表示  repository 存储，包含的是静态信息，如，流程定义，流程的资源(图片，规则等)。</p>\n</li>\n<li><p>ACT_RU_  (RU)   表示  runtime 运行时，运行时的流程变量，用户任务，变量，职责(job)等运行时的数据。Activiti 只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。</p>\n</li>\n</ul>\n<h2 id=\"Activiti表总览\"><a href=\"#Activiti表总览\" class=\"headerlink\" title=\"Activiti表总览\"></a>Activiti表总览</h2><h3 id=\"全局数据表-ACT-GE\"><a href=\"#全局数据表-ACT-GE\" class=\"headerlink\" title=\"全局数据表 (ACT_GE_)\"></a>全局数据表 (ACT_GE_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_GE_BYTEARRAY</td>\n<td>二进制数据表，存储通用的流程定义和流程资源。</td>\n</tr>\n<tr>\n<td>ACT_GE_PROPERTY</td>\n<td>系统相关属性，属性数据表存储整个流程引擎级别的数据，初始化表结构时，会默认插入三条记录。</td>\n</tr>\n</tbody></table>\n<h3 id=\"流程历史记录表-ACT-HI\"><a href=\"#流程历史记录表-ACT-HI\" class=\"headerlink\" title=\"流程历史记录表 (ACT_HI_)\"></a>流程历史记录表 (ACT_HI_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_ HI_ACTINST</td>\n<td>历史节点表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ATTACHMENT</td>\n<td>历史附件表</td>\n</tr>\n<tr>\n<td>ACT_ HI_COMMENT</td>\n<td>历史意见表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ DETAIL</td>\n<td>历史详情表，提供历史变量的查询</td>\n</tr>\n<tr>\n<td>ACT_ HI_ IDENTITYLINK</td>\n<td>历史流程人员表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ PROCINST</td>\n<td>历史流程实例表</td>\n</tr>\n<tr>\n<td>ACT_HI_TASKINST</td>\n<td>历史任务实例表</td>\n</tr>\n<tr>\n<td>ACT_HI_VARINST</td>\n<td>历史变量表</td>\n</tr>\n</tbody></table>\n<h3 id=\"用户用户组表-ACT-ID\"><a href=\"#用户用户组表-ACT-ID\" class=\"headerlink\" title=\"用户用户组表 (ACT_ID_)\"></a>用户用户组表 (ACT_ID_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_ID_GROUP</td>\n<td>用户组信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_INFO</td>\n<td>用户扩展信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_MEMBERSHIP</td>\n<td>用户与用户组对应信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_USER</td>\n<td>用户信息表</td>\n</tr>\n</tbody></table>\n<h3 id=\"流程定义表-ACT-RE\"><a href=\"#流程定义表-ACT-RE\" class=\"headerlink\" title=\"流程定义表 (ACT_RE_)\"></a>流程定义表 (ACT_RE_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_RE_DEPLOYMENT</td>\n<td>部署信息表</td>\n</tr>\n<tr>\n<td>ACT_RE_MODEL</td>\n<td>流程设计模型部署表</td>\n</tr>\n<tr>\n<td>ACT_RE_PROCDEF</td>\n<td>流程定义数据表</td>\n</tr>\n</tbody></table>\n<h3 id=\"运行实例表-ACT-RU\"><a href=\"#运行实例表-ACT-RU\" class=\"headerlink\" title=\"运行实例表 (ACT_RU_)\"></a>运行实例表 (ACT_RU_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_RU_EVENT_SUBSCR</td>\n<td>运行时事件 throwEvent、catchEvent 时间监听信息表</td>\n</tr>\n<tr>\n<td>ACT_RU_EXECUTION</td>\n<td>运行时流程执行实例</td>\n</tr>\n<tr>\n<td>ACT_RU_IDENTITYLINK</td>\n<td>运行时流程人员表，主要存储任务节点与参与者的相关信息</td>\n</tr>\n<tr>\n<td>ACT_RU_JOB</td>\n<td>运行时定时任务数据表</td>\n</tr>\n<tr>\n<td>ACT_RU_TASK</td>\n<td>运行时任务节点表</td>\n</tr>\n<tr>\n<td>ACT_RU_VARIABLE</td>\n<td>运行时流程变量数据表</td>\n</tr>\n</tbody></table>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_EVT_LOG</td>\n<td>事件日志</td>\n</tr>\n<tr>\n<td>ACT_PROCDEF_INFO</td>\n<td>流程定义的动态变更信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"Acticiti表详情\"><a href=\"#Acticiti表详情\" class=\"headerlink\" title=\"Acticiti表详情\"></a>Acticiti表详情</h2><h3 id=\"ACT-GE-BYTEARRAY表结构\"><a href=\"#ACT-GE-BYTEARRAY表结构\" class=\"headerlink\" title=\"ACT_GE_BYTEARRAY表结构\"></a>ACT_GE_BYTEARRAY表结构</h3><pre><code> 二进制数据表，存储通用的流程定义和流程资源。(act_ge_bytearray)\n</code></pre>\n<p>​    保存流程定义图片和xml、Serializable(序列化)的变量,即保存所有二进制数据，特别注意类路径部署时候，不要把svn等隐藏文件或者其他与流程无关的文件也一起部署到该表中，会造成一些错误(可能导致流程定义无法删除)</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>Y</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>Y</td>\n<td>Version(版本)</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>Y</td>\n<td>部署的文件名称，如：leave.bpmn.png,leave.bpmn20.xml</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>Y</td>\n<td>部署表ID</td>\n</tr>\n<tr>\n<td>BYTES_</td>\n<td>字节</td>\n<td>varbinary(max)</td>\n<td></td>\n<td>Y</td>\n<td>部署文件</td>\n</tr>\n<tr>\n<td>GENERATED_</td>\n<td>是否是引擎生成</td>\n<td>tinyint</td>\n<td></td>\n<td>Y</td>\n<td>0为用户生成，1为activiti生成</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-GE-PROPERTY表结构\"><a href=\"#ACT-GE-PROPERTY表结构\" class=\"headerlink\" title=\"ACT_GE_PROPERTY表结构\"></a>ACT_GE_PROPERTY表结构</h3><p>​    属性数据表(act_ge_property)</p>\n<p>​    属性数据表。存储整个流程引擎级别的数据。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>schema.versionschema.historynext.dbid</td>\n</tr>\n<tr>\n<td>VALUE_</td>\n<td>值</td>\n<td>nvarchar(300)</td>\n<td></td>\n<td>√</td>\n<td>5.<strong>create</strong>**(**<strong>5.</strong>)</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>version</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-ACTINST表结构\"><a href=\"#ACT-HI-ACTINST表结构\" class=\"headerlink\" title=\"ACT_HI_ACTINST表结构\"></a>ACT_HI_ACTINST表结构</h3><p>​    历史节点表(act_hi_actinst)</p>\n<p>​    历史活动信息。这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点ID</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td></td>\n<td>节点定义ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID 其他节点类型实例ID在这里为空</td>\n</tr>\n<tr>\n<td>CALL_PROC_INST_ID_</td>\n<td>调用外部的流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>调用外部流程的流程实例ID’</td>\n</tr>\n<tr>\n<td>ACT_NAME_</td>\n<td>节点名称</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td>√</td>\n<td>节点定义名称</td>\n</tr>\n<tr>\n<td>ACT_TYPE_</td>\n<td>节点类型</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td></td>\n<td>如startEvent、userTask</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点签收人</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>2013-09-15 11:30:00</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>2013-09-15 11:30:00</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>numeric(19,0)</td>\n<td></td>\n<td>√</td>\n<td>毫秒值</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-ATTACHMENT表结构\"><a href=\"#ACT-HI-ATTACHMENT表结构\" class=\"headerlink\" title=\"ACT_HI_ATTACHMENT表结构\"></a>ACT_HI_ATTACHMENT表结构</h3><pre><code> 历史附件表( act_hi_attachment )\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>integer</td>\n<td></td>\n<td>√</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>附件名称</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>附件类型</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>URL_</td>\n<td>URL_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>附件地址</td>\n</tr>\n<tr>\n<td>CONTENT_ ID_</td>\n<td>字节表的ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY的ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-COMMENT表结构\"><a href=\"#ACT-HI-COMMENT表结构\" class=\"headerlink\" title=\"ACT_HI_COMMENT表结构\"></a>ACT_HI_COMMENT表结构</h3><p> 历史意见表( act_hi_comment )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类型：event(事件)comment(意见)</td>\n</tr>\n<tr>\n<td>TIME_</td>\n<td>时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>填写时间’</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>填写人</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点任务ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>ACTION_</td>\n<td>行为类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>见备注1</td>\n</tr>\n<tr>\n<td>MESSAGE_</td>\n<td>基本内容</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>用于存放流程产生的信息，比如审批意见</td>\n</tr>\n<tr>\n<td>FULL_MSG_</td>\n<td>全部内容</td>\n<td>varbinary(max)</td>\n<td></td>\n<td>√</td>\n<td>附件地址</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-DETAIL表结构\"><a href=\"#ACT-HI-DETAIL表结构\" class=\"headerlink\" title=\"ACT_HI_DETAIL表结构\"></a>ACT_HI_DETAIL表结构</h3><pre><code> 历史详情表( act_hi_detail )\n</code></pre>\n<p>​    流程中产生的变量详细，包括控制流程流转的变量，业务表单中填写的流程需要用到的变量等。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>见备注2</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID</td>\n</tr>\n<tr>\n<td>ACT_INST_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>ACT_HI_ACTINST表的ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>名称</td>\n</tr>\n<tr>\n<td>VAR_TYPE_</td>\n<td>参数类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>见备注3</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>TIME_</td>\n<td>时间戳</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY表的ID</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>double precision</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为Double</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>numeric</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为long</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>存储变量值类型为String</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-IDENTITYLINK表结构\"><a href=\"#ACT-HI-IDENTITYLINK表结构\" class=\"headerlink\" title=\"ACT_HI_IDENTITYLINK表结构\"></a>ACT_HI_IDENTITYLINK表结构</h3><p>​    历史流程人员表( act_ru_identitylink )</p>\n<p>​    任务参与者数据表。主要存储历史节点参与者的信息 </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>GROUP_ID_</td>\n<td>组ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>组ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注4</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-PROCINST表结构\"><a href=\"#ACT-HI-PROCINST表结构\" class=\"headerlink\" title=\"ACT_HI_PROCINST表结构\"></a>ACT_HI_PROCINST表结构</h3><pre><code> 历史流程实例表(act_hi_procinst)\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键，业务表单的ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>开始时间</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>结束时间</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>Numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>START_USER_ID_</td>\n<td>起草人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>起草人</td>\n</tr>\n<tr>\n<td>START_ACT_ID_</td>\n<td>开始节点ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>起草环节ID</td>\n</tr>\n<tr>\n<td>END_ACT_ID_</td>\n<td>结束节点ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>结束环节ID</td>\n</tr>\n<tr>\n<td>SUPER_PROCESS_INSTANCE_ID_</td>\n<td>父流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父流程实例ID</td>\n</tr>\n<tr>\n<td>DELETE_REASON_</td>\n<td>删除原因</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>删除原因</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-TASKINST表结构\"><a href=\"#ACT-HI-TASKINST表结构\" class=\"headerlink\" title=\"ACT_HI_TASKINST表结构\"></a>ACT_HI_TASKINST表结构</h3><pre><code> 历史任务实例表( act_hi_taskinst )\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>TASK_DEF_KEY_</td>\n<td>节点定义ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点定义ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>varchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>PARENT_TASK_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(400)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>OWNER_</td>\n<td>实际签收人 任务的拥有者</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人(默认为空，只有在委托时才有值)</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人或被委托</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人或被委托</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>开始时间</td>\n</tr>\n<tr>\n<td>CLAIM_TIME_</td>\n<td>提醒时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>提醒时间</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>结束时间</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>DELETE_REASON_</td>\n<td>删除原因</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>删除原因(completed,deleted)</td>\n</tr>\n<tr>\n<td>PRIORITY_</td>\n<td>优先级别</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>优先级别</td>\n</tr>\n<tr>\n<td>DUE_DATE_</td>\n<td>过期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>过期时间，表明任务应在多长时间内完成</td>\n</tr>\n<tr>\n<td>FORM_KEY_</td>\n<td>节点定义的formkey</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>desinger节点定义的form_key属性</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-VARINST表结构\"><a href=\"#ACT-HI-VARINST表结构\" class=\"headerlink\" title=\"ACT_HI_VARINST表结构\"></a>ACT_HI_VARINST表结构</h3><p> 历史变量表( act_hi_varinst )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>参数名称(英文)</td>\n</tr>\n<tr>\n<td>VAR_TYPE_</td>\n<td>参数类型</td>\n<td>varchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注5</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>乐观锁 Version</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar(400)</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY表的主键</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>存储DoubleType类型的数据</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>存储LongType类型的数据</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>备注6</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-GROUP表结构\"><a href=\"#ACT-ID-GROUP表结构\" class=\"headerlink\" title=\"ACT_ID_GROUP表结构\"></a>ACT_ID_GROUP表结构</h3><p> 用户组信息表( act_id_group )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>组名称</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类型</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-INFO表结构\"><a href=\"#ACT-ID-INFO表结构\" class=\"headerlink\" title=\"ACT_ID_INFO表结构\"></a>ACT_ID_INFO表结构</h3><p> 用户扩展信息表( act_id_info )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>VALUE_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PASSWORD_</td>\n<td></td>\n<td>Image</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-MEMBERSHIP表结构\"><a href=\"#ACT-ID-MEMBERSHIP表结构\" class=\"headerlink\" title=\"ACT_ID_MEMBERSHIP表结构\"></a>ACT_ID_MEMBERSHIP表结构</h3><p> 用户与分组对应信息表( act_id_membership )</p>\n<p>用来保存用户的分组信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>USER_ID</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>GROUP_ID</td>\n<td>用户组ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-USER表结构\"><a href=\"#ACT-ID-USER表结构\" class=\"headerlink\" title=\"ACT_ID_USER表结构\"></a>ACT_ID_USER表结构</h3><p> 用户信息表( act_id_user )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>FIRST_</td>\n<td>姓</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>LAST_</td>\n<td>名</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EMAIL_</td>\n<td>EMAIL_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PWD_</td>\n<td>密码</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PICTURE_ ID_</td>\n<td>图片ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-DEPLOYMENT表结构\"><a href=\"#ACT-RE-DEPLOYMENT表结构\" class=\"headerlink\" title=\"ACT_RE_DEPLOYMENT表结构\"></a>ACT_RE_DEPLOYMENT表结构</h3><p>部署信息表( act_re_deployment )</p>\n<p>部署流程定义时需要被持久化保存下来的信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类别</td>\n</tr>\n<tr>\n<td>DEPLOY_TIME_</td>\n<td>部署时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>部署时间</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>部署名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>部署文件名</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-MODEL表结构\"><a href=\"#ACT-RE-MODEL表结构\" class=\"headerlink\" title=\"ACT_RE_MODEL表结构\"></a>ACT_RE_MODEL表结构</h3><p>流程设计模型部署表( act_re_model )</p>\n<p>流程设计器设计流程后，保存数据到该表。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td>KEY_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>key</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>分类</td>\n</tr>\n<tr>\n<td>CREATE_TIME_</td>\n<td>创建时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>LAST_UPDATE_TIME_</td>\n<td>最新修改时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>最新修改时间</td>\n</tr>\n<tr>\n<td>VERSION_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>版本</td>\n</tr>\n<tr>\n<td>META_INFO_</td>\n<td>META_INFO_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>以json格式保存流程定义的信息</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>部署ID</td>\n</tr>\n<tr>\n<td>EDITOR_SOURCE_VALUE_ID_</td>\n<td></td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EDITOR_SOURCE_EXTRA_VALUE_ID_</td>\n<td></td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-PROCDEF表结构\"><a href=\"#ACT-RE-PROCDEF表结构\" class=\"headerlink\" title=\"ACT_RE_PROCDEF表结构\"></a>ACT_RE_PROCDEF表结构</h3><p>流程定义数据表( act_re_procdef )</p>\n<p>业务流程定义数据表。此表和 ACT_RE_DEPLOYMENT 是多对一的关系，即，一个部署的bar包里可能包含多个流程定义文件，每个流程定义文件都会有一条记录在 ACT_REPROCDEF 表内，每个流程定义的数据，都会对于 ACT_GE_BYTEARRAY 表内的一个资源文件和 PNG 图片文件。和 ACT_GE_BYTEARRAY 的关联是通过程序用ACT_GE_BYTEARRAY.NAME 与 ACT_RE_PROCDEF.NAME 完成的，在数据库表结构中没有体现。 </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程定义的Namespace就是类别</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td>定义的KEY</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>VERSION_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td>版本</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署表ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>部署表ID</td>\n</tr>\n<tr>\n<td>RESOURCE_NAME_</td>\n<td>bpmn文件名称</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>流程bpmn文件名称</td>\n</tr>\n<tr>\n<td>DGRM_RESOURCE_NAME_</td>\n<td>png图片名称</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>流程图片名称</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>HAS_START_FORM_KEY_</td>\n<td>是否存在开始节点formKey</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>start节点是否存在formKey 0否 1是</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>1 激活 2挂起</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EVENT-SUBSCR表结构\"><a href=\"#ACT-RU-EVENT-SUBSCR表结构\" class=\"headerlink\" title=\"ACT_RU_EVENT_SUBSCR表结构\"></a>ACT_RU_EVENT_SUBSCR表结构</h3><table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>事件ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>事件ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>EVENT_TYPE_</td>\n<td>事件类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>事件类型</td>\n</tr>\n<tr>\n<td>EVENT_NAME_</td>\n<td>事件名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>事件名称</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>ACTIVITY_ID_</td>\n<td>活动实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>活动实例ID</td>\n</tr>\n<tr>\n<td>CONFIGURATION_</td>\n<td>配置</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>配置</td>\n</tr>\n<tr>\n<td>CREATED_</td>\n<td>是否创建</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>默认值 当前系统时间戳CURRENT_TIMESTAMP</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EXECUTION表结构\"><a href=\"#ACT-RU-EXECUTION表结构\" class=\"headerlink\" title=\"ACT_RU_EXECUTION表结构\"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键ID</td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>SUPER_EXEC_</td>\n<td>SUPER_EXEC_</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>SUPER_EXEC_</td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID即ACT_HI_ACTINST中ID</td>\n</tr>\n<tr>\n<td>IS_ACTIVE_</td>\n<td>是否存活</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否存活</td>\n</tr>\n<tr>\n<td>IS_CONCURRENT_</td>\n<td>是否并行</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否为并行(true/false)</td>\n</tr>\n<tr>\n<td>IS_SCOPE_</td>\n<td>IS_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_SCOPE_</td>\n</tr>\n<tr>\n<td>IS_EVENT_SCOPE_</td>\n<td>IS_EVENT_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_EVENT_SCOPE_</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>挂起状态 1激活 2挂起</td>\n</tr>\n<tr>\n<td>CACHED_ENT_STATE_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-IDENTITYLINK表结构\"><a href=\"#ACT-RU-IDENTITYLINK表结构\" class=\"headerlink\" title=\"ACT_RU_IDENTITYLINK表结构\"></a>ACT_RU_IDENTITYLINK表结构</h3><p>运行时流程人员表( act_ru_identitylink )</p>\n<p>任务参与者数据表。主要存储当前节点参与者的信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>GROUP_ID_</td>\n<td>组ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>组ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注7</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-JOB表结构\"><a href=\"#ACT-RU-JOB表结构\" class=\"headerlink\" title=\"ACT_RU_JOB表结构\"></a>ACT_RU_JOB表结构</h3><p>运行时定时任务数据表( act_ru_job )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>标识</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>标识</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>版本</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>类型</td>\n</tr>\n<tr>\n<td>LOCK_EXP_TIME_</td>\n<td>锁定释放时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>锁定释放时间</td>\n</tr>\n<tr>\n<td>LOCK_OWNER_</td>\n<td>挂起者</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>挂起者</td>\n</tr>\n<tr>\n<td>EXCLUSIVE_</td>\n<td></td>\n<td>bit</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROCESS_INSTANCE_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>RETRIES_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EXCEPTION_STACK_ID_</td>\n<td>异常信息ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>异常信息ID</td>\n</tr>\n<tr>\n<td>EXCEPTION_MSG_</td>\n<td>异常信息</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>异常信息</td>\n</tr>\n<tr>\n<td>DUEDATE_</td>\n<td>到期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>到期时间</td>\n</tr>\n<tr>\n<td>REPEAT_</td>\n<td>重复</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>重复</td>\n</tr>\n<tr>\n<td>HANDLER_TYPE_</td>\n<td>处理类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>处理类型</td>\n</tr>\n<tr>\n<td>HANDLER_CFG_</td>\n<td></td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>标识</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-TASK表结构\"><a href=\"#ACT-RU-TASK表结构\" class=\"headerlink\" title=\"ACT_RU_TASK表结构\"></a>ACT_RU_TASK表结构</h3><p>运行时任务节点表( act_ru_task )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>节点定义名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点定义名称</td>\n</tr>\n<tr>\n<td>PARENT_TASK_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>节点定义描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>节点定义描述</td>\n</tr>\n<tr>\n<td>TASK_DEF_KEY_</td>\n<td>节点定义的KEY</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>任务定义的ID</td>\n</tr>\n<tr>\n<td>OWNER_</td>\n<td>实际签收人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>拥有者(一般情况下为空，只有在委托时才有值)</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人或委托人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人或委托人</td>\n</tr>\n<tr>\n<td>DELEGATION_</td>\n<td>委托类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>备注8</td>\n</tr>\n<tr>\n<td>PRIORITY_</td>\n<td>优先级别</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>优先级别，默认为：50</td>\n</tr>\n<tr>\n<td>CREATE_TIME_</td>\n<td>创建时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>DUE_DATE_</td>\n<td>过期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>1代表激活 2代表挂起</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-VARIABLE表结构\"><a href=\"#ACT-RU-VARIABLE表结构\" class=\"headerlink\" title=\"ACT_RU_VARIABLE表结构\"></a>ACT_RU_VARIABLE表结构</h3><p>运行时流程变量数据表( act_ru_variable ) </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键标识</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>备注9</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>变量名称</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行的ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID(Local)</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>字节表的ID(ACT_GE_BYTEARRAY)</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>float</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为Double</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为long</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>‘存储变量值类型为String 如此处存储持久化对象时，值jpa对象的class</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>此处存储的是JPA持久化对象时，  才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EXECUTION表结构-1\"><a href=\"#ACT-RU-EXECUTION表结构-1\" class=\"headerlink\" title=\"ACT_RU_EXECUTION表结构\"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )     </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键ID</td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>SUPER_EXEC_</td>\n<td>SUPER_EXEC_</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>SUPER_EXEC_</td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID即ACT_HI_ACTINST中ID</td>\n</tr>\n<tr>\n<td>IS_ACTIVE_</td>\n<td>是否存活</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否存活</td>\n</tr>\n<tr>\n<td>IS_CONCURRENT_</td>\n<td>是否并行</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否为并行(true/false)</td>\n</tr>\n<tr>\n<td>IS_SCOPE_</td>\n<td>IS_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_SCOPE_</td>\n</tr>\n<tr>\n<td>IS_EVENT_SCOPE_</td>\n<td>IS_EVENT_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_EVENT_SCOPE_</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>挂起状态 1激活 2挂起</td>\n</tr>\n<tr>\n<td>CACHED_ENT_STATE_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"操作activiti的各个环节涉及到的关键表\"><a href=\"#操作activiti的各个环节涉及到的关键表\" class=\"headerlink\" title=\"操作activiti的各个环节涉及到的关键表\"></a>操作activiti的各个环节涉及到的关键表</h2><p># 部署流程定义涉及到的表</p>\n<p># 流程部署表</p>\n<p>SELECT * FROM <code>act_re_deployment</code></p>\n<p># 流程定义表</p>\n<p>SELECT * FROM <code>act_re_procdef</code></p>\n<p># 资源文件表</p>\n<p>SELECT * FROM <code>act_ge_bytearray</code></p>\n<p># 系统配置表</p>\n<p>SELECT * FROM <code>act_ge_property</code></p>\n<p>################################</p>\n<p># 启动流程实例涉及到的表</p>\n<p># 流程实例运行时 执行对象表</p>\n<p>SELECT * FROM <code>act_ru_execution</code></p>\n<p># 流程实例运行时 身份联系表</p>\n<p>SELECT * FROM <code>act_ru_identitylink</code></p>\n<p># 流程实例运行时 用户任务表</p>\n<p>SELECT * FROM <code>act_ru_task</code></p>\n<p># 活动节点历史表</p>\n<p>SELECT * FROM <code>act_hi_actinst</code></p>\n<p># 身份联系表 历史</p>\n<p>SELECT * FROM <code>act_hi_identitylink</code></p>\n<p># 流程实例表 历史</p>\n<p>SELECT * FROM <code>act_hi_procinst</code></p>\n<p># 历史任务表</p>\n<p>SELECT * FROM <code>act_hi_taskinst</code></p>\n<p># 结束流程实例涉及到的表</p>\n<p># 运行时 表数据全部清空</p>\n<p># 历史表 表数据修改 或者增加了数据</p>\n<ol start=\"2\">\n<li><strong>流程定****义与图数据库保存结构</strong></li>\n</ol>\n<p>会更新ACT_RE_MODEL和ACT_GE_BYTEARRAY表，</p>\n<p>ACT_GE_BYTEARRAY表保存了PNG图片和xml文件信息(其实是json格式的字符串)，并关联到ACT_RE_MODEL表。</p>\n<p>ACT_GE_BYTEARRAY表中NAME_列值source-extra行中存储的是：PNG图片</p>\n<p>ACT_GE_BYTEARRAY表中NAME_列值source行中存储的是：xml文件信息</p>\n<p>流程设计器设计流程后，保存数据到ACT_RE_MODEL 表。</p>\n<p>EDITOR_SOURCE_VALUE_ID(流程文件放在ACT_GE_BYTEARRAY中的ID)；</p>\n<p>EDITOR_SOURCE_EXTRA_VALUE_ID(流程文件图像放在ACT_GE_BYTEARRAY中的ID)。 </p>\n","site":{"data":{}},"excerpt":"<h1 id=\"表结构说明\"><a href=\"#表结构说明\" class=\"headerlink\" title=\"表结构说明\"></a>表结构说明</h1>","more":"<h2 id=\"表名规则\"><a href=\"#表名规则\" class=\"headerlink\" title=\"表名规则:\"></a>表名规则:</h2><h3 id=\"Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。\"><a href=\"#Activiti-使用到的表都是-ACT-开头的。表名的第二部分用两个字母表明表的用途。\" class=\"headerlink\" title=\"Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。\"></a>Activiti 使用到的表都是 ACT_ 开头的。表名的第二部分用两个字母表明表的用途。</h3><h2 id=\"表前缀说明\"><a href=\"#表前缀说明\" class=\"headerlink\" title=\"表前缀说明\"></a>表前缀说明</h2><ul>\n<li><p>ACT_GE_  (GE)   表示  general 全局通用数据及设置，各种情况都使用的数据。</p>\n</li>\n<li><p>ACT_HI_  (HI)   表示  history 历史数据表，包含着程执行的历史相关数据，如结束的流程实例，变量，任务，等等</p>\n</li>\n<li><p>ACT_ID_  (ID)   表示  identity 组织机构，用户记录，流程中使用到的用户和组。这些表包含标识的信息，如用户，用户组，等等。</p>\n</li>\n<li><p>ACT_RE_  (RE)   表示  repository 存储，包含的是静态信息，如，流程定义，流程的资源(图片，规则等)。</p>\n</li>\n<li><p>ACT_RU_  (RU)   表示  runtime 运行时，运行时的流程变量，用户任务，变量，职责(job)等运行时的数据。Activiti 只存储实例执行期间的运行时数据，当流程实例结束时，将删除这些记录。这就保证了这些运行时的表小且快。</p>\n</li>\n</ul>\n<h2 id=\"Activiti表总览\"><a href=\"#Activiti表总览\" class=\"headerlink\" title=\"Activiti表总览\"></a>Activiti表总览</h2><h3 id=\"全局数据表-ACT-GE\"><a href=\"#全局数据表-ACT-GE\" class=\"headerlink\" title=\"全局数据表 (ACT_GE_)\"></a>全局数据表 (ACT_GE_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_GE_BYTEARRAY</td>\n<td>二进制数据表，存储通用的流程定义和流程资源。</td>\n</tr>\n<tr>\n<td>ACT_GE_PROPERTY</td>\n<td>系统相关属性，属性数据表存储整个流程引擎级别的数据，初始化表结构时，会默认插入三条记录。</td>\n</tr>\n</tbody></table>\n<h3 id=\"流程历史记录表-ACT-HI\"><a href=\"#流程历史记录表-ACT-HI\" class=\"headerlink\" title=\"流程历史记录表 (ACT_HI_)\"></a>流程历史记录表 (ACT_HI_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_ HI_ACTINST</td>\n<td>历史节点表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ATTACHMENT</td>\n<td>历史附件表</td>\n</tr>\n<tr>\n<td>ACT_ HI_COMMENT</td>\n<td>历史意见表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ DETAIL</td>\n<td>历史详情表，提供历史变量的查询</td>\n</tr>\n<tr>\n<td>ACT_ HI_ IDENTITYLINK</td>\n<td>历史流程人员表</td>\n</tr>\n<tr>\n<td>ACT_ HI_ PROCINST</td>\n<td>历史流程实例表</td>\n</tr>\n<tr>\n<td>ACT_HI_TASKINST</td>\n<td>历史任务实例表</td>\n</tr>\n<tr>\n<td>ACT_HI_VARINST</td>\n<td>历史变量表</td>\n</tr>\n</tbody></table>\n<h3 id=\"用户用户组表-ACT-ID\"><a href=\"#用户用户组表-ACT-ID\" class=\"headerlink\" title=\"用户用户组表 (ACT_ID_)\"></a>用户用户组表 (ACT_ID_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_ID_GROUP</td>\n<td>用户组信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_INFO</td>\n<td>用户扩展信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_MEMBERSHIP</td>\n<td>用户与用户组对应信息表</td>\n</tr>\n<tr>\n<td>ACT_ID_USER</td>\n<td>用户信息表</td>\n</tr>\n</tbody></table>\n<h3 id=\"流程定义表-ACT-RE\"><a href=\"#流程定义表-ACT-RE\" class=\"headerlink\" title=\"流程定义表 (ACT_RE_)\"></a>流程定义表 (ACT_RE_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_RE_DEPLOYMENT</td>\n<td>部署信息表</td>\n</tr>\n<tr>\n<td>ACT_RE_MODEL</td>\n<td>流程设计模型部署表</td>\n</tr>\n<tr>\n<td>ACT_RE_PROCDEF</td>\n<td>流程定义数据表</td>\n</tr>\n</tbody></table>\n<h3 id=\"运行实例表-ACT-RU\"><a href=\"#运行实例表-ACT-RU\" class=\"headerlink\" title=\"运行实例表 (ACT_RU_)\"></a>运行实例表 (ACT_RU_)</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_RU_EVENT_SUBSCR</td>\n<td>运行时事件 throwEvent、catchEvent 时间监听信息表</td>\n</tr>\n<tr>\n<td>ACT_RU_EXECUTION</td>\n<td>运行时流程执行实例</td>\n</tr>\n<tr>\n<td>ACT_RU_IDENTITYLINK</td>\n<td>运行时流程人员表，主要存储任务节点与参与者的相关信息</td>\n</tr>\n<tr>\n<td>ACT_RU_JOB</td>\n<td>运行时定时任务数据表</td>\n</tr>\n<tr>\n<td>ACT_RU_TASK</td>\n<td>运行时任务节点表</td>\n</tr>\n<tr>\n<td>ACT_RU_VARIABLE</td>\n<td>运行时流程变量数据表</td>\n</tr>\n</tbody></table>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><table>\n<thead>\n<tr>\n<th>表名</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACT_EVT_LOG</td>\n<td>事件日志</td>\n</tr>\n<tr>\n<td>ACT_PROCDEF_INFO</td>\n<td>流程定义的动态变更信息</td>\n</tr>\n</tbody></table>\n<h2 id=\"Acticiti表详情\"><a href=\"#Acticiti表详情\" class=\"headerlink\" title=\"Acticiti表详情\"></a>Acticiti表详情</h2><h3 id=\"ACT-GE-BYTEARRAY表结构\"><a href=\"#ACT-GE-BYTEARRAY表结构\" class=\"headerlink\" title=\"ACT_GE_BYTEARRAY表结构\"></a>ACT_GE_BYTEARRAY表结构</h3><pre><code> 二进制数据表，存储通用的流程定义和流程资源。(act_ge_bytearray)\n</code></pre>\n<p>​    保存流程定义图片和xml、Serializable(序列化)的变量,即保存所有二进制数据，特别注意类路径部署时候，不要把svn等隐藏文件或者其他与流程无关的文件也一起部署到该表中，会造成一些错误(可能导致流程定义无法删除)</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>Y</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>Y</td>\n<td>Version(版本)</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>Y</td>\n<td>部署的文件名称，如：leave.bpmn.png,leave.bpmn20.xml</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>Y</td>\n<td>部署表ID</td>\n</tr>\n<tr>\n<td>BYTES_</td>\n<td>字节</td>\n<td>varbinary(max)</td>\n<td></td>\n<td>Y</td>\n<td>部署文件</td>\n</tr>\n<tr>\n<td>GENERATED_</td>\n<td>是否是引擎生成</td>\n<td>tinyint</td>\n<td></td>\n<td>Y</td>\n<td>0为用户生成，1为activiti生成</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-GE-PROPERTY表结构\"><a href=\"#ACT-GE-PROPERTY表结构\" class=\"headerlink\" title=\"ACT_GE_PROPERTY表结构\"></a>ACT_GE_PROPERTY表结构</h3><p>​    属性数据表(act_ge_property)</p>\n<p>​    属性数据表。存储整个流程引擎级别的数据。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>schema.versionschema.historynext.dbid</td>\n</tr>\n<tr>\n<td>VALUE_</td>\n<td>值</td>\n<td>nvarchar(300)</td>\n<td></td>\n<td>√</td>\n<td>5.<strong>create</strong>**(**<strong>5.</strong>)</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>version</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-ACTINST表结构\"><a href=\"#ACT-HI-ACTINST表结构\" class=\"headerlink\" title=\"ACT_HI_ACTINST表结构\"></a>ACT_HI_ACTINST表结构</h3><p>​    历史节点表(act_hi_actinst)</p>\n<p>​    历史活动信息。这里记录流程流转过的所有节点，与HI_TASKINST不同的是，taskinst只记录usertask内容</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点ID</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td></td>\n<td>节点定义ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID 其他节点类型实例ID在这里为空</td>\n</tr>\n<tr>\n<td>CALL_PROC_INST_ID_</td>\n<td>调用外部的流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>调用外部流程的流程实例ID’</td>\n</tr>\n<tr>\n<td>ACT_NAME_</td>\n<td>节点名称</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td>√</td>\n<td>节点定义名称</td>\n</tr>\n<tr>\n<td>ACT_TYPE_</td>\n<td>节点类型</td>\n<td>nvarchar(225)</td>\n<td></td>\n<td></td>\n<td>如startEvent、userTask</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点签收人</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>2013-09-15 11:30:00</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>2013-09-15 11:30:00</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>numeric(19,0)</td>\n<td></td>\n<td>√</td>\n<td>毫秒值</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-ATTACHMENT表结构\"><a href=\"#ACT-HI-ATTACHMENT表结构\" class=\"headerlink\" title=\"ACT_HI_ATTACHMENT表结构\"></a>ACT_HI_ATTACHMENT表结构</h3><pre><code> 历史附件表( act_hi_attachment )\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>integer</td>\n<td></td>\n<td>√</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>附件名称</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>附件类型</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>URL_</td>\n<td>URL_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>附件地址</td>\n</tr>\n<tr>\n<td>CONTENT_ ID_</td>\n<td>字节表的ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY的ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-COMMENT表结构\"><a href=\"#ACT-HI-COMMENT表结构\" class=\"headerlink\" title=\"ACT_HI_COMMENT表结构\"></a>ACT_HI_COMMENT表结构</h3><p> 历史意见表( act_hi_comment )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类型：event(事件)comment(意见)</td>\n</tr>\n<tr>\n<td>TIME_</td>\n<td>时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>填写时间’</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>填写人</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点任务ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>ACTION_</td>\n<td>行为类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>见备注1</td>\n</tr>\n<tr>\n<td>MESSAGE_</td>\n<td>基本内容</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>用于存放流程产生的信息，比如审批意见</td>\n</tr>\n<tr>\n<td>FULL_MSG_</td>\n<td>全部内容</td>\n<td>varbinary(max)</td>\n<td></td>\n<td>√</td>\n<td>附件地址</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-DETAIL表结构\"><a href=\"#ACT-HI-DETAIL表结构\" class=\"headerlink\" title=\"ACT_HI_DETAIL表结构\"></a>ACT_HI_DETAIL表结构</h3><pre><code> 历史详情表( act_hi_detail )\n</code></pre>\n<p>​    流程中产生的变量详细，包括控制流程流转的变量，业务表单中填写的流程需要用到的变量等。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>见备注2</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID</td>\n</tr>\n<tr>\n<td>ACT_INST_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>ACT_HI_ACTINST表的ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>名称</td>\n</tr>\n<tr>\n<td>VAR_TYPE_</td>\n<td>参数类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>见备注3</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>Version</td>\n</tr>\n<tr>\n<td>TIME_</td>\n<td>时间戳</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY表的ID</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>double precision</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为Double</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>numeric</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为long</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>存储变量值类型为String</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>nvarchar</td>\n<td></td>\n<td>√</td>\n<td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-IDENTITYLINK表结构\"><a href=\"#ACT-HI-IDENTITYLINK表结构\" class=\"headerlink\" title=\"ACT_HI_IDENTITYLINK表结构\"></a>ACT_HI_IDENTITYLINK表结构</h3><p>​    历史流程人员表( act_ru_identitylink )</p>\n<p>​    任务参与者数据表。主要存储历史节点参与者的信息 </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>GROUP_ID_</td>\n<td>组ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>组ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注4</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-PROCINST表结构\"><a href=\"#ACT-HI-PROCINST表结构\" class=\"headerlink\" title=\"ACT_HI_PROCINST表结构\"></a>ACT_HI_PROCINST表结构</h3><pre><code> 历史流程实例表(act_hi_procinst)\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键，业务表单的ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>开始时间</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>结束时间</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>Numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>START_USER_ID_</td>\n<td>起草人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>起草人</td>\n</tr>\n<tr>\n<td>START_ACT_ID_</td>\n<td>开始节点ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>起草环节ID</td>\n</tr>\n<tr>\n<td>END_ACT_ID_</td>\n<td>结束节点ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>结束环节ID</td>\n</tr>\n<tr>\n<td>SUPER_PROCESS_INSTANCE_ID_</td>\n<td>父流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父流程实例ID</td>\n</tr>\n<tr>\n<td>DELETE_REASON_</td>\n<td>删除原因</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>删除原因</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-TASKINST表结构\"><a href=\"#ACT-HI-TASKINST表结构\" class=\"headerlink\" title=\"ACT_HI_TASKINST表结构\"></a>ACT_HI_TASKINST表结构</h3><pre><code> 历史任务实例表( act_hi_taskinst )\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>TASK_DEF_KEY_</td>\n<td>节点定义ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点定义ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>varchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>PARENT_TASK_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(400)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>OWNER_</td>\n<td>实际签收人 任务的拥有者</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人(默认为空，只有在委托时才有值)</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人或被委托</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人或被委托</td>\n</tr>\n<tr>\n<td>START_TIME_</td>\n<td>开始时间</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>开始时间</td>\n</tr>\n<tr>\n<td>CLAIM_TIME_</td>\n<td>提醒时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>提醒时间</td>\n</tr>\n<tr>\n<td>END_TIME_</td>\n<td>结束时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>结束时间</td>\n</tr>\n<tr>\n<td>DURATION_</td>\n<td>耗时</td>\n<td>numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>DELETE_REASON_</td>\n<td>删除原因</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>删除原因(completed,deleted)</td>\n</tr>\n<tr>\n<td>PRIORITY_</td>\n<td>优先级别</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>优先级别</td>\n</tr>\n<tr>\n<td>DUE_DATE_</td>\n<td>过期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>过期时间，表明任务应在多长时间内完成</td>\n</tr>\n<tr>\n<td>FORM_KEY_</td>\n<td>节点定义的formkey</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>desinger节点定义的form_key属性</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-HI-VARINST表结构\"><a href=\"#ACT-HI-VARINST表结构\" class=\"headerlink\" title=\"ACT_HI_VARINST表结构\"></a>ACT_HI_VARINST表结构</h3><p> 历史变量表( act_hi_varinst )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>任务实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>任务实例ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>参数名称(英文)</td>\n</tr>\n<tr>\n<td>VAR_TYPE_</td>\n<td>参数类型</td>\n<td>varchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注5</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>乐观锁 Version</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar(400)</td>\n<td></td>\n<td>√</td>\n<td>ACT_GE_BYTEARRAY表的主键</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>存储DoubleType类型的数据</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>存储LongType类型的数据</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>备注6</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>此处存储的是JPA持久化对象时，才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-GROUP表结构\"><a href=\"#ACT-ID-GROUP表结构\" class=\"headerlink\" title=\"ACT_ID_GROUP表结构\"></a>ACT_ID_GROUP表结构</h3><p> 用户组信息表( act_id_group )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>组名称</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类型</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-INFO表结构\"><a href=\"#ACT-ID-INFO表结构\" class=\"headerlink\" title=\"ACT_ID_INFO表结构\"></a>ACT_ID_INFO表结构</h3><p> 用户扩展信息表( act_id_info )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>VALUE_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PASSWORD_</td>\n<td></td>\n<td>Image</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td></td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-MEMBERSHIP表结构\"><a href=\"#ACT-ID-MEMBERSHIP表结构\" class=\"headerlink\" title=\"ACT_ID_MEMBERSHIP表结构\"></a>ACT_ID_MEMBERSHIP表结构</h3><p> 用户与分组对应信息表( act_id_membership )</p>\n<p>用来保存用户的分组信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>USER_ID</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>GROUP_ID</td>\n<td>用户组ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-ID-USER表结构\"><a href=\"#ACT-ID-USER表结构\" class=\"headerlink\" title=\"ACT_ID_USER表结构\"></a>ACT_ID_USER表结构</h3><p> 用户信息表( act_id_user )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>FIRST_</td>\n<td>姓</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>LAST_</td>\n<td>名</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EMAIL_</td>\n<td>EMAIL_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PWD_</td>\n<td>密码</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>PICTURE_ ID_</td>\n<td>图片ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-DEPLOYMENT表结构\"><a href=\"#ACT-RE-DEPLOYMENT表结构\" class=\"headerlink\" title=\"ACT_RE_DEPLOYMENT表结构\"></a>ACT_RE_DEPLOYMENT表结构</h3><p>部署信息表( act_re_deployment )</p>\n<p>部署流程定义时需要被持久化保存下来的信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键ID</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>类别</td>\n</tr>\n<tr>\n<td>DEPLOY_TIME_</td>\n<td>部署时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>部署时间</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>部署名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>部署文件名</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-MODEL表结构\"><a href=\"#ACT-RE-MODEL表结构\" class=\"headerlink\" title=\"ACT_RE_MODEL表结构\"></a>ACT_RE_MODEL表结构</h3><p>流程设计模型部署表( act_re_model )</p>\n<p>流程设计器设计流程后，保存数据到该表。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td>KEY_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>key</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>分类</td>\n</tr>\n<tr>\n<td>CREATE_TIME_</td>\n<td>创建时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>LAST_UPDATE_TIME_</td>\n<td>最新修改时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>最新修改时间</td>\n</tr>\n<tr>\n<td>VERSION_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>版本</td>\n</tr>\n<tr>\n<td>META_INFO_</td>\n<td>META_INFO_</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>以json格式保存流程定义的信息</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>部署ID</td>\n</tr>\n<tr>\n<td>EDITOR_SOURCE_VALUE_ID_</td>\n<td></td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EDITOR_SOURCE_EXTRA_VALUE_ID_</td>\n<td></td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RE-PROCDEF表结构\"><a href=\"#ACT-RE-PROCDEF表结构\" class=\"headerlink\" title=\"ACT_RE_PROCDEF表结构\"></a>ACT_RE_PROCDEF表结构</h3><p>流程定义数据表( act_re_procdef )</p>\n<p>业务流程定义数据表。此表和 ACT_RE_DEPLOYMENT 是多对一的关系，即，一个部署的bar包里可能包含多个流程定义文件，每个流程定义文件都会有一条记录在 ACT_REPROCDEF 表内，每个流程定义的数据，都会对于 ACT_GE_BYTEARRAY 表内的一个资源文件和 PNG 图片文件。和 ACT_GE_BYTEARRAY 的关联是通过程序用ACT_GE_BYTEARRAY.NAME 与 ACT_RE_PROCDEF.NAME 完成的，在数据库表结构中没有体现。 </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>CATEGORY_</td>\n<td>分类</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程定义的Namespace就是类别</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>名称</td>\n</tr>\n<tr>\n<td>KEY_</td>\n<td>定义的KEY</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>VERSION_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td></td>\n<td>版本</td>\n</tr>\n<tr>\n<td>DEPLOYMENT_ID_</td>\n<td>部署表ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>部署表ID</td>\n</tr>\n<tr>\n<td>RESOURCE_NAME_</td>\n<td>bpmn文件名称</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>流程bpmn文件名称</td>\n</tr>\n<tr>\n<td>DGRM_RESOURCE_NAME_</td>\n<td>png图片名称</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>流程图片名称</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>描述</td>\n</tr>\n<tr>\n<td>HAS_START_FORM_KEY_</td>\n<td>是否存在开始节点formKey</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>start节点是否存在formKey 0否 1是</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>1 激活 2挂起</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EVENT-SUBSCR表结构\"><a href=\"#ACT-RU-EVENT-SUBSCR表结构\" class=\"headerlink\" title=\"ACT_RU_EVENT_SUBSCR表结构\"></a>ACT_RU_EVENT_SUBSCR表结构</h3><table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>事件ID</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>事件ID</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁Version</td>\n</tr>\n<tr>\n<td>EVENT_TYPE_</td>\n<td>事件类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>事件类型</td>\n</tr>\n<tr>\n<td>EVENT_NAME_</td>\n<td>事件名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>事件名称</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>ACTIVITY_ID_</td>\n<td>活动实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>活动实例ID</td>\n</tr>\n<tr>\n<td>CONFIGURATION_</td>\n<td>配置</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>配置</td>\n</tr>\n<tr>\n<td>CREATED_</td>\n<td>是否创建</td>\n<td>datetime</td>\n<td></td>\n<td></td>\n<td>默认值 当前系统时间戳CURRENT_TIMESTAMP</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EXECUTION表结构\"><a href=\"#ACT-RU-EXECUTION表结构\" class=\"headerlink\" title=\"ACT_RU_EXECUTION表结构\"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键ID</td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>SUPER_EXEC_</td>\n<td>SUPER_EXEC_</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>SUPER_EXEC_</td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID即ACT_HI_ACTINST中ID</td>\n</tr>\n<tr>\n<td>IS_ACTIVE_</td>\n<td>是否存活</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否存活</td>\n</tr>\n<tr>\n<td>IS_CONCURRENT_</td>\n<td>是否并行</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否为并行(true/false)</td>\n</tr>\n<tr>\n<td>IS_SCOPE_</td>\n<td>IS_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_SCOPE_</td>\n</tr>\n<tr>\n<td>IS_EVENT_SCOPE_</td>\n<td>IS_EVENT_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_EVENT_SCOPE_</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>挂起状态 1激活 2挂起</td>\n</tr>\n<tr>\n<td>CACHED_ENT_STATE_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-IDENTITYLINK表结构\"><a href=\"#ACT-RU-IDENTITYLINK表结构\" class=\"headerlink\" title=\"ACT_RU_IDENTITYLINK表结构\"></a>ACT_RU_IDENTITYLINK表结构</h3><p>运行时流程人员表( act_ru_identitylink )</p>\n<p>任务参与者数据表。主要存储当前节点参与者的信息。</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>GROUP_ID_</td>\n<td>组ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>组ID</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>备注7</td>\n</tr>\n<tr>\n<td>USER_ID_</td>\n<td>用户ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>用户ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-JOB表结构\"><a href=\"#ACT-RU-JOB表结构\" class=\"headerlink\" title=\"ACT_RU_JOB表结构\"></a>ACT_RU_JOB表结构</h3><p>运行时定时任务数据表( act_ru_job )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>标识</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>标识</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>版本</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>版本</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>类型</td>\n</tr>\n<tr>\n<td>LOCK_EXP_TIME_</td>\n<td>锁定释放时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>锁定释放时间</td>\n</tr>\n<tr>\n<td>LOCK_OWNER_</td>\n<td>挂起者</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>挂起者</td>\n</tr>\n<tr>\n<td>EXCLUSIVE_</td>\n<td></td>\n<td>bit</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROCESS_INSTANCE_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>RETRIES_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n<tr>\n<td>EXCEPTION_STACK_ID_</td>\n<td>异常信息ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>异常信息ID</td>\n</tr>\n<tr>\n<td>EXCEPTION_MSG_</td>\n<td>异常信息</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>异常信息</td>\n</tr>\n<tr>\n<td>DUEDATE_</td>\n<td>到期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>到期时间</td>\n</tr>\n<tr>\n<td>REPEAT_</td>\n<td>重复</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>重复</td>\n</tr>\n<tr>\n<td>HANDLER_TYPE_</td>\n<td>处理类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>处理类型</td>\n</tr>\n<tr>\n<td>HANDLER_CFG_</td>\n<td></td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>标识</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-TASK表结构\"><a href=\"#ACT-RU-TASK表结构\" class=\"headerlink\" title=\"ACT_RU_TASK表结构\"></a>ACT_RU_TASK表结构</h3><p>运行时任务节点表( act_ru_task )</p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行实例ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>节点定义名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点定义名称</td>\n</tr>\n<tr>\n<td>PARENT_TASK_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>DESCRIPTION_</td>\n<td>节点定义描述</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>节点定义描述</td>\n</tr>\n<tr>\n<td>TASK_DEF_KEY_</td>\n<td>节点定义的KEY</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>任务定义的ID</td>\n</tr>\n<tr>\n<td>OWNER_</td>\n<td>实际签收人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>拥有者(一般情况下为空，只有在委托时才有值)</td>\n</tr>\n<tr>\n<td>ASSIGNEE_</td>\n<td>签收人或委托人</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>签收人或委托人</td>\n</tr>\n<tr>\n<td>DELEGATION_</td>\n<td>委托类型</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>备注8</td>\n</tr>\n<tr>\n<td>PRIORITY_</td>\n<td>优先级别</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>优先级别，默认为：50</td>\n</tr>\n<tr>\n<td>CREATE_TIME_</td>\n<td>创建时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>DUE_DATE_</td>\n<td>过期时间</td>\n<td>datetime</td>\n<td></td>\n<td>√</td>\n<td>耗时</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>1代表激活 2代表挂起</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-VARIABLE表结构\"><a href=\"#ACT-RU-VARIABLE表结构\" class=\"headerlink\" title=\"ACT_RU_VARIABLE表结构\"></a>ACT_RU_VARIABLE表结构</h3><p>运行时流程变量数据表( act_ru_variable ) </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>主键标识</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>TYPE_</td>\n<td>类型</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>备注9</td>\n</tr>\n<tr>\n<td>NAME_</td>\n<td>名称</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td></td>\n<td>变量名称</td>\n</tr>\n<tr>\n<td>EXECUTION_ID_</td>\n<td>执行实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>执行的ID</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>TASK_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID(Local)</td>\n</tr>\n<tr>\n<td>BYTEARRAY_ID_</td>\n<td>字节表ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>字节表的ID(ACT_GE_BYTEARRAY)</td>\n</tr>\n<tr>\n<td>DOUBLE_</td>\n<td>DOUBLE_</td>\n<td>float</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为Double</td>\n</tr>\n<tr>\n<td>LONG_</td>\n<td>LONG_</td>\n<td>numeric(19)</td>\n<td></td>\n<td>√</td>\n<td>存储变量类型为long</td>\n</tr>\n<tr>\n<td>TEXT_</td>\n<td>TEXT_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>‘存储变量值类型为String 如此处存储持久化对象时，值jpa对象的class</td>\n</tr>\n<tr>\n<td>TEXT2_</td>\n<td>TEXT2_</td>\n<td>nvarchar(4000)</td>\n<td></td>\n<td>√</td>\n<td>此处存储的是JPA持久化对象时，  才会有值。此值为对象ID</td>\n</tr>\n</tbody></table>\n<h3 id=\"ACT-RU-EXECUTION表结构-1\"><a href=\"#ACT-RU-EXECUTION表结构-1\" class=\"headerlink\" title=\"ACT_RU_EXECUTION表结构\"></a>ACT_RU_EXECUTION表结构</h3><p>运行时流程执行实例表( act_ru_execution )     </p>\n<table>\n<thead>\n<tr>\n<th>字段名称</th>\n<th>字段描述</th>\n<th>数据类型</th>\n<th>主键</th>\n<th>为空</th>\n<th>取值说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ID_</td>\n<td>ID_</td>\n<td>nvarchar(64)</td>\n<td>√</td>\n<td></td>\n<td>ID_</td>\n</tr>\n<tr>\n<td>REV_</td>\n<td>乐观锁</td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td>乐观锁</td>\n</tr>\n<tr>\n<td>PROC_INST_ID_</td>\n<td>流程实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td></td>\n<td>流程实例ID</td>\n</tr>\n<tr>\n<td>BUSINESS_KEY_</td>\n<td>业务主键ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>业务主键ID</td>\n</tr>\n<tr>\n<td>PARENT_ID_</td>\n<td>父节点实例ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>父节点实例ID</td>\n</tr>\n<tr>\n<td>PROC_DEF_ID_</td>\n<td>流程定义ID</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>流程定义ID</td>\n</tr>\n<tr>\n<td>SUPER_EXEC_</td>\n<td>SUPER_EXEC_</td>\n<td>nvarchar(64)</td>\n<td></td>\n<td>√</td>\n<td>SUPER_EXEC_</td>\n</tr>\n<tr>\n<td>ACT_ID_</td>\n<td>节点实例ID</td>\n<td>nvarchar(255)</td>\n<td></td>\n<td>√</td>\n<td>节点实例ID即ACT_HI_ACTINST中ID</td>\n</tr>\n<tr>\n<td>IS_ACTIVE_</td>\n<td>是否存活</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否存活</td>\n</tr>\n<tr>\n<td>IS_CONCURRENT_</td>\n<td>是否并行</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>是否为并行(true/false)</td>\n</tr>\n<tr>\n<td>IS_SCOPE_</td>\n<td>IS_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_SCOPE_</td>\n</tr>\n<tr>\n<td>IS_EVENT_SCOPE_</td>\n<td>IS_EVENT_SCOPE_</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>IS_EVENT_SCOPE_</td>\n</tr>\n<tr>\n<td>SUSPENSION_STATE_</td>\n<td>是否挂起</td>\n<td>tinyint</td>\n<td></td>\n<td>√</td>\n<td>挂起状态 1激活 2挂起</td>\n</tr>\n<tr>\n<td>CACHED_ENT_STATE_</td>\n<td></td>\n<td>int</td>\n<td></td>\n<td>√</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"操作activiti的各个环节涉及到的关键表\"><a href=\"#操作activiti的各个环节涉及到的关键表\" class=\"headerlink\" title=\"操作activiti的各个环节涉及到的关键表\"></a>操作activiti的各个环节涉及到的关键表</h2><p># 部署流程定义涉及到的表</p>\n<p># 流程部署表</p>\n<p>SELECT * FROM <code>act_re_deployment</code></p>\n<p># 流程定义表</p>\n<p>SELECT * FROM <code>act_re_procdef</code></p>\n<p># 资源文件表</p>\n<p>SELECT * FROM <code>act_ge_bytearray</code></p>\n<p># 系统配置表</p>\n<p>SELECT * FROM <code>act_ge_property</code></p>\n<p>################################</p>\n<p># 启动流程实例涉及到的表</p>\n<p># 流程实例运行时 执行对象表</p>\n<p>SELECT * FROM <code>act_ru_execution</code></p>\n<p># 流程实例运行时 身份联系表</p>\n<p>SELECT * FROM <code>act_ru_identitylink</code></p>\n<p># 流程实例运行时 用户任务表</p>\n<p>SELECT * FROM <code>act_ru_task</code></p>\n<p># 活动节点历史表</p>\n<p>SELECT * FROM <code>act_hi_actinst</code></p>\n<p># 身份联系表 历史</p>\n<p>SELECT * FROM <code>act_hi_identitylink</code></p>\n<p># 流程实例表 历史</p>\n<p>SELECT * FROM <code>act_hi_procinst</code></p>\n<p># 历史任务表</p>\n<p>SELECT * FROM <code>act_hi_taskinst</code></p>\n<p># 结束流程实例涉及到的表</p>\n<p># 运行时 表数据全部清空</p>\n<p># 历史表 表数据修改 或者增加了数据</p>\n<ol start=\"2\">\n<li><strong>流程定****义与图数据库保存结构</strong></li>\n</ol>\n<p>会更新ACT_RE_MODEL和ACT_GE_BYTEARRAY表，</p>\n<p>ACT_GE_BYTEARRAY表保存了PNG图片和xml文件信息(其实是json格式的字符串)，并关联到ACT_RE_MODEL表。</p>\n<p>ACT_GE_BYTEARRAY表中NAME_列值source-extra行中存储的是：PNG图片</p>\n<p>ACT_GE_BYTEARRAY表中NAME_列值source行中存储的是：xml文件信息</p>\n<p>流程设计器设计流程后，保存数据到ACT_RE_MODEL 表。</p>\n<p>EDITOR_SOURCE_VALUE_ID(流程文件放在ACT_GE_BYTEARRAY中的ID)；</p>\n<p>EDITOR_SOURCE_EXTRA_VALUE_ID(流程文件图像放在ACT_GE_BYTEARRAY中的ID)。 </p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}